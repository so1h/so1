JWasm v2.12pre, Nov 27 2013
ASM\N_LXMUL.ASM
                                ;[]-----------------------------------------------------------------[]
                                ;|      N_LXMUL.ASM -- long multiply routine                         |
                                ;[]-----------------------------------------------------------------[]

                                ;
                                ;       C/C++ Run Time Library - Version 5.0
                                ;
                                ;       Copyright (c) 1987, 1992 by Borland International
                                ;       All Rights Reserved.
                                ;

                                ;        INCLUDE RULES.ASI

                                ; calls to this routine are generated by the compiler to perform
                                ; long multiplications.

                                ; There is no check for overflow.  Consequently, the same routine
                                ; is used for both signed and unsigned long multiplies.

                                ;
                                ; in:
                                ;       (dx:ax) - 32bit arg1
                                ;       (cx:bx) - 32bit arg2
                                ; out:
                                ;       (dx:ax) - 32bit product
                                ;
                                ; reg use: bx,cx destroyed, all others preserved or contain result.
                                ;
                                ; hi(result) := lo(hi(arg1) * lo(arg2)) +
                                ;               lo(hi(arg2) * lo(arg1)) +
                                ;               hi(lo(arg1) * lo(arg2))
                                ; lo(result) := lo(lo(arg1) * lo(arg2))
                                ;

00000000                        _TEXT   SEGMENT BYTE PUBLIC 'CODE'
                                        ASSUME  CS:_TEXT

                                        public  N_LXMUL@

00000000                        N_LXMUL@        PROC    NEAR
00000000  56                                    push    si
00000001  96                                    xchg    si, ax          ; save lo1
00000002  92                                    xchg    ax, dx
00000003  85C0                                  test    ax, ax          ; skip mul if hi1==0
00000005  7402                                  jz      nohi1
00000007  F7E3                                  mul     bx              ; hi1 * lo2

00000009                        nohi1:          ; if we jumped here, ax==0 so the following swap works
00000009  E305                                  jcxz    nohi2           ; skip mul if hi2==0
0000000B  91                                    xchg    cx, ax          ; result <-> hi2
0000000C  F7E6                                  mul     si              ; lo1 * hi2
0000000E  03C1                                  add     ax, cx          ; ax = hi1*lo2 + hi2*lo1
00000010                        nohi2:
00000010  96                                    xchg    ax, si
00000011  F7E3                                  mul     bx              ; lo1 * lo2
00000013  03D6                                  add     dx, si          ; hi order result += partials
00000015  5E                                    pop     si
00000016                                        ret
00000017                        N_LXMUL@        ENDP
00000017                        _TEXT   ENDS
                                        END


Macros:

                N a m e                 Type

@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

$$SYMBOLS  . . . . . . . . . . .        32 Bit   0000005C Byte    Private 'DEBSYM'
$$TYPES  . . . . . . . . . . . .        32 Bit   00000004 Byte    Private 'DEBTYP'
_TEXT  . . . . . . . . . . . . .        16 Bit   0017     Byte    Public  'CODE'


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

N_LXMUL@ . . . . . . . . . . . .        P Near   0000     _TEXT    0017 Public   


Symbols:

                N a m e                 Type       Value     Attr

??version  . . . . . . . . . . .        Text   0504
?debug . . . . . . . . . . . . .        Text   ;
nohi1  . . . . . . . . . . . . .        L Near             9h _TEXT 
nohi2  . . . . . . . . . . . . .        L Near            10h _TEXT 

ASM\N_LXMUL.ASM: 61 lines, 2 passes, 0 ms, 0 warnings, 0 errors
