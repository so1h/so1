JWasm v2.12pre, Nov 27 2013
progdb.asm
                                	.286
                                	ifndef	??version
                                	else
                                $comm	macro	name,dist,size,count
 >                              	comm	dist name[size]:BYTE:count
 >                              	endm
                                	endif
00000000                        _TEXT	segment byte public 'CODE'
                                _TEXT	ends
                                DGROUP	group	_DATA,_BSS
                                	assume	cs:_TEXT,ds:DGROUP
00000000                        _DATA	segment word public 'DATA'
00000000                        d@	label	byte
00000000                        d@w	label	word
00000000                        _DATA	ends
00000000                        _BSS	segment word public 'BSS'
00000000                        b@	label	byte
00000000                        b@w	label	word
00000000                        _BSS	ends
00000000                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
00000000                        _main	proc	near
                                   ;	
                                   ;	int main ( int argc, char * argv [ ] ) 
                                   ;	
00000000  C8180000              	enter	24,0
                                   ;	
                                   ;	{
                                   ;		int df ;
                                   ;		word_t n ;
                                   ;	    int nbytes ;
                                   ;		int i, j, k ;
                                   ;		dword_t tam ;
                                   ;		dword_t pos ;
                                   ;		dword_t posDespues ;
                                   ;		
                                   ;		if (argc < 2) return(0) ;
                                   ;	
00000004  837E0402              	cmp	word ptr [bp+4],2
00000008  7D03                  	jge	short @1@3
0000000A  E9FC01                	jmp	@1@30
0000000D                        @1@3:
                                   ;	
                                   ;		
                                   ;		df = open(argv[1], O_RDONLY) ; 
                                   ;	
0000000D  6A01                  	push	1
0000000F  1E                    	push	ds
00000010  8B5E06                	mov	bx,word ptr [bp+6]
00000013  FF7702                	push	word ptr [bx+2]
00000016  E80000                	call	near ptr _open
00000019  83C406                	add	sp,6
0000001C  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;		printf("\n\n open(\"%s\", O_RDONLY) = %i\n", argv[1], df) ;
                                   ;	
0000001F  FF76FE                	push	word ptr [bp-2]
00000022  8B5E06                	mov	bx,word ptr [bp+6]
00000025  FF7702                	push	word ptr [bx+2]
00000028  1E                    	push	ds
00000029  680000                	push	offset DGROUP:s@
0000002C  E80000                	call	near ptr _printf
0000002F  83C408                	add	sp,8
                                   ;	
                                   ;		
                                   ;		if (df > 0) 
                                   ;	
00000032  837EFE00              	cmp	word ptr [bp-2],0
00000036  7F03                  	jg	@@0
00000038  E9CE01                	jmp	@1@30
0000003B                        @@0:
                                   ;	
                                   ;		{
                                   ;	        k = 0 ;                              /* comando es una variable global */
                                   ;	
0000003B  C746F40000            	mov	word ptr [bp-12],0
                                   ;	
                                   ;	        for ( i = 2 ; i < argc ; i ++ )
                                   ;	
00000040  C746F80200            	mov	word ptr [bp-8],2
00000045  EB49                  	jmp	short @1@11
00000047                        @1@5:
                                   ;	
                                   ;	        {
                                   ;	            for ( j = 0 ; argv[i][j] != '\0' ; j++ )
                                   ;	
00000047  C746F60000            	mov	word ptr [bp-10],0
0000004C  EB22                  	jmp	short @1@8
0000004E                        @1@6:
                                   ;	
                                   ;	                comando[0][k++] = toupper(argv[i][j]) ;
                                   ;	
0000004E  8B5EF8                	mov	bx,word ptr [bp-8]
00000051  03DB                  	add	bx,bx
00000053  035E06                	add	bx,word ptr [bp+6]
00000056  8B1F                  	mov	bx,word ptr [bx]
00000058  035EF6                	add	bx,word ptr [bp-10]
0000005B  8A07                  	mov	al,byte ptr [bx]
0000005D  98                    	cbw	
0000005E  50                    	push	ax
0000005F  E80000                	call	near ptr _toupper
00000062  59                    	pop	cx
00000063  8B5EF4                	mov	bx,word ptr [bp-12]
00000066  88870000              	mov	byte ptr DGROUP:_comando[bx],al
0000006A  FF46F4                	inc	word ptr [bp-12]
0000006D  FF46F6                	inc	word ptr [bp-10]
00000070                        @1@8:
00000070  8B5EF8                	mov	bx,word ptr [bp-8]
00000073  03DB                  	add	bx,bx
00000075  035E06                	add	bx,word ptr [bp+6]
00000078  8B1F                  	mov	bx,word ptr [bx]
0000007A  035EF6                	add	bx,word ptr [bp-10]
0000007D  803F00                	cmp	byte ptr [bx],0
00000080  75CC                  	jne	short @1@6
                                   ;	
                                   ;	            comando[0][k++] = ' ' ;
                                   ;	
00000082  8B5EF4                	mov	bx,word ptr [bp-12]
00000085  C687000020            	mov	byte ptr DGROUP:_comando[bx],32
0000008A  FF46F4                	inc	word ptr [bp-12]
0000008D  FF46F8                	inc	word ptr [bp-8]
00000090                        @1@11:
00000090  8B46F8                	mov	ax,word ptr [bp-8]
00000093  3B4604                	cmp	ax,word ptr [bp+4]
00000096  7CAF                  	jl	short @1@5
                                   ;	
                                   ;	        }
                                   ;	        comando[0][k--] = '\0' ;		
                                   ;	
00000098  8B5EF4                	mov	bx,word ptr [bp-12]
0000009B  C687000000            	mov	byte ptr DGROUP:_comando[bx],0
000000A0  FF4EF4                	dec	word ptr [bp-12]
                                   ;	
                                   ;	        inicScanner() ;
                                   ;	
000000A3  E80000                	call	near ptr _inicScanner
                                   ;	
                                   ;	        saltarBlancos() ;
                                   ;	
000000A6  E80000                	call	near ptr _saltarBlancos
                                   ;	
                                   ;	        numDec() ;
                                   ;	
000000A9  E80000                	call	near ptr _numDec
                                   ;	
                                   ;			if ((simb == s_numero) || (simb == s_numeroLargo)) 
                                   ;	
000000AC  833E000013            	cmp	word ptr DGROUP:_simb,19
000000B1  740A                  	je	short @1@14
000000B3  833E000014            	cmp	word ptr DGROUP:_simb,20
000000B8  7403                  	je	@@1
000000BA  E94C01                	jmp	@1@30
000000BD                        @@1:
000000BD                        @1@14:
                                   ;	
                                   ;			{
                                   ;	    		if (simb == s_numero) pos = num ;
                                   ;	
000000BD  833E000013            	cmp	word ptr DGROUP:_simb,19
000000C2  750D                  	jne	short @1@16
000000C4  A10000                	mov	ax,word ptr DGROUP:_num
000000C7  C746EE0000            	mov	word ptr [bp-18],0
000000CC  8946EC                	mov	word ptr [bp-20],ax
000000CF  EB19                  	jmp	short @1@19
000000D1                        @1@16:
                                   ;	
                                   ;	    		else if (simb == s_numeroLargo) pos = numLargo ;
                                   ;	
000000D1  833E000014            	cmp	word ptr DGROUP:_simb,20
000000D6  750F                  	jne	short @1@18
000000D8  8B160200              	mov	dx,word ptr DGROUP:_numLargo+2
000000DC  A10000                	mov	ax,word ptr DGROUP:_numLargo
000000DF  8956EE                	mov	word ptr [bp-18],dx
000000E2  8946EC                	mov	word ptr [bp-20],ax
000000E5  EB03                  	jmp	short @1@19
000000E7                        @1@18:
                                   ;	
                                   ;		    	else return(0) ;
                                   ;	
000000E7  E91F01                	jmp	@1@30
000000EA                        @1@19:
                                   ;	
                                   ;	            saltarBlancos() ;
                                   ;	
000000EA  E80000                	call	near ptr _saltarBlancos
                                   ;	
                                   ;	            numDec() ;
                                   ;	
000000ED  E80000                	call	near ptr _numDec
                                   ;	
                                   ;	    		if (simb != s_numero) return(0) ; 
                                   ;	
000000F0  833E000013            	cmp	word ptr DGROUP:_simb,19
000000F5  7403                  	je	short @1@21
000000F7  E90F01                	jmp	@1@30
000000FA                        @1@21:
                                   ;	
                                   ;	            n = num ;			
                                   ;	
000000FA  A10000                	mov	ax,word ptr DGROUP:_num
000000FD  8946FC                	mov	word ptr [bp-4],ax
                                   ;	
                                   ;				if (n > tamBufer) return(0) ;
                                   ;	
00000100  817EFC0014            	cmp	word ptr [bp-4],5120
00000105  7603                  	jbe	short @1@23
00000107  E9FF00                	jmp	@1@30
0000010A                        @1@23:
                                   ;	
                                   ;				printf("\n pos = %li\n", pos) ;
                                   ;	
0000010A  FF76EE                	push	word ptr [bp-18]
0000010D  FF76EC                	push	word ptr [bp-20]
00000110  1E                    	push	ds
00000111  681E00                	push	offset DGROUP:s@+30
00000114  E80000                	call	near ptr _printf
00000117  83C408                	add	sp,8
                                   ;	
                                   ;	   	        posDespues = lseek(df, pos, SEEK_SET) ;
                                   ;	
0000011A  6A00                  	push	0
0000011C  FF76EE                	push	word ptr [bp-18]
0000011F  FF76EC                	push	word ptr [bp-20]
00000122  FF76FE                	push	word ptr [bp-2]
00000125  E80000                	call	near ptr _lseek
00000128  83C408                	add	sp,8
0000012B  8956EA                	mov	word ptr [bp-22],dx
0000012E  8946E8                	mov	word ptr [bp-24],ax
                                   ;	
                                   ;	         	printf("\n lseek(%i, %li, SEEK_SET) = %li\n", df, pos, posDespues) ;
                                   ;	
00000131  FF76EA                	push	word ptr [bp-22]
00000134  FF76E8                	push	word ptr [bp-24]
00000137  FF76EE                	push	word ptr [bp-18]
0000013A  FF76EC                	push	word ptr [bp-20]
0000013D  FF76FE                	push	word ptr [bp-2]
00000140  1E                    	push	ds
00000141  682B00                	push	offset DGROUP:s@+43
00000144  E80000                	call	near ptr _printf
00000147  83C40E                	add	sp,14
                                   ;	
                                   ;	    	    nbytes = read(df, (pointer_t)&bufer, n) ;
                                   ;	
0000014A  FF76FC                	push	word ptr [bp-4]
0000014D  1E                    	push	ds
0000014E  682000                	push	offset DGROUP:_bufer
00000151  FF76FE                	push	word ptr [bp-2]
00000154  E80000                	call	near ptr _read
00000157  83C408                	add	sp,8
0000015A  8946FA                	mov	word ptr [bp-6],ax
                                   ;	
                                   ;				posDespues = lseek(df, 0, SEEK_CUR) ;
                                   ;	
0000015D  6A01                  	push	1
0000015F  6A00                  	push	0
00000161  6A00                  	push	0
00000163  FF76FE                	push	word ptr [bp-2]
00000166  E80000                	call	near ptr _lseek
00000169  83C408                	add	sp,8
0000016C  8956EA                	mov	word ptr [bp-22],dx
0000016F  8946E8                	mov	word ptr [bp-24],ax
                                   ;	
                                   ;				printf("\n posDespues = %li\n", posDespues) ;
                                   ;	
00000172  FF76EA                	push	word ptr [bp-22]
00000175  FF76E8                	push	word ptr [bp-24]
00000178  1E                    	push	ds
00000179  684D00                	push	offset DGROUP:s@+77
0000017C  E80000                	call	near ptr _printf
0000017F  83C408                	add	sp,8
                                   ;	
                                   ;	   	        tam = lseek(df, 0, SEEK_END) ;
                                   ;	
00000182  6A02                  	push	2
00000184  6A00                  	push	0
00000186  6A00                  	push	0
00000188  FF76FE                	push	word ptr [bp-2]
0000018B  E80000                	call	near ptr _lseek
0000018E  83C408                	add	sp,8
00000191  8956F2                	mov	word ptr [bp-14],dx
00000194  8946F0                	mov	word ptr [bp-16],ax
                                   ;	
                                   ;		        printf(
                                   ;	
                                   ;	
                                   ;				    "\n read(%i, &bufer, %i) = %i   pos = %li tam = %li\n", 
                                   ;				    df, n, nbytes, posDespues, tam
                                   ;				) ;
                                   ;	
00000197  FF76F2                	push	word ptr [bp-14]
0000019A  FF76F0                	push	word ptr [bp-16]
0000019D  FF76EA                	push	word ptr [bp-22]
000001A0  FF76E8                	push	word ptr [bp-24]
000001A3  FF76FA                	push	word ptr [bp-6]
000001A6  FF76FC                	push	word ptr [bp-4]
000001A9  FF76FE                	push	word ptr [bp-2]
000001AC  1E                    	push	ds
000001AD  686100                	push	offset DGROUP:s@+97
000001B0  E80000                	call	near ptr _printf
000001B3  83C412                	add	sp,18
                                   ;	
                                   ;		
                                   ;	            for ( i = 0 ; i < nbytes ; i++ ) 
                                   ;	
000001B6  C746F80000            	mov	word ptr [bp-8],0
000001BB  EB3A                  	jmp	short @1@28
000001BD                        @1@24:
                                   ;	
                                   ;		        {
                                   ;	                if ( i % 16 == 0) printf("\n %06lX: ", pos + i ) ;	   
                                   ;	
000001BD  8B46F8                	mov	ax,word ptr [bp-8]
000001C0  BB1000                	mov	bx,16
000001C3  99                    	cwd	
000001C4  F7FB                  	idiv	bx
000001C6  0BD2                  	or	dx,dx
000001C8  7516                  	jne	short @1@26
000001CA  8B46F8                	mov	ax,word ptr [bp-8]
000001CD  99                    	cwd	
000001CE  0346EC                	add	ax,word ptr [bp-20]
000001D1  1356EE                	adc	dx,word ptr [bp-18]
000001D4  52                    	push	dx
000001D5  50                    	push	ax
000001D6  1E                    	push	ds
000001D7  689400                	push	offset DGROUP:s@+148
000001DA  E80000                	call	near ptr _printf
000001DD  83C408                	add	sp,8
000001E0                        @1@26:
                                   ;	
                                   ;	                printf("%02X ", bufer[i]) ;	
                                   ;	
000001E0  8B5EF8                	mov	bx,word ptr [bp-8]
000001E3  8A872000              	mov	al,byte ptr DGROUP:_bufer[bx]
000001E7  B400                  	mov	ah,0
000001E9  50                    	push	ax
000001EA  1E                    	push	ds
000001EB  689E00                	push	offset DGROUP:s@+158
000001EE  E80000                	call	near ptr _printf
000001F1  83C406                	add	sp,6
000001F4  FF46F8                	inc	word ptr [bp-8]
000001F7                        @1@28:
000001F7  8B46F8                	mov	ax,word ptr [bp-8]
000001FA  3B46FA                	cmp	ax,word ptr [bp-6]
000001FD  7CBE                  	jl	short @1@24
                                   ;	
                                   ;		        }
                                   ;		     	printf("\n") ;
                                   ;	
000001FF  1E                    	push	ds
00000200  68A400                	push	offset DGROUP:s@+164
00000203  E80000                	call	near ptr _printf
00000206  83C404                	add	sp,4
00000209                        @1@30:
                                   ;	
                                   ;			}
                                   ;	    }	
                                   ;	#if (FALSE)	
                                   ;		aio_read(df, bufer, 512) ;
                                   ;		close(df) ;
                                   ;	
                                   ;		printf("\n leer tecla ... ") ;
                                   ;		getchar() ;
                                   ;		receive(1, &respuesta) ;
                                   ;		printf("\n\n respuesta = %s\n", respuesta.info) ;
                                   ;	#endif 
                                   ;	
                                   ;		return(0) ;
                                   ;	
00000209  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
0000020B  C9                    	leave	
0000020C                        	ret	
0000020D                        _main	endp
0000020D                        _TEXT	ends
00000000                        _BSS	segment word public 'BSS'
00000000                        _respuesta	label	word
00000000  000000000000000000    	db	32 dup (?)
00000020                        _bufer	label	byte
00000020  000000000000000000    	db	5120 dup (?)
00001420                        _BSS	ends
00000000                        _DATA	segment word public 'DATA'
00000000                        s@	label	byte
00000000  0A                    	db	10
00000001  0A                    	db	10
00000002  206F70656E28222573    	db	' open("%s", O_RDONLY) = %i'
0000001C  0A                    	db	10
0000001D  00                    	db	0
0000001E  0A                    	db	10
0000001F  20706F73203D20256C    	db	' pos = %li'
00000029  0A                    	db	10
0000002A  00                    	db	0
0000002B  0A                    	db	10
0000002C  206C7365656B282569    	db	' lseek(%i, %li, SEEK_SET) = %li'
0000004B  0A                    	db	10
0000004C  00                    	db	0
0000004D  0A                    	db	10
0000004E  20706F734465737075    	db	' posDespues = %li'
0000005F  0A                    	db	10
00000060  00                    	db	0
00000061  0A                    	db	10
00000062  20726561642825692C    	db	' read(%i, &bufer, %i) = %i   pos = %li tam = %li'
00000092  0A                    	db	10
00000093  00                    	db	0
00000094  0A                    	db	10
00000095  202530366C583A20      	db	' %06lX: '
0000009D  00                    	db	0
0000009E  2530325820            	db	'%02X '
000000A3  00                    	db	0
000000A4  0A                    	db	10
000000A5  00                    	db	0
000000A6                        _DATA	ends
0000020D                        _TEXT	segment byte public 'CODE'
0000020D                        _TEXT	ends
                                	extrn	_comando:byte
                                	extrn	_simb:word
                                	extrn	_num:word
                                	extrn	_numLargo:dword
                                	extrn	_inicScanner:near
                                	extrn	_saltarBlancos:near
                                	extrn	_numDec:near
                                	extrn	_open:near
                                	extrn	_lseek:near
                                	extrn	_read:near
                                	extrn	_printf:near
                                	extrn	_toupper:near
                                	public	_respuesta
                                	public	_bufer
                                	public	_main
                                	extrn	__setargv__:far
                                	end


Macros:

                N a m e                 Type

$comm  . . . . . . . . . . . . .        Proc
@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

$$SYMBOLS  . . . . . . . . . . .        32 Bit   0000019A Byte    Private 'DEBSYM'
$$TYPES  . . . . . . . . . . . .        32 Bit   00000004 Byte    Private 'DEBTYP'
_TEXT  . . . . . . . . . . . . .        16 Bit   020D     Byte    Public  'CODE'
DGROUP . . . . . . . . . . . . .        GROUP
_DATA  . . . . . . . . . . . . .        16 Bit   00A6     Word    Public  'DATA'
_BSS . . . . . . . . . . . . . .        16 Bit   1420     Word    Public  'BSS'


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

_main  . . . . . . . . . . . . .        P Near   0000     _TEXT    020D Public   


Symbols:

                N a m e                 Type       Value     Attr

??version  . . . . . . . . . . .        Text   0504
?debug . . . . . . . . . . . . .        Text   ;
@1@11  . . . . . . . . . . . . .        L Near            90h _TEXT 
@1@14  . . . . . . . . . . . . .        L Near            BDh _TEXT 
@1@16  . . . . . . . . . . . . .        L Near            D1h _TEXT 
@1@18  . . . . . . . . . . . . .        L Near            E7h _TEXT 
@1@19  . . . . . . . . . . . . .        L Near            EAh _TEXT 
@1@21  . . . . . . . . . . . . .        L Near            FAh _TEXT 
@1@23  . . . . . . . . . . . . .        L Near           10Ah _TEXT 
@1@24  . . . . . . . . . . . . .        L Near           1BDh _TEXT 
@1@26  . . . . . . . . . . . . .        L Near           1E0h _TEXT 
@1@28  . . . . . . . . . . . . .        L Near           1F7h _TEXT 
@1@3 . . . . . . . . . . . . . .        L Near             Dh _TEXT 
@1@30  . . . . . . . . . . . . .        L Near           209h _TEXT 
@1@5 . . . . . . . . . . . . . .        L Near            47h _TEXT 
@1@6 . . . . . . . . . . . . . .        L Near            4Eh _TEXT 
@1@8 . . . . . . . . . . . . . .        L Near            70h _TEXT 
@@0  . . . . . . . . . . . . . .        L Near            3Bh _TEXT 
@@1  . . . . . . . . . . . . . .        L Near            BDh _TEXT 
__setargv__  . . . . . . . . . .        L Far16            0h External 
_bufer . . . . . . . . . . . . .        Byte              20h _BSS Public 
_comando . . . . . . . . . . . .        Byte               0h External 
_inicScanner . . . . . . . . . .        L Near16           0h External 
_lseek . . . . . . . . . . . . .        L Near16           0h External 
_num . . . . . . . . . . . . . .        Word               0h External 
_numDec  . . . . . . . . . . . .        L Near16           0h External 
_numLargo  . . . . . . . . . . .        DWord              0h External 
_open  . . . . . . . . . . . . .        L Near16           0h External 
_printf  . . . . . . . . . . . .        L Near16           0h External 
_read  . . . . . . . . . . . . .        L Near16           0h External 
_respuesta . . . . . . . . . . .        Word               0h _BSS Public 
_saltarBlancos . . . . . . . . .        L Near16           0h External 
_simb  . . . . . . . . . . . . .        Word               0h External 
_toupper . . . . . . . . . . . .        L Near16           0h External 
b@ . . . . . . . . . . . . . . .        Byte               0h _BSS 
b@w  . . . . . . . . . . . . . .        Word               0h _BSS 
d@ . . . . . . . . . . . . . . .        Byte               0h _DATA 
d@w  . . . . . . . . . . . . . .        Word               0h _DATA 
s@ . . . . . . . . . . . . . . .        Byte               0h _DATA 

progdb.asm: 636 lines, 3 passes, 0 ms, 0 warnings, 0 errors
