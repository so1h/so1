JWasm v2.12pre, Nov 27 2013
contkd.asm
                                	.286
                                	ifndef	??version
                                	else
                                $comm	macro	name,dist,size,count
 >                              	comm	dist name[size]:BYTE:count
 >                              	endm
                                	endif
00000000                        _TEXT	segment byte public 'CODE'
                                _TEXT	ends
                                DGROUP	group	_DATA,_BSS
                                	assume	cs:_TEXT,ds:DGROUP
00000000                        _DATA	segment word public 'DATA'
00000000                        d@	label	byte
00000000                        d@w	label	word
00000000                        _DATA	ends
00000000                        _BSS	segment word public 'BSS'
00000000                        b@	label	byte
00000000                        b@w	label	word
00000000                        _BSS	ends
00000000                        _DATA	segment word public 'DATA'
00000000                        _ptrIndProcesoActual	label	dword
00000000  00                    	db	0
00000001  00                    	db	0
00000002  00                    	db	0
00000003  00                    	db	0
00000004                        _ptrTramaProceso	label	dword
00000004  00                    	db	0
00000005  00                    	db	0
00000006  00                    	db	0
00000007  00                    	db	0
00000008                        _ptrActivarAlEpilogo	label	dword
00000008  00                    	db	0
00000009  00                    	db	0
0000000A  00                    	db	0
0000000B  00                    	db	0
0000000C                        _ptrDescProceso	label	dword
0000000C  00                    	db	0
0000000D  00                    	db	0
0000000E  00                    	db	0
0000000F  00                    	db	0
00000010                        _tamDescProceso	label	word
00000010  00                    	db	0
00000011  00                    	db	0
00000012                        _ptrDescFichero	label	dword
00000012  00                    	db	0
00000013  00                    	db	0
00000014  00                    	db	0
00000015  00                    	db	0
00000016                        _ptrDescRecurso	label	dword
00000016  00                    	db	0
00000017  00                    	db	0
00000018  00                    	db	0
00000019  00                    	db	0
0000001A                        _ptrC2cPFR	label	dword
0000001A  00                    	db	0
0000001B  00                    	db	0
0000001C  00                    	db	0
0000001D  00                    	db	0
0000001E                        _ptrNivelActivacionSO1	label	dword
0000001E  00                    	db	0
0000001F  00                    	db	0
00000020  00                    	db	0
00000021  00                    	db	0
00000022                        _ptrEnHalt	label	dword
00000022  00                    	db	0
00000023  00                    	db	0
00000024  00                    	db	0
00000025  00                    	db	0
00000026                        _ptrHayTic	label	dword
00000026  00                    	db	0
00000027  00                    	db	0
00000028  00                    	db	0
00000029  00                    	db	0
0000002A                        _ptrCcbAlEpilogo	label	dword
0000002A  00                    	db	0
0000002B  00                    	db	0
0000002C  00                    	db	0
0000002D  00                    	db	0
0000002E                        _ptrSS_Proceso	label	dword
0000002E  00                    	db	0
0000002F  00                    	db	0
00000030  00                    	db	0
00000031  00                    	db	0
00000032                        _ptrSP_Proceso	label	dword
00000032  00                    	db	0
00000033  00                    	db	0
00000034  00                    	db	0
00000035  00                    	db	0
00000036                        _SP0_SO1	label	word
00000036  00                    	db	0
00000037  00                    	db	0
00000038                        _ptrContRodajas	label	dword
00000038  00                    	db	0
00000039  00                    	db	0
0000003A  00                    	db	0
0000003B  00                    	db	0
0000003C                        _ptrContTicsRodaja	label	dword
0000003C  00                    	db	0
0000003D  00                    	db	0
0000003E  00                    	db	0
0000003F  00                    	db	0
00000040                        _ptrVIOrg	label	dword
00000040  00                    	db	0
00000041  00                    	db	0
00000042  00                    	db	0
00000043  00                    	db	0
00000044                        _sigProceso	label	dword
00000044  00                    	db	0
00000045  00                    	db	0
00000046  00                    	db	0
00000047  00                    	db	0
00000048                        _activarProceso	label	dword
00000048  00                    	db	0
00000049  00                    	db	0
0000004A  00                    	db	0
0000004B  00                    	db	0
0000004C                        _buscarNuevoProcesoActual	label	dword
0000004C  00                    	db	0
0000004D  00                    	db	0
0000004E  00                    	db	0
0000004F  00                    	db	0
00000050                        _bloquearProcesoActual	label	dword
00000050  00                    	db	0
00000051  00                    	db	0
00000052  00                    	db	0
00000053  00                    	db	0
00000054                        _tablaSP	label	byte
00000054  00                    	db	0
00000055  01                    	db	1
00000056  02                    	db	2
00000057  03                    	db	3
00000058  04                    	db	4
00000059  05                    	db	5
0000005A  06                    	db	6
0000005B  07                    	db	7
0000005C  08                    	db	8
0000005D  09                    	db	9
0000005E  0A                    	db	10
0000005F  0B                    	db	11
00000060  0C                    	db	12
00000061  0D                    	db	13
00000062  0E                    	db	14
00000063  0F                    	db	15
00000064  10                    	db	16
00000065  11                    	db	17
00000066  12                    	db	18
00000067  13                    	db	19
00000068  14                    	db	20
00000069  15                    	db	21
0000006A  16                    	db	22
0000006B  17                    	db	23
0000006C  18                    	db	24
0000006D  19                    	db	25
0000006E  1A                    	db	26
0000006F  1B                    	db	27
00000070  1C                    	db	28
00000071  1D                    	db	29
00000072  1E                    	db	30
00000073  1F                    	db	31
00000074  20                    	db	32
00000075  21                    	db	33
00000076  22                    	db	34
00000077  B7                    	db	183
00000078  24                    	db	36
00000079  25                    	db	37
0000007A  2F                    	db	47
0000007B  27                    	db	39
0000007C  29                    	db	41
0000007D  3D                    	db	61
0000007E  28                    	db	40
0000007F  BF                    	db	191
00000080  2C                    	db	44
00000081  27                    	db	39
00000082  2E                    	db	46
00000083  2D                    	db	45
00000084  30                    	db	48
00000085  31                    	db	49
00000086  32                    	db	50
00000087  33                    	db	51
00000088  34                    	db	52
00000089  35                    	db	53
0000008A  36                    	db	54
0000008B  37                    	db	55
0000008C  38                    	db	56
0000008D  39                    	db	57
0000008E  3A                    	db	58
0000008F  3B                    	db	59
00000090  3B                    	db	59
00000091  A1                    	db	161
00000092  3A                    	db	58
00000093  5F                    	db	95
00000094  22                    	db	34
00000095  41                    	db	65
00000096  42                    	db	66
00000097  43                    	db	67
00000098  44                    	db	68
00000099  45                    	db	69
0000009A  46                    	db	70
0000009B  47                    	db	71
0000009C  48                    	db	72
0000009D  49                    	db	73
0000009E  4A                    	db	74
0000009F  4B                    	db	75
000000A0  4C                    	db	76
000000A1  4D                    	db	77
000000A2  4E                    	db	78
000000A3  4F                    	db	79
000000A4  50                    	db	80
000000A5  51                    	db	81
000000A6  52                    	db	82
000000A7  53                    	db	83
000000A8  54                    	db	84
000000A9  55                    	db	85
000000AA  56                    	db	86
000000AB  57                    	db	87
000000AC  58                    	db	88
000000AD  59                    	db	89
000000AE  5A                    	db	90
000000AF  5B                    	db	91
000000B0  3C                    	db	60
000000B1  2B                    	db	43
000000B2  26                    	db	38
000000B3  3F                    	db	63
000000B4  BA                    	db	186
000000B5  61                    	db	97
000000B6  62                    	db	98
000000B7  63                    	db	99
000000B8  64                    	db	100
000000B9  65                    	db	101
000000BA  66                    	db	102
000000BB  67                    	db	103
000000BC  68                    	db	104
000000BD  69                    	db	105
000000BE  6A                    	db	106
000000BF  6B                    	db	107
000000C0  6C                    	db	108
000000C1  6D                    	db	109
000000C2  6E                    	db	110
000000C3  6F                    	db	111
000000C4  70                    	db	112
000000C5  71                    	db	113
000000C6  72                    	db	114
000000C7  73                    	db	115
000000C8  74                    	db	116
000000C9  75                    	db	117
000000CA  76                    	db	118
000000CB  77                    	db	119
000000CC  78                    	db	120
000000CD  79                    	db	121
000000CE  7A                    	db	122
000000CF  7B                    	db	123
000000D0  3E                    	db	62
000000D1  2A                    	db	42
000000D2  AA                    	db	170
000000D3  7F                    	db	127
000000D4  80                    	db	128
000000D5  81                    	db	129
000000D6  82                    	db	130
000000D7  83                    	db	131
000000D8  84                    	db	132
000000D9  85                    	db	133
000000DA  86                    	db	134
000000DB  87                    	db	135
000000DC  88                    	db	136
000000DD  89                    	db	137
000000DE  8A                    	db	138
000000DF  8B                    	db	139
000000E0  8C                    	db	140
000000E1  8D                    	db	141
000000E2  8E                    	db	142
000000E3  8F                    	db	143
000000E4  90                    	db	144
000000E5  91                    	db	145
000000E6  92                    	db	146
000000E7  93                    	db	147
000000E8  94                    	db	148
000000E9  95                    	db	149
000000EA  96                    	db	150
000000EB  97                    	db	151
000000EC  98                    	db	152
000000ED  99                    	db	153
000000EE  9A                    	db	154
000000EF  9B                    	db	155
000000F0  9C                    	db	156
000000F1  9D                    	db	157
000000F2  9E                    	db	158
000000F3  9F                    	db	159
000000F4  A0                    	db	160
000000F5  A1                    	db	161
000000F6  A2                    	db	162
000000F7  A3                    	db	163
000000F8  A4                    	db	164
000000F9  A5                    	db	165
000000FA  A6                    	db	166
000000FB  A7                    	db	167
000000FC  A8                    	db	168
000000FD  A9                    	db	169
000000FE  AA                    	db	170
000000FF  AB                    	db	171
00000100  AC                    	db	172
00000101  AD                    	db	173
00000102  AE                    	db	174
00000103  AF                    	db	175
00000104  B0                    	db	176
00000105  B1                    	db	177
00000106  B2                    	db	178
00000107  B3                    	db	179
00000108  B4                    	db	180
00000109  B5                    	db	181
0000010A  B6                    	db	182
0000010B  B7                    	db	183
0000010C  B8                    	db	184
0000010D  B9                    	db	185
0000010E  BA                    	db	186
0000010F  BB                    	db	187
00000110  BC                    	db	188
00000111  BD                    	db	189
00000112  BE                    	db	190
00000113  BF                    	db	191
00000114  C0                    	db	192
00000115  C1                    	db	193
00000116  C2                    	db	194
00000117  C3                    	db	195
00000118  C4                    	db	196
00000119  C5                    	db	197
0000011A  C6                    	db	198
0000011B  C7                    	db	199
0000011C  C8                    	db	200
0000011D  C9                    	db	201
0000011E  CA                    	db	202
0000011F  CB                    	db	203
00000120  CC                    	db	204
00000121  CD                    	db	205
00000122  CE                    	db	206
00000123  CF                    	db	207
00000124  D0                    	db	208
00000125  D1                    	db	209
00000126  D2                    	db	210
00000127  D3                    	db	211
00000128  D4                    	db	212
00000129  D5                    	db	213
0000012A  D6                    	db	214
0000012B  D7                    	db	215
0000012C  D8                    	db	216
0000012D  D9                    	db	217
0000012E  DA                    	db	218
0000012F  DB                    	db	219
00000130  DC                    	db	220
00000131  DD                    	db	221
00000132  DE                    	db	222
00000133  DF                    	db	223
00000134  E0                    	db	224
00000135  E1                    	db	225
00000136  E2                    	db	226
00000137  E3                    	db	227
00000138  E4                    	db	228
00000139  E5                    	db	229
0000013A  E6                    	db	230
0000013B  E7                    	db	231
0000013C  E8                    	db	232
0000013D  E9                    	db	233
0000013E  EA                    	db	234
0000013F  EB                    	db	235
00000140  EC                    	db	236
00000141  ED                    	db	237
00000142  EE                    	db	238
00000143  EF                    	db	239
00000144  F0                    	db	240
00000145  F1                    	db	241
00000146  F2                    	db	242
00000147  F3                    	db	243
00000148  F4                    	db	244
00000149  F5                    	db	245
0000014A  F6                    	db	246
0000014B  F7                    	db	247
0000014C  F8                    	db	248
0000014D  F9                    	db	249
0000014E  FA                    	db	250
0000014F  FB                    	db	251
00000150  FC                    	db	252
00000151  FD                    	db	253
00000152  FE                    	db	254
00000153  FF                    	db	255
00000154                        _rec_consola	label	word
00000154  00                    	db	0
00000155  00                    	db	0
00000156                        _descConsola	label	dword
00000156  00                    	db	0
00000157  00                    	db	0
00000158  00                    	db	0
00000159  00                    	db	0
0000015A                        _maxConsolas	label	byte
0000015A  00                    	db	0
0000015B  00                    	db	1 dup (0)
0000015C                        _consolaDeSuperficie	label	word
0000015C  00                    	db	0
0000015D  00                    	db	0
0000015E                        _nbytesProceso	label	word
0000015E  00                    	db	0
0000015F  00                    	db	0
00000160  000000000000000000    	db	30 dup (0)
0000017E                        _dirProceso	label	dword
0000017E  00                    	db	0
0000017F  00                    	db	0
00000180  00                    	db	0
00000181  00                    	db	0
00000182  000000000000000000    	db	60 dup (0)
000001BE                        _DATA	ends
00000000                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
00000000                        _meter	proc	near
                                   ;	
                                   ;	void meter ( char car, teclado_t far * teclado )
                                   ;	
00000000  C8020000              	enter	2,0
                                   ;	
                                   ;	{
                                   ;	    int in = teclado->in ;
                                   ;	
00000004  C45E06                	les	bx,dword ptr [bp+6]
00000007  268B875201            	mov	ax,word ptr es:[bx+338]
0000000C  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    if (teclado->ncar < tamBTeclado)
                                   ;	
0000000F  C45E06                	les	bx,dword ptr [bp+6]
00000012  2681BF56010001        	cmp	word ptr es:[bx+342],256
00000019  7D2F                  	jge	short @1@5
                                   ;	
                                   ;	    {
                                   ;	        teclado->bufer[in++] = car ;
                                   ;	
0000001B  C45E06                	les	bx,dword ptr [bp+6]
0000001E  035EFE                	add	bx,word ptr [bp-2]
00000021  8A4604                	mov	al,byte ptr [bp+4]
00000024  26884752              	mov	byte ptr es:[bx+82],al
00000028  FF46FE                	inc	word ptr [bp-2]
                                   ;	
                                   ;	        if (in >= tamBTeclado) in = 0 ;
                                   ;	
0000002B  817EFE0001            	cmp	word ptr [bp-2],256
00000030  7C05                  	jl	short @1@4
00000032  C746FE0000            	mov	word ptr [bp-2],0
00000037                        @1@4:
                                   ;	
                                   ;	        teclado->in = in ;
                                   ;	
00000037  C45E06                	les	bx,dword ptr [bp+6]
0000003A  8B46FE                	mov	ax,word ptr [bp-2]
0000003D  2689875201            	mov	word ptr es:[bx+338],ax
                                   ;	
                                   ;	        teclado->ncar++ ;
                                   ;	
00000042  C45E06                	les	bx,dword ptr [bp+6]
00000045  26FF875601            	inc	word ptr es:[bx+342]
0000004A                        @1@5:
                                   ;	
                                   ;	    }
                                   ;	}
                                   ;	
0000004A  C9                    	leave	
0000004B                        	ret	
0000004C                        _meter	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000004C                        _sacar	proc	near
                                   ;	
                                   ;	char sacar ( teclado_t far * teclado  )     /* se supone: teclado.ncar > 0 */
                                   ;	
0000004C  C8040000              	enter	4,0
                                   ;	
                                   ;	{
                                   ;	    char car ;
                                   ;	    int out = teclado->out ;
                                   ;	
00000050  C45E04                	les	bx,dword ptr [bp+4]
00000053  268B875401            	mov	ax,word ptr es:[bx+340]
00000058  8946FC                	mov	word ptr [bp-4],ax
                                   ;	
                                   ;	    car = teclado->bufer[out++] ;
                                   ;	
0000005B  C45E04                	les	bx,dword ptr [bp+4]
0000005E  035EFC                	add	bx,word ptr [bp-4]
00000061  268A4752              	mov	al,byte ptr es:[bx+82]
00000065  8846FF                	mov	byte ptr [bp-1],al
00000068  FF46FC                	inc	word ptr [bp-4]
                                   ;	
                                   ;	    if (out >= tamBTeclado) out = 0 ;
                                   ;	
0000006B  817EFC0001            	cmp	word ptr [bp-4],256
00000070  7C05                  	jl	short @2@3
00000072  C746FC0000            	mov	word ptr [bp-4],0
00000077                        @2@3:
                                   ;	
                                   ;	    teclado->out = out ;
                                   ;	
00000077  C45E04                	les	bx,dword ptr [bp+4]
0000007A  8B46FC                	mov	ax,word ptr [bp-4]
0000007D  2689875401            	mov	word ptr es:[bx+340],ax
                                   ;	
                                   ;	    teclado->ncar-- ;
                                   ;	
00000082  C45E04                	les	bx,dword ptr [bp+4]
00000085  26FF8F5601            	dec	word ptr es:[bx+342]
                                   ;	
                                   ;	    return(car) ;
                                   ;	
0000008A  8A46FF                	mov	al,byte ptr [bp-1]
                                   ;	
                                   ;	}
                                   ;	
0000008D  C9                    	leave	
0000008E                        	ret	
0000008F                        _sacar	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000008F                        _printCarConsola	proc	near
                                   ;	
                                   ;	int printCarConsola ( byte_t con, char car )
                                   ;	
0000008F  C8080000              	enter	8,0
                                   ;	
                                   ;	{
                                   ;	    if (con == consolaDeSuperficie)
                                   ;	
00000093  8A4604                	mov	al,byte ptr [bp+4]
00000096  B400                  	mov	ah,0
00000098  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
0000009C  750B                  	jne	short @3@3
                                   ;	
                                   ;	        printCarVideo(car) ;
                                   ;	
0000009E  8A4606                	mov	al,byte ptr [bp+6]
000000A1  50                    	push	ax
000000A2  E80000                	call	near ptr _printCarVideo
000000A5  59                    	pop	cx
000000A6  E91F02                	jmp	@3@22
000000A9                        @3@3:
                                   ;	
                                   ;	    else
                                   ;	#if (0) 			
                                   ;			printCarDisplay((display_t far *)&(descConsola[con]), car) ;
                                   ;	#else	
                                   ;	    {
                                   ;		    byte_t numFilas = maxFilasAct ;
                                   ;	
000000A9  33C0                  	xor	ax,ax
000000AB  8EC0                  	mov	es,ax
000000AD  26A08404              	mov	al,byte ptr es:[1156]
000000B1  FEC0                  	inc	al
000000B3  8846FF                	mov	byte ptr [bp-1],al
                                   ;	
                                   ;	        pantalla_t far * pantalla = (pantalla_t far *)&descConsola[con].pantalla ;
                                   ;	
000000B6  8A4604                	mov	al,byte ptr [bp+4]
000000B9  B400                  	mov	ah,0
000000BB  69C0BA20              	imul	ax,ax,8378
000000BF  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
000000C3  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
000000C7  03D8                  	add	bx,ax
000000C9  8956FC                	mov	word ptr [bp-4],dx
000000CC  895EFA                	mov	word ptr [bp-6],bx
                                   ;	
                                   ;	        byte_t F = descConsola[con].F ;
                                   ;	
000000CF  8A4604                	mov	al,byte ptr [bp+4]
000000D2  B400                  	mov	ah,0
000000D4  69C0BA20              	imul	ax,ax,8378
000000D8  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000000DC  03D8                  	add	bx,ax
000000DE  268A87401F            	mov	al,byte ptr es:[bx+8000]
000000E3  8846F9                	mov	byte ptr [bp-7],al
                                   ;	
                                   ;	        byte_t C = descConsola[con].C ;
                                   ;	
000000E6  8A4604                	mov	al,byte ptr [bp+4]
000000E9  B400                  	mov	ah,0
000000EB  69C0BA20              	imul	ax,ax,8378
000000EF  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000000F3  03D8                  	add	bx,ax
000000F5  268A87411F            	mov	al,byte ptr es:[bx+8001]
000000FA  8846F8                	mov	byte ptr [bp-8],al
                                   ;	
                                   ;	        switch (car)
                                   ;	
000000FD  8A4606                	mov	al,byte ptr [bp+6]
00000100  98                    	cbw	
00000101  83E807                	sub	ax,7
00000104  8BD8                  	mov	bx,ax
00000106  83FB06                	cmp	bx,6
00000109  7603                  	jbe	@@0
0000010B  E90001                	jmp	@3@19
0000010E                        @@0:
0000010E  03DB                  	add	bx,bx
00000110  2EFFA7CC02            	jmp	word ptr cs:@3@C62[bx]
00000115                        @3@7:
                                   ;	
                                   ;	        {
                                   ;	        case '\f'  :
                                   ;	            borrarCPantalla(pantalla, numFilas) ;
                                   ;	
00000115  8A46FF                	mov	al,byte ptr [bp-1]
00000118  B400                  	mov	ah,0
0000011A  50                    	push	ax
0000011B  FF76FC                	push	word ptr [bp-4]
0000011E  FF76FA                	push	word ptr [bp-6]
00000121  E80000                	call	near ptr _borrarCPantalla
00000124  83C406                	add	sp,6
                                   ;	
                                   ;	//          borrarPantalla(pantalla, numFilas) ; 
                                   ;	            descConsola[con].F = 0 ;
                                   ;	
00000127  8A4604                	mov	al,byte ptr [bp+4]
0000012A  B400                  	mov	ah,0
0000012C  69C0BA20              	imul	ax,ax,8378
00000130  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000134  03D8                  	add	bx,ax
00000136  26C687401F00          	mov	byte ptr es:[bx+8000],0
                                   ;	
                                   ;	            descConsola[con].C = 0 ;
                                   ;	
0000013C                        @3@8:
0000013C  8A4604                	mov	al,byte ptr [bp+4]
0000013F  B400                  	mov	ah,0
00000141  69C0BA20              	imul	ax,ax,8378
00000145  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000149  03D8                  	add	bx,ax
0000014B  26C687411F00          	mov	byte ptr es:[bx+8001],0
                                   ;	
                                   ;	            break ;
                                   ;	
00000151  E97401                	jmp	@3@22
00000154                        @3@9:
00000154  EBE6                  	jmp	short @3@8
00000156                        @3@10:
                                   ;	
                                   ;	        case '\r'  :
                                   ;	            descConsola[con].C = 0 ;
                                   ;	            break ;
                                   ;	        case '\n'  :
                                   ;	            if (++descConsola[con].F == numFilas)
                                   ;	
00000156  8A4604                	mov	al,byte ptr [bp+4]
00000159  B400                  	mov	ah,0
0000015B  69C0BA20              	imul	ax,ax,8378
0000015F  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000163  03D8                  	add	bx,ax
00000165  268A87401F            	mov	al,byte ptr es:[bx+8000]
0000016A  FEC0                  	inc	al
0000016C  8A5604                	mov	dl,byte ptr [bp+4]
0000016F  B600                  	mov	dh,0
00000171  69D2BA20              	imul	dx,dx,8378
00000175  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000179  03DA                  	add	bx,dx
0000017B  268887401F            	mov	byte ptr es:[bx+8000],al
00000180  3A46FF                	cmp	al,byte ptr [bp-1]
00000183  752B                  	jne	short @3@12
                                   ;	
                                   ;	            {
                                   ;	                scrollCPantalla(pantalla, numFilas) ;
                                   ;	
00000185  8A46FF                	mov	al,byte ptr [bp-1]
00000188  B400                  	mov	ah,0
0000018A  50                    	push	ax
0000018B  FF76FC                	push	word ptr [bp-4]
0000018E  FF76FA                	push	word ptr [bp-6]
00000191  E80000                	call	near ptr _scrollCPantalla
00000194  83C406                	add	sp,6
                                   ;	
                                   ;	                descConsola[con].F = numFilas-1 ;
                                   ;	
00000197  8A4604                	mov	al,byte ptr [bp+4]
0000019A  B400                  	mov	ah,0
0000019C  69C0BA20              	imul	ax,ax,8378
000001A0  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000001A4  03D8                  	add	bx,ax
000001A6  8A46FF                	mov	al,byte ptr [bp-1]
000001A9  04FF                  	add	al,255
000001AB  268887401F            	mov	byte ptr es:[bx+8000],al
000001B0                        @3@12:
                                   ;	
                                   ;	            }
                                   ;	            break ;
                                   ;	
000001B0  E91501                	jmp	@3@22
000001B3                        @3@13:
                                   ;	
                                   ;	        case '\b'  :
                                   ;	            if (C > 0)
                                   ;	
000001B3  807EF800              	cmp	byte ptr [bp-8],0
000001B7  7637                  	jbe	short @3@15
                                   ;	
                                   ;	            {
                                   ;	                C-- ;
                                   ;	
000001B9  FE4EF8                	dec	byte ptr [bp-8]
                                   ;	
                                   ;	                pantalla->t[F][C].car = ' ' ;
                                   ;	
000001BC  8A46F9                	mov	al,byte ptr [bp-7]
000001BF  B400                  	mov	ah,0
000001C1  69C0A000              	imul	ax,ax,160
000001C5  C45EFA                	les	bx,dword ptr [bp-6]
000001C8  03D8                  	add	bx,ax
000001CA  8A46F8                	mov	al,byte ptr [bp-8]
000001CD  B400                  	mov	ah,0
000001CF  03C0                  	add	ax,ax
000001D1  03D8                  	add	bx,ax
000001D3  26C60720              	mov	byte ptr es:[bx],32
                                   ;	
                                   ;	                descConsola[con].C = C ;
                                   ;	
000001D7  8A4604                	mov	al,byte ptr [bp+4]
000001DA  B400                  	mov	ah,0
000001DC  69C0BA20              	imul	ax,ax,8378
000001E0  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000001E4  03D8                  	add	bx,ax
000001E6  8A46F8                	mov	al,byte ptr [bp-8]
000001E9  268887411F            	mov	byte ptr es:[bx+8001],al
                                   ;	
                                   ;	            }
                                   ;	
000001EE  EB0A                  	jmp	short @3@16
000001F0                        @3@15:
                                   ;	
                                   ;	            else printf("\a") ;
                                   ;	
000001F0  1E                    	push	ds
000001F1  68D501                	push	offset DGROUP:s@
000001F4  E80000                	call	near ptr _printf
000001F7  83C404                	add	sp,4
000001FA                        @3@16:
                                   ;	
                                   ;	            break ;
                                   ;	
000001FA  E9CB00                	jmp	@3@22
000001FD                        @3@17:
                                   ;	
                                   ;	        case '\t'  :
                                   ;	            car = ' ' ;
                                   ;	
000001FD  C6460620              	mov	byte ptr [bp+6],32
00000201                        @3@18:
                                   ;	
                                   ;	        case '\a' :
                                   ;	            printf("\a") ;
                                   ;	
00000201  1E                    	push	ds
00000202  68D701                	push	offset DGROUP:s@+2
00000205  E80000                	call	near ptr _printf
00000208  83C404                	add	sp,4
                                   ;	
                                   ;	            break ;
                                   ;	
0000020B  E9BA00                	jmp	@3@22
0000020E                        @3@19:
                                   ;	
                                   ;	        default  :
                                   ;	#if (FALSE)
                                   ;	            if (C < 80)                      /* ptrBiosArea->VIDEO-width */
                                   ;	                pantalla->t[F][C].car = car ;
                                   ;	            descConsola[con].C++ ;
                                   ;	#else
                                   ;	            pantalla->t[F][C].car = car ;
                                   ;	
0000020E  8A46F9                	mov	al,byte ptr [bp-7]
00000211  B400                  	mov	ah,0
00000213  69C0A000              	imul	ax,ax,160
00000217  C45EFA                	les	bx,dword ptr [bp-6]
0000021A  03D8                  	add	bx,ax
0000021C  8A46F8                	mov	al,byte ptr [bp-8]
0000021F  B400                  	mov	ah,0
00000221  03C0                  	add	ax,ax
00000223  03D8                  	add	bx,ax
00000225  8A4606                	mov	al,byte ptr [bp+6]
00000228  268807                	mov	byte ptr es:[bx],al
                                   ;	
                                   ;	            if (++descConsola[con].C == 80)  /* ptrBiosArea->VIDEO-width */
                                   ;	
0000022B  8A4604                	mov	al,byte ptr [bp+4]
0000022E  B400                  	mov	ah,0
00000230  69C0BA20              	imul	ax,ax,8378
00000234  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000238  03D8                  	add	bx,ax
0000023A  268A87411F            	mov	al,byte ptr es:[bx+8001]
0000023F  FEC0                  	inc	al
00000241  8A5604                	mov	dl,byte ptr [bp+4]
00000244  B600                  	mov	dh,0
00000246  69D2BA20              	imul	dx,dx,8378
0000024A  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000024E  03DA                  	add	bx,dx
00000250  268887411F            	mov	byte ptr es:[bx+8001],al
00000255  3C50                  	cmp	al,80
00000257  756F                  	jne	short @3@22
                                   ;	
                                   ;	            {
                                   ;	                descConsola[con].C = 0 ;
                                   ;	
00000259  8A4604                	mov	al,byte ptr [bp+4]
0000025C  B400                  	mov	ah,0
0000025E  69C0BA20              	imul	ax,ax,8378
00000262  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000266  03D8                  	add	bx,ax
00000268  26C687411F00          	mov	byte ptr es:[bx+8001],0
                                   ;	
                                   ;	                if (++descConsola[con].F == numFilas)
                                   ;	
0000026E  8A4604                	mov	al,byte ptr [bp+4]
00000271  B400                  	mov	ah,0
00000273  69C0BA20              	imul	ax,ax,8378
00000277  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000027B  03D8                  	add	bx,ax
0000027D  268A87401F            	mov	al,byte ptr es:[bx+8000]
00000282  FEC0                  	inc	al
00000284  8A5604                	mov	dl,byte ptr [bp+4]
00000287  B600                  	mov	dh,0
00000289  69D2BA20              	imul	dx,dx,8378
0000028D  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000291  03DA                  	add	bx,dx
00000293  268887401F            	mov	byte ptr es:[bx+8000],al
00000298  3A46FF                	cmp	al,byte ptr [bp-1]
0000029B  752B                  	jne	short @3@22
                                   ;	
                                   ;	                {
                                   ;	                    scrollCPantalla(pantalla, numFilas) ;
                                   ;	
0000029D  8A46FF                	mov	al,byte ptr [bp-1]
000002A0  B400                  	mov	ah,0
000002A2  50                    	push	ax
000002A3  FF76FC                	push	word ptr [bp-4]
000002A6  FF76FA                	push	word ptr [bp-6]
000002A9  E80000                	call	near ptr _scrollCPantalla
000002AC  83C406                	add	sp,6
                                   ;	
                                   ;	                    descConsola[con].F = numFilas-1 ;
                                   ;	
000002AF  8A4604                	mov	al,byte ptr [bp+4]
000002B2  B400                  	mov	ah,0
000002B4  69C0BA20              	imul	ax,ax,8378
000002B8  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000002BC  03D8                  	add	bx,ax
000002BE  8A46FF                	mov	al,byte ptr [bp-1]
000002C1  04FF                  	add	al,255
000002C3  268887401F            	mov	byte ptr es:[bx+8000],al
000002C8                        @3@22:
                                   ;	
                                   ;	                }
                                   ;	            }
                                   ;	#endif
                                   ;	        }
                                   ;	    }
                                   ;	#endif		
                                   ;	    return(0) ;
                                   ;	
000002C8  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
000002CA  C9                    	leave	
000002CB                        	ret	
000002CC                        _printCarConsola	endp
000002CC                        @3@C62	label	word
000002CC  0102                  	dw	@3@18
000002CE  B301                  	dw	@3@13
000002D0  FD01                  	dw	@3@17
000002D2  5601                  	dw	@3@10
000002D4  0E02                  	dw	@3@19
000002D6  1501                  	dw	@3@7
000002D8  5401                  	dw	@3@9
                                	assume	cs:_TEXT,ds:DGROUP
000002DA                        _goToXYConsola	proc	near
                                   ;	
                                   ;	int goToXYConsola ( byte_t con, byte_t F, byte_t C )
                                   ;	
000002DA  55                    	push	bp
000002DB  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    if (F >= maxFilasAct) return(-1) ;
                                   ;	
000002DD  8A4606                	mov	al,byte ptr [bp+6]
000002E0  B400                  	mov	ah,0
000002E2  33D2                  	xor	dx,dx
000002E4  8EC2                  	mov	es,dx
000002E6  268A168404            	mov	dl,byte ptr es:[1156]
000002EB  B600                  	mov	dh,0
000002ED  42                    	inc	dx
000002EE  3BC2                  	cmp	ax,dx
000002F0  7C02                  	jl	short @4@3
000002F2  EB10                  	jmp	short @4@4
000002F4                        @4@3:
                                   ;	
                                   ;	    if (C >= maxColumnasAct) return(-1) ;  
                                   ;	
000002F4  8A4608                	mov	al,byte ptr [bp+8]
000002F7  B400                  	mov	ah,0
000002F9  33D2                  	xor	dx,dx
000002FB  8EC2                  	mov	es,dx
000002FD  263B064A04            	cmp	ax,word ptr es:[1098]
00000302  7205                  	jb	short @4@5
00000304                        @4@4:
00000304  B8FFFF                	mov	ax,-1
00000307  5D                    	pop	bp
00000308                        	ret	
00000309                        @4@5:
                                   ;	
                                   ;	    if (con == consolaDeSuperficie)
                                   ;	
00000309  8A4604                	mov	al,byte ptr [bp+4]
0000030C  B400                  	mov	ah,0
0000030E  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
00000312  750E                  	jne	short @4@7
                                   ;	
                                   ;	    {
                                   ;	//      goToXYHw(F, C) ; 
                                   ;	        cursorF = F ;
                                   ;	
00000314  8A4606                	mov	al,byte ptr [bp+6]
00000317  A20000                	mov	byte ptr DGROUP:_cursorF,al
                                   ;	
                                   ;	        cursorC = C ;
                                   ;	
0000031A  8A4608                	mov	al,byte ptr [bp+8]
0000031D  A20000                	mov	byte ptr DGROUP:_cursorC,al
                                   ;	
                                   ;	    }
                                   ;	
00000320  EB2E                  	jmp	short @4@8
00000322                        @4@7:
                                   ;	
                                   ;	    else
                                   ;	    {
                                   ;	        descConsola[con].F = F ;
                                   ;	
00000322  8A4604                	mov	al,byte ptr [bp+4]
00000325  B400                  	mov	ah,0
00000327  69C0BA20              	imul	ax,ax,8378
0000032B  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000032F  03D8                  	add	bx,ax
00000331  8A4606                	mov	al,byte ptr [bp+6]
00000334  268887401F            	mov	byte ptr es:[bx+8000],al
                                   ;	
                                   ;	        descConsola[con].C = C ;
                                   ;	
00000339  8A4604                	mov	al,byte ptr [bp+4]
0000033C  B400                  	mov	ah,0
0000033E  69C0BA20              	imul	ax,ax,8378
00000342  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000346  03D8                  	add	bx,ax
00000348  8A4608                	mov	al,byte ptr [bp+8]
0000034B  268887411F            	mov	byte ptr es:[bx+8001],al
00000350                        @4@8:
                                   ;	
                                   ;	    }
                                   ;	    return(0) ;
                                   ;	
00000350  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
00000352  5D                    	pop	bp
00000353                        	ret	
00000354                        _goToXYConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000354                        _establecerConsolaDeSuperficie	proc	near
                                   ;	
                                   ;	void establecerConsolaDeSuperficie ( void )
                                   ;	
00000354  C8040000              	enter	4,0
                                   ;	
                                   ;	{
                                   ;	    pantalla_t far * pantalla =
                                   ;	        (pantalla_t far *)&descConsola[consolaDeSuperficie].pantalla ;
                                   ;	
00000358  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
0000035B  69C0BA20              	imul	ax,ax,8378
0000035F  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
00000363  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
00000367  03D8                  	add	bx,ax
00000369  8956FE                	mov	word ptr [bp-2],dx
0000036C  895EFC                	mov	word ptr [bp-4],bx
                                   ;	
                                   ;	    copiarCPantalla(pantalla, ptrPant, maxFilasAct) ;
                                   ;	
0000036F  33C0                  	xor	ax,ax
00000371  8EC0                  	mov	es,ax
00000373  26A08404              	mov	al,byte ptr es:[1156]
00000377  B400                  	mov	ah,0
00000379  40                    	inc	ax
0000037A  50                    	push	ax
0000037B  FF360200              	push	word ptr DGROUP:_ptrPant+2
0000037F  FF360000              	push	word ptr DGROUP:_ptrPant
00000383  FF76FE                	push	word ptr [bp-2]
00000386  FF76FC                	push	word ptr [bp-4]
00000389  E80000                	call	near ptr _copiarCPantalla
0000038C  83C40A                	add	sp,10
                                   ;	
                                   ;	//  copiarPantalla(pantalla, ptrPant, maxFilasAct) ; 
                                   ;	    cursorF = descConsola[consolaDeSuperficie].F ;
                                   ;	
0000038F  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
00000392  69C0BA20              	imul	ax,ax,8378
00000396  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000039A  03D8                  	add	bx,ax
0000039C  268A87401F            	mov	al,byte ptr es:[bx+8000]
000003A1  A20000                	mov	byte ptr DGROUP:_cursorF,al
                                   ;	
                                   ;	    cursorC = descConsola[consolaDeSuperficie].C ;
                                   ;	
000003A4  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
000003A7  69C0BA20              	imul	ax,ax,8378
000003AB  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000003AF  03D8                  	add	bx,ax
000003B1  268A87411F            	mov	al,byte ptr es:[bx+8001]
000003B6  A20000                	mov	byte ptr DGROUP:_cursorC,al
                                   ;	
                                   ;	    goToXYHw(cursorF, cursorC) ;
                                   ;	
000003B9  A00000                	mov	al,byte ptr DGROUP:_cursorC
000003BC  50                    	push	ax
000003BD  A00000                	mov	al,byte ptr DGROUP:_cursorF
000003C0  50                    	push	ax
000003C1  E80000                	call	near ptr _goToXYHw
000003C4  83C404                	add	sp,4
                                   ;	
                                   ;	}
                                   ;	
000003C7  C9                    	leave	
000003C8                        	ret	
000003C9                        _establecerConsolaDeSuperficie	endp
                                	assume	cs:_TEXT,ds:DGROUP
000003C9                        _salvarConsolaDeSuperficie	proc	near
                                   ;	
                                   ;	void salvarConsolaDeSuperficie ( void )
                                   ;	
000003C9  C8040000              	enter	4,0
                                   ;	
                                   ;	{
                                   ;	    pantalla_t far * pantalla =
                                   ;	        (pantalla_t far *)&descConsola[consolaDeSuperficie].pantalla ;
                                   ;	
000003CD  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
000003D0  69C0BA20              	imul	ax,ax,8378
000003D4  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
000003D8  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
000003DC  03D8                  	add	bx,ax
000003DE  8956FE                	mov	word ptr [bp-2],dx
000003E1  895EFC                	mov	word ptr [bp-4],bx
                                   ;	
                                   ;	    copiarCPantalla(ptrPant, pantalla, maxFilasAct) ;
                                   ;	
000003E4  33C0                  	xor	ax,ax
000003E6  8EC0                  	mov	es,ax
000003E8  26A08404              	mov	al,byte ptr es:[1156]
000003EC  B400                  	mov	ah,0
000003EE  40                    	inc	ax
000003EF  50                    	push	ax
000003F0  FF76FE                	push	word ptr [bp-2]
000003F3  FF76FC                	push	word ptr [bp-4]
000003F6  FF360200              	push	word ptr DGROUP:_ptrPant+2
000003FA  FF360000              	push	word ptr DGROUP:_ptrPant
000003FE  E80000                	call	near ptr _copiarCPantalla
00000401  83C40A                	add	sp,10
                                   ;	
                                   ;	//  copiarPantalla(ptrPant, pantalla, maxFilasAct) ;
                                   ;	    descConsola[consolaDeSuperficie].F = cursorF ;
                                   ;	
00000404  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
00000407  69C0BA20              	imul	ax,ax,8378
0000040B  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000040F  03D8                  	add	bx,ax
00000411  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000414  268887401F            	mov	byte ptr es:[bx+8000],al
                                   ;	
                                   ;	    descConsola[consolaDeSuperficie].C = cursorC ;
                                   ;	
00000419  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
0000041C  69C0BA20              	imul	ax,ax,8378
00000420  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000424  03D8                  	add	bx,ax
00000426  A00000                	mov	al,byte ptr DGROUP:_cursorC
00000429  268887411F            	mov	byte ptr es:[bx+8001],al
                                   ;	
                                   ;	}
                                   ;	
0000042E  C9                    	leave	
0000042F                        	ret	
00000430                        _salvarConsolaDeSuperficie	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000430                        _openConsola	proc	far
                                   ;	
                                   ;	int far openConsola ( int dfs, modoAp_t modo )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    return(0) ;
                                   ;	
00000430  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
00000432                        	ret	
00000433                        _openConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000433                        _releaseConsola	proc	far
                                   ;	
                                   ;	int far releaseConsola ( int dfs )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    return(0) ;
                                   ;	
00000433  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
00000435                        	ret	
00000436                        _releaseConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000436                        _readConsola	proc	far
                                   ;	
                                   ;	int far readConsola ( int dfs, pointer_t dir, word_t nbytes )
                                   ;	
00000436  C8120000              	enter	18,0
                                   ;	
                                   ;	{
                                   ;	    pindx_t indProcesoActual ;
                                   ;	    teclado_t far * teclado ;
                                   ;	    modoAp_t modoAp ;
                                   ;	    word_t nbytes0 ;
                                   ;	    int df ;
                                   ;	    int i = 0 ;
                                   ;	
0000043A  C746F20000            	mov	word ptr [bp-14],0
                                   ;	
                                   ;	    char car ;
                                   ;	    word_t con ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
0000043F  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
00000440  2EA10300               	mov	 ax,word ptr cs:[3] 
00000444  8CCA                   	mov	 dx,cs 
00000446  03C2                   	add	 ax,dx 
00000448  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    indProcesoActual = *ptrIndProcesoActual ;
                                   ;	
0000044A  C41E0000              	les	bx,dword ptr DGROUP:_ptrIndProcesoActual
0000044E  268B07                	mov	ax,word ptr es:[bx]
00000451  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    df = (*ptrTramaProceso)->BX ;
                                   ;	
00000454  C41E0400              	les	bx,dword ptr DGROUP:_ptrTramaProceso
00000458  26C41F                	les	bx,dword ptr es:[bx]
0000045B  268B470C              	mov	ax,word ptr es:[bx+12]
0000045F  8946F4                	mov	word ptr [bp-12],ax
                                   ;	
                                   ;	    con = ptrDescFichero[dfs].menor ;
                                   ;	
00000462  8B4606                	mov	ax,word ptr [bp+6]
00000465  6BC015                	imul	ax,ax,21
00000468  C41E1200              	les	bx,dword ptr DGROUP:_ptrDescFichero
0000046C  03D8                  	add	bx,ax
0000046E  268B470D              	mov	ax,word ptr es:[bx+13]
00000472  8946EE                	mov	word ptr [bp-18],ax
                                   ;	
                                   ;	    teclado = (teclado_t far *)&descConsola[con].teclado ;
                                   ;	
00000475  8B46EE                	mov	ax,word ptr [bp-18]
00000478  69C0BA20              	imul	ax,ax,8378
0000047C  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
00000480  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
00000484  03D8                  	add	bx,ax
00000486  81C3421F              	add	bx,8002
0000048A  8956FC                	mov	word ptr [bp-4],dx
0000048D  895EFA                	mov	word ptr [bp-6],bx
                                   ;	
                                   ;	    modoAp = ptrDescProceso[indProcesoActual].tfa[df].modoAp ;
                                   ;	
00000490  8B46FE                	mov	ax,word ptr [bp-2]
00000493  69C0DC00              	imul	ax,ax,220
00000497  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
0000049B  03D8                  	add	bx,ax
0000049D  8B46F4                	mov	ax,word ptr [bp-12]
000004A0  C1E003                	shl	ax,3
000004A3  03D8                  	add	bx,ax
000004A5  268B878800            	mov	ax,word ptr es:[bx+136]
000004AA  8946F8                	mov	word ptr [bp-8],ax
                                   ;	
                                   ;	
                                   ;	    nbytes0 = nbytes ;
                                   ;	
000004AD  8B460C                	mov	ax,word ptr [bp+12]
000004B0  8946F6                	mov	word ptr [bp-10],ax
                                   ;	
                                   ;	    if (nbytes <= teclado->ncar)
                                   ;	
000004B3  C45EFA                	les	bx,dword ptr [bp-6]
000004B6  268B875601            	mov	ax,word ptr es:[bx+342]
000004BB  3B460C                	cmp	ax,word ptr [bp+12]
000004BE  724A                  	jb	short @9@17
000004C0  EB39                  	jmp	short @9@13
000004C2                        @9@9:
                                   ;	
                                   ;	    {
                                   ;	        while (nbytes > 0)
                                   ;	        {
                                   ;	//          car = sacar(teclado) ;
                                   ;	//          car = tablaSP[sacar(teclado)] ;
                                   ;	            car = tablaDeConversion[sacar(teclado)] ;
                                   ;	
000004C2  FF76FC                	push	word ptr [bp-4]
000004C5  FF76FA                	push	word ptr [bp-6]
000004C8  E881FB                	call	near ptr _sacar
000004CB  83C404                	add	sp,4
000004CE  98                    	cbw	
000004CF  8BD8                  	mov	bx,ax
000004D1  8A875400              	mov	al,byte ptr DGROUP:_tablaSP[bx]
000004D5  8846F1                	mov	byte ptr [bp-15],al
                                   ;	
                                   ;	            if ((car == '\r') && (modoAp & O_TEXT)) car = '\n' ;
                                   ;	
000004D8  807EF10D              	cmp	byte ptr [bp-15],13
000004DC  750B                  	jne	short @9@12
000004DE  F746F80040            	test	word ptr [bp-8],16384
000004E3  7404                  	je	short @9@12
000004E5  C646F10A              	mov	byte ptr [bp-15],10
000004E9                        @9@12:
                                   ;	
                                   ;	            dir[i++] = car ;
                                   ;	
000004E9  C45E08                	les	bx,dword ptr [bp+8]
000004EC  035EF2                	add	bx,word ptr [bp-14]
000004EF  8A46F1                	mov	al,byte ptr [bp-15]
000004F2  268807                	mov	byte ptr es:[bx],al
000004F5  FF46F2                	inc	word ptr [bp-14]
                                   ;	
                                   ;	            nbytes-- ;
                                   ;	
000004F8  FF4E0C                	dec	word ptr [bp+12]
000004FB                        @9@13:
000004FB  837E0C00              	cmp	word ptr [bp+12],0
000004FF  77C1                  	ja	short @9@9
                                   ;	
                                   ;	        }
                                   ;	        restore_DS0() ;                           /* restaura el DS de SO1 */
                                   ;	
00000501  1F                     	pop	 ds 
                                   ;	
                                   ;	        return(nbytes0) ;
                                   ;	
00000502  8B46F6                	mov	ax,word ptr [bp-10]
00000505  C9                    	leave	
00000506                        	ret	
                                   ;	
                                   ;	    }
                                   ;	
00000507  E98500                	jmp	@9@24
0000050A                        @9@17:
0000050A  EB39                  	jmp	short @9@22
0000050C                        @9@18:
                                   ;	
                                   ;	    else
                                   ;	    {
                                   ;	        while (teclado->ncar > 0)
                                   ;	        {
                                   ;	//          car = sacar(teclado) ;
                                   ;	//          car = tablaSP[sacar(teclado)] ;
                                   ;	            car = tablaDeConversion[sacar(teclado)] ;
                                   ;	
0000050C  FF76FC                	push	word ptr [bp-4]
0000050F  FF76FA                	push	word ptr [bp-6]
00000512  E837FB                	call	near ptr _sacar
00000515  83C404                	add	sp,4
00000518  98                    	cbw	
00000519  8BD8                  	mov	bx,ax
0000051B  8A875400              	mov	al,byte ptr DGROUP:_tablaSP[bx]
0000051F  8846F1                	mov	byte ptr [bp-15],al
                                   ;	
                                   ;	            if ((car == '\r') && (modoAp & O_TEXT)) car = '\n' ;
                                   ;	
00000522  807EF10D              	cmp	byte ptr [bp-15],13
00000526  750B                  	jne	short @9@21
00000528  F746F80040            	test	word ptr [bp-8],16384
0000052D  7404                  	je	short @9@21
0000052F  C646F10A              	mov	byte ptr [bp-15],10
00000533                        @9@21:
                                   ;	
                                   ;	            dir[i++] = car ;
                                   ;	
00000533  C45E08                	les	bx,dword ptr [bp+8]
00000536  035EF2                	add	bx,word ptr [bp-14]
00000539  8A46F1                	mov	al,byte ptr [bp-15]
0000053C  268807                	mov	byte ptr es:[bx],al
0000053F  FF46F2                	inc	word ptr [bp-14]
                                   ;	
                                   ;	            nbytes-- ;
                                   ;	
00000542  FF4E0C                	dec	word ptr [bp+12]
00000545                        @9@22:
00000545  C45EFA                	les	bx,dword ptr [bp-6]
00000548  2683BF560100          	cmp	word ptr es:[bx+342],0
0000054E  7FBC                  	jg	short @9@18
                                   ;	
                                   ;	        }
                                   ;	        nbytesProceso[indProcesoActual] = nbytes ;
                                   ;	
00000550  8B5EFE                	mov	bx,word ptr [bp-2]
00000553  03DB                  	add	bx,bx
00000555  8B460C                	mov	ax,word ptr [bp+12]
00000558  89875E01              	mov	word ptr DGROUP:_nbytesProceso[bx],ax
                                   ;	
                                   ;	        dirProceso[indProcesoActual] = (pointer_t)&dir[i] ;
                                   ;	
0000055C  8B560A                	mov	dx,word ptr [bp+10]
0000055F  8B4608                	mov	ax,word ptr [bp+8]
00000562  0346F2                	add	ax,word ptr [bp-14]
00000565  8B5EFE                	mov	bx,word ptr [bp-2]
00000568  C1E302                	shl	bx,2
0000056B  89978001              	mov	word ptr DGROUP:_dirProceso[bx+2],dx
0000056F  89877E01              	mov	word ptr DGROUP:_dirProceso[bx],ax
                                   ;	
                                   ;	        encolarPC2c(indProcesoActual, &(teclado->bloqueados)) ;
                                   ;	
00000573  8B46FA                	mov	ax,word ptr [bp-6]
00000576  83C048                	add	ax,72
00000579  FF76FC                	push	word ptr [bp-4]
0000057C  50                    	push	ax
0000057D  FF76FE                	push	word ptr [bp-2]
00000580  E80000                	call	near ptr _encolarPC2c
00000583  83C406                	add	sp,6
                                   ;	
                                   ;	        bloquearProcesoActual(rec_consola) ;      /* no se retorna de aqui */
                                   ;	
00000586  FF365401              	push	word ptr DGROUP:_rec_consola
0000058A  FF1E5000              	call	dword ptr DGROUP:_bloquearProcesoActual
0000058E  59                    	pop	cx
0000058F                        @9@24:
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
0000058F  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(-1) ;
                                   ;	
00000590  B8FFFF                	mov	ax,-1
                                   ;	
                                   ;	}
                                   ;	
00000593  C9                    	leave	
00000594                        	ret	
00000595                        _readConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000595                        _aio_readConsola	proc	far
                                   ;	
                                   ;	int far aio_readConsola ( int dfs, pointer_t dir, word_t nbytes )
                                   ;	
00000595  C8140000              	enter	20,0
                                   ;	
                                   ;	{
                                   ;	    pindx_t indProcesoActual ;
                                   ;	    teclado_t far * teclado ;
                                   ;	    modoAp_t modoAp ;
                                   ;	    word_t nbARetornar0, nbARetornar ;
                                   ;	    int df ;
                                   ;	    int i = 0 ;
                                   ;	
00000599  C746F00000            	mov	word ptr [bp-16],0
                                   ;	
                                   ;	    char car ;
                                   ;	    word_t con ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
0000059E  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
0000059F  2EA10300               	mov	 ax,word ptr cs:[3] 
000005A3  8CCA                   	mov	 dx,cs 
000005A5  03C2                   	add	 ax,dx 
000005A7  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    indProcesoActual = *ptrIndProcesoActual ;
                                   ;	
000005A9  C41E0000              	les	bx,dword ptr DGROUP:_ptrIndProcesoActual
000005AD  268B07                	mov	ax,word ptr es:[bx]
000005B0  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    df = (*ptrTramaProceso)->BX ;
                                   ;	
000005B3  C41E0400              	les	bx,dword ptr DGROUP:_ptrTramaProceso
000005B7  26C41F                	les	bx,dword ptr es:[bx]
000005BA  268B470C              	mov	ax,word ptr es:[bx+12]
000005BE  8946F2                	mov	word ptr [bp-14],ax
                                   ;	
                                   ;	    con = ptrDescFichero[dfs].menor ;
                                   ;	
000005C1  8B4606                	mov	ax,word ptr [bp+6]
000005C4  6BC015                	imul	ax,ax,21
000005C7  C41E1200              	les	bx,dword ptr DGROUP:_ptrDescFichero
000005CB  03D8                  	add	bx,ax
000005CD  268B470D              	mov	ax,word ptr es:[bx+13]
000005D1  8946EC                	mov	word ptr [bp-20],ax
                                   ;	
                                   ;	    teclado = (teclado_t far *)&descConsola[con].teclado ;
                                   ;	
000005D4  8B46EC                	mov	ax,word ptr [bp-20]
000005D7  69C0BA20              	imul	ax,ax,8378
000005DB  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
000005DF  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
000005E3  03D8                  	add	bx,ax
000005E5  81C3421F              	add	bx,8002
000005E9  8956FC                	mov	word ptr [bp-4],dx
000005EC  895EFA                	mov	word ptr [bp-6],bx
                                   ;	
                                   ;	    modoAp = ptrDescProceso[indProcesoActual].tfa[df].modoAp ;
                                   ;	
000005EF  8B46FE                	mov	ax,word ptr [bp-2]
000005F2  69C0DC00              	imul	ax,ax,220
000005F6  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
000005FA  03D8                  	add	bx,ax
000005FC  8B46F2                	mov	ax,word ptr [bp-14]
000005FF  C1E003                	shl	ax,3
00000602  03D8                  	add	bx,ax
00000604  268B878800            	mov	ax,word ptr es:[bx+136]
00000609  8946F8                	mov	word ptr [bp-8],ax
                                   ;	
                                   ;	
                                   ;	    if (nbytes <= teclado->ncar)
                                   ;	
0000060C  C45EFA                	les	bx,dword ptr [bp-6]
0000060F  268B875601            	mov	ax,word ptr es:[bx+342]
00000614  3B460C                	cmp	ax,word ptr [bp+12]
00000617  7208                  	jb	short @10@9
                                   ;	
                                   ;	        nbARetornar = nbytes ;
                                   ;	
00000619  8B460C                	mov	ax,word ptr [bp+12]
0000061C  8946F4                	mov	word ptr [bp-12],ax
0000061F  EB0B                  	jmp	short @10@10
00000621                        @10@9:
                                   ;	
                                   ;	    else
                                   ;	        nbARetornar = teclado->ncar ;
                                   ;	
00000621  C45EFA                	les	bx,dword ptr [bp-6]
00000624  268B875601            	mov	ax,word ptr es:[bx+342]
00000629  8946F4                	mov	word ptr [bp-12],ax
0000062C                        @10@10:
                                   ;	
                                   ;	    nbARetornar0 = nbARetornar ;
                                   ;	
0000062C  8B46F4                	mov	ax,word ptr [bp-12]
0000062F  8946F6                	mov	word ptr [bp-10],ax
00000632  EB32                  	jmp	short @10@15
00000634                        @10@11:
                                   ;	
                                   ;	    while (nbARetornar > 0)
                                   ;	    {
                                   ;	        car = sacar(teclado) ;
                                   ;	
00000634  FF76FC                	push	word ptr [bp-4]
00000637  FF76FA                	push	word ptr [bp-6]
0000063A  E80FFA                	call	near ptr _sacar
0000063D  83C404                	add	sp,4
00000640  8846EF                	mov	byte ptr [bp-17],al
                                   ;	
                                   ;	        if ((car == '\r') && (modoAp & O_TEXT)) car = '\n' ;
                                   ;	
00000643  807EEF0D              	cmp	byte ptr [bp-17],13
00000647  750B                  	jne	short @10@14
00000649  F746F80040            	test	word ptr [bp-8],16384
0000064E  7404                  	je	short @10@14
00000650  C646EF0A              	mov	byte ptr [bp-17],10
00000654                        @10@14:
                                   ;	
                                   ;	        dir[i++] = car ;
                                   ;	
00000654  C45E08                	les	bx,dword ptr [bp+8]
00000657  035EF0                	add	bx,word ptr [bp-16]
0000065A  8A46EF                	mov	al,byte ptr [bp-17]
0000065D  268807                	mov	byte ptr es:[bx],al
00000660  FF46F0                	inc	word ptr [bp-16]
                                   ;	
                                   ;	        nbARetornar-- ;
                                   ;	
00000663  FF4EF4                	dec	word ptr [bp-12]
00000666                        @10@15:
00000666  837EF400              	cmp	word ptr [bp-12],0
0000066A  77C8                  	ja	short @10@11
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
0000066C  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(nbARetornar0) ;
                                   ;	
0000066D  8B46F6                	mov	ax,word ptr [bp-10]
                                   ;	
                                   ;	}
                                   ;	
00000670  C9                    	leave	
00000671                        	ret	
00000672                        _aio_readConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000672                        _writeConsola	proc	far
                                   ;	
                                   ;	int far writeConsola ( int dfs, pointer_t dir, word_t nbytes )
                                   ;	
00000672  C8060000              	enter	6,0
                                   ;	
                                   ;	{
                                   ;	    int i ;
                                   ;	    char car ;
                                   ;	    word_t con ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
00000676  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
00000677  2EA10300               	mov	 ax,word ptr cs:[3] 
0000067B  8CCA                   	mov	 dx,cs 
0000067D  03C2                   	add	 ax,dx 
0000067F  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    con = ptrDescFichero[dfs].menor ;
                                   ;	
00000681  8B4606                	mov	ax,word ptr [bp+6]
00000684  6BC015                	imul	ax,ax,21
00000687  C41E1200              	les	bx,dword ptr DGROUP:_ptrDescFichero
0000068B  03D8                  	add	bx,ax
0000068D  268B470D              	mov	ax,word ptr es:[bx+13]
00000691  8946FA                	mov	word ptr [bp-6],ax
                                   ;	
                                   ;	    for ( i = 0 ; i < nbytes ; i++ )
                                   ;	
00000694  C746FE0000            	mov	word ptr [bp-2],0
00000699  EB1D                  	jmp	short @11@9
0000069B                        @11@7:
                                   ;	
                                   ;	    {
                                   ;	        car = dir[i] ;
                                   ;	
0000069B  C45E08                	les	bx,dword ptr [bp+8]
0000069E  035EFE                	add	bx,word ptr [bp-2]
000006A1  268A07                	mov	al,byte ptr es:[bx]
000006A4  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	        printCarConsola(con, car) ;
                                   ;	
000006A7  8A46FD                	mov	al,byte ptr [bp-3]
000006AA  50                    	push	ax
000006AB  8A46FA                	mov	al,byte ptr [bp-6]
000006AE  50                    	push	ax
000006AF  E8DDF9                	call	near ptr _printCarConsola
000006B2  83C404                	add	sp,4
000006B5  FF46FE                	inc	word ptr [bp-2]
000006B8                        @11@9:
000006B8  8B46FE                	mov	ax,word ptr [bp-2]
000006BB  3B460C                	cmp	ax,word ptr [bp+12]
000006BE  72DB                  	jb	short @11@7
                                   ;	
                                   ;	    }
                                   ;	    if (con == consolaDeSuperficie)
                                   ;	
000006C0  8B46FA                	mov	ax,word ptr [bp-6]
000006C3  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
000006C7  7515                  	jne	short @11@13
                                   ;	
                                   ;	        if (cursorC < 80)                      /* ptrBiosArea->VIDEO-width */
                                   ;	
000006C9  803E000050            	cmp	byte ptr DGROUP:_cursorC,80
000006CE  730E                  	jae	short @11@13
                                   ;	
                                   ;	            goToXYHw(cursorF, cursorC) ;
                                   ;	
000006D0  A00000                	mov	al,byte ptr DGROUP:_cursorC
000006D3  50                    	push	ax
000006D4  A00000                	mov	al,byte ptr DGROUP:_cursorF
000006D7  50                    	push	ax
000006D8  E80000                	call	near ptr _goToXYHw
000006DB  83C404                	add	sp,4
000006DE                        @11@13:
                                   ;	
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
000006DE  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(nbytes) ;
                                   ;	
000006DF  8B460C                	mov	ax,word ptr [bp+12]
                                   ;	
                                   ;	}
                                   ;	
000006E2  C9                    	leave	
000006E3                        	ret	
000006E4                        _writeConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000006E4                        _aio_writeConsola	proc	far
                                   ;	
                                   ;	int far aio_writeConsola ( int dfs, pointer_t dir, word_t nbytes )
                                   ;	
000006E4  55                    	push	bp
000006E5  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    return(writeConsola(dfs, dir, nbytes)) ;
                                   ;	
000006E7  FF760C                	push	word ptr [bp+12]
000006EA  FF760A                	push	word ptr [bp+10]
000006ED  FF7608                	push	word ptr [bp+8]
000006F0  FF7606                	push	word ptr [bp+6]
000006F3  0E                    	push	cs
000006F4  E87BFF                	call	near ptr _writeConsola
000006F7  83C408                	add	sp,8
                                   ;	
                                   ;	}
                                   ;	
000006FA  5D                    	pop	bp
000006FB                        	ret	
000006FC                        _aio_writeConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000006FC                        _lseekConsola	proc	far
                                   ;	
                                   ;	long int far lseekConsola ( int dfs, long int pos, word_t whence )
                                   ;	
000006FC  C80A0000              	enter	10,0
                                   ;	
                                   ;	{
                                   ;	    /* posicionar el cursor */
                                   ;	
                                   ;	    word_t con ;
                                   ;	    long int posActual ;
                                   ;	    long int res ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
00000700  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
00000701  2EA10300               	mov	 ax,word ptr cs:[3] 
00000705  8CCA                   	mov	 dx,cs 
00000707  03C2                   	add	 ax,dx 
00000709  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    con = ptrDescFichero[dfs].menor ;
                                   ;	
0000070B  8B4606                	mov	ax,word ptr [bp+6]
0000070E  6BC015                	imul	ax,ax,21
00000711  C41E1200              	les	bx,dword ptr DGROUP:_ptrDescFichero
00000715  03D8                  	add	bx,ax
00000717  268B470D              	mov	ax,word ptr es:[bx+13]
0000071B  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	
                                   ;	    posActual = cursorF*80+cursorC ;
                                   ;	
0000071E  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000721  B400                  	mov	ah,0
00000723  6BC050                	imul	ax,ax,80
00000726  8A160000              	mov	dl,byte ptr DGROUP:_cursorC
0000072A  B600                  	mov	dh,0
0000072C  03C2                  	add	ax,dx
0000072E  99                    	cwd	
0000072F  8956FC                	mov	word ptr [bp-4],dx
00000732  8946FA                	mov	word ptr [bp-6],ax
                                   ;	
                                   ;	
                                   ;	    if (whence == SEEK_CUR)                                    /* SEEK_CUR */
                                   ;	
00000735  837E0C01              	cmp	word ptr [bp+12],1
00000739  7512                  	jne	short @13@8
                                   ;	
                                   ;	        pos = posActual + pos ;
                                   ;	
0000073B  8B56FC                	mov	dx,word ptr [bp-4]
0000073E  8B46FA                	mov	ax,word ptr [bp-6]
00000741  034608                	add	ax,word ptr [bp+8]
00000744  13560A                	adc	dx,word ptr [bp+10]
00000747  89560A                	mov	word ptr [bp+10],dx
0000074A  894608                	mov	word ptr [bp+8],ax
0000074D                        @13@8:
                                   ;	
                                   ;	
                                   ;	    if (whence != SEEK_END) {                        /* SEEK_SET, SEEK_CUR */
                                   ;	
0000074D  837E0C02              	cmp	word ptr [bp+12],2
00000751  7444                  	je	short @13@13
                                   ;	
                                   ;	        if (goToXYConsola(con, pos/80, pos%80) == 0)
                                   ;	
00000753  6A00                  	push	0
00000755  6A50                  	push	80
00000757  FF760A                	push	word ptr [bp+10]
0000075A  FF7608                	push	word ptr [bp+8]
0000075D  E80000                	call	near ptr N_LMOD@
00000760  50                    	push	ax
00000761  6A00                  	push	0
00000763  6A50                  	push	80
00000765  FF760A                	push	word ptr [bp+10]
00000768  FF7608                	push	word ptr [bp+8]
0000076B  E80000                	call	near ptr N_LDIV@
0000076E  50                    	push	ax
0000076F  8A46FE                	mov	al,byte ptr [bp-2]
00000772  50                    	push	ax
00000773  E864FB                	call	near ptr _goToXYConsola
00000776  83C406                	add	sp,6
00000779  0BC0                  	or	ax,ax
0000077B  750E                  	jne	short @13@11
                                   ;	
                                   ;	            res = pos ;
                                   ;	
0000077D  8B560A                	mov	dx,word ptr [bp+10]
00000780  8B4608                	mov	ax,word ptr [bp+8]
00000783  8956F8                	mov	word ptr [bp-8],dx
00000786  8946F6                	mov	word ptr [bp-10],ax
00000789  EB0A                  	jmp	short @13@12
0000078B                        @13@11:
                                   ;	
                                   ;	        else
                                   ;	            res = -1 ;
                                   ;	
0000078B  C746F8FFFF            	mov	word ptr [bp-8],-1
00000790  C746F6FFFF            	mov	word ptr [bp-10],-1
00000795                        @13@12:
                                   ;	
                                   ;	    }
                                   ;	
00000795  EB0C                  	jmp	short @13@14
00000797                        @13@13:
                                   ;	
                                   ;	    else                                                       /* SEEK_END */
                                   ;	        res = posActual ;
                                   ;	
00000797  8B56FC                	mov	dx,word ptr [bp-4]
0000079A  8B46FA                	mov	ax,word ptr [bp-6]
0000079D  8956F8                	mov	word ptr [bp-8],dx
000007A0  8946F6                	mov	word ptr [bp-10],ax
000007A3                        @13@14:
                                   ;	
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
000007A3  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(res) ;
                                   ;	
000007A4  8B56F8                	mov	dx,word ptr [bp-8]
000007A7  8B46F6                	mov	ax,word ptr [bp-10]
                                   ;	
                                   ;	}
                                   ;	
000007AA  C9                    	leave	
000007AB                        	ret	
000007AC                        _lseekConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000007AC                        _fcntlConsola	proc	far
                                   ;	
                                   ;	int far fcntlConsola ( int dfs, word_t cmd, word_t arg )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    return(0) ;
                                   ;	
000007AC  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
000007AE                        	ret	
000007AF                        _fcntlConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000007AF                        _ioctlConsola	proc	far
                                   ;	
                                   ;	int far ioctlConsola ( int dfs, word_t request, word_t arg )
                                   ;	
000007AF  C80E0000              	enter	14,0
                                   ;	
                                   ;	{
                                   ;	    int res ;
                                   ;	    word_t nuevaConsola ;
                                   ;	    byte_t con ;
                                   ;	    byte_t cursorFAux ;
                                   ;	    pantalla_t far * pantallaAux ;
                                   ;	    
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
000007B3  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
000007B4  2EA10300               	mov	 ax,word ptr cs:[3] 
000007B8  8CCA                   	mov	 dx,cs 
000007BA  03C2                   	add	 ax,dx 
000007BC  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    res = 0 ;
                                   ;	
000007BE  C746FE0000            	mov	word ptr [bp-2],0
                                   ;	
                                   ;	    if (request == 0x0001)      /* cambiar la consola actual a la indicada */
                                   ;	
000007C3  837E0801              	cmp	word ptr [bp+8],1
000007C7  752F                  	jne	short @15@12
                                   ;	
                                   ;	    {
                                   ;	        nuevaConsola = arg ;
                                   ;	
000007C9  8B460A                	mov	ax,word ptr [bp+10]
000007CC  8946FC                	mov	word ptr [bp-4],ax
                                   ;	
                                   ;	        if (nuevaConsola > maxConsolas) res = -1 ;
                                   ;	
000007CF  A05A01                	mov	al,byte ptr DGROUP:_maxConsolas
000007D2  B400                  	mov	ah,0
000007D4  3B46FC                	cmp	ax,word ptr [bp-4]
000007D7  7307                  	jae	short @15@9
000007D9  C746FEFFFF            	mov	word ptr [bp-2],-1
000007DE  EB15                  	jmp	short @15@11
000007E0                        @15@9:
                                   ;	
                                   ;	        else if (nuevaConsola != consolaDeSuperficie)
                                   ;	
000007E0  8B46FC                	mov	ax,word ptr [bp-4]
000007E3  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
000007E7  740C                  	je	short @15@11
                                   ;	
                                   ;	        {
                                   ;	            salvarConsolaDeSuperficie() ;
                                   ;	
000007E9  E8DDFB                	call	near ptr _salvarConsolaDeSuperficie
                                   ;	
                                   ;	            consolaDeSuperficie = nuevaConsola ;
                                   ;	
000007EC  8B46FC                	mov	ax,word ptr [bp-4]
000007EF  A35C01                	mov	word ptr DGROUP:_consolaDeSuperficie,ax
                                   ;	
                                   ;	            establecerConsolaDeSuperficie() ;
                                   ;	
000007F2  E85FFB                	call	near ptr _establecerConsolaDeSuperficie
000007F5                        @15@11:
                                   ;	
                                   ;	        }
                                   ;	    }
                                   ;	
000007F5  E9B801                	jmp	@15@32
000007F8                        @15@12:
                                   ;	
                                   ;	    else if (request == 0x0002)               /* obtener la consola actual */
                                   ;	
000007F8  837E0802              	cmp	word ptr [bp+8],2
000007FC  7509                  	jne	short @15@14
                                   ;	
                                   ;	    {
                                   ;	        res = consolaDeSuperficie ;
                                   ;	
000007FE  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
00000801  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	//      printStrBIOS("\n res = ") ;
                                   ;	//      printDecBIOS(res, 1) ;
                                   ;	    }
                                   ;	
00000804  E9A901                	jmp	@15@32
00000807                        @15@14:
                                   ;	
                                   ;	    else if (request == 0x0003) /* cambiar numero de lineas de la pantalla */
                                   ;	
00000807  837E0803              	cmp	word ptr [bp+8],3
0000080B  7403                  	je	@@1
0000080D  E9A001                	jmp	@15@32
00000810                        @@1:
                                   ;	
                                   ;	    {
                                   ;	        int numFilasAnt = maxFilasAct ;
                                   ;	
00000810  33C0                  	xor	ax,ax
00000812  8EC0                  	mov	es,ax
00000814  26A08404              	mov	al,byte ptr es:[1156]
00000818  B400                  	mov	ah,0
0000081A  40                    	inc	ax
0000081B  8946F4                	mov	word ptr [bp-12],ax
                                   ;	
                                   ;	        if (arg <= 0) res = numFilasAnt ;       /* numero de lineas actual */
                                   ;	
0000081E  837E0A00              	cmp	word ptr [bp+10],0
00000822  7709                  	ja	short @15@17
00000824  8B46F4                	mov	ax,word ptr [bp-12]
00000827  8946FE                	mov	word ptr [bp-2],ax
0000082A  E98301                	jmp	@15@32
0000082D                        @15@17:
                                   ;	
                                   ;	        else if ((arg != 25) && (arg != 28) && (arg != 50)) res = -1 ;
                                   ;	
0000082D  837E0A19              	cmp	word ptr [bp+10],25
00000831  7414                  	je	short @15@21
00000833  837E0A1C              	cmp	word ptr [bp+10],28
00000837  740E                  	je	short @15@21
00000839  837E0A32              	cmp	word ptr [bp+10],50
0000083D  7408                  	je	short @15@21
0000083F  C746FEFFFF            	mov	word ptr [bp-2],-1
00000844  E96901                	jmp	@15@32
00000847                        @15@21:
                                   ;	
                                   ;	        else if (arg == numFilasAnt) res = 0 ;
                                   ;	
00000847  8B460A                	mov	ax,word ptr [bp+10]
0000084A  3B46F4                	cmp	ax,word ptr [bp-12]
0000084D  7508                  	jne	short @15@23
0000084F  C746FE0000            	mov	word ptr [bp-2],0
00000854  E95901                	jmp	@15@32
00000857                        @15@23:
                                   ;	
                                   ;	        else
                                   ;	        {
                                   ;				int numFilas = arg ;
                                   ;	
00000857  8B460A                	mov	ax,word ptr [bp+10]
0000085A  8946F2                	mov	word ptr [bp-14],ax
                                   ;	
                                   ;	            ptrBiosArea->VIDEO_lastrow = arg - 1 ;
                                   ;	
0000085D  8A460A                	mov	al,byte ptr [bp+10]
00000860  FEC8                  	dec	al
00000862  33D2                  	xor	dx,dx
00000864  8EC2                  	mov	es,dx
00000866  26A28404              	mov	byte ptr es:[1156],al
                                   ;	
                                   ;	            if (cursorF >= numFilas)
                                   ;	
0000086A  A00000                	mov	al,byte ptr DGROUP:_cursorF
0000086D  B400                  	mov	ah,0
0000086F  3B46F2                	cmp	ax,word ptr [bp-14]
00000872  7C50                  	jl	short @15@25
                                   ;	
                                   ;	            {
                                   ;	//              copiarPantalla((pantalla_t far *)&ptrPant->t[maxF-numFilas+1][0], ptrPant, numFilas) ;
                                   ;	                copiarCPantalla((pantalla_t far *)&ptrPant->t[cursorF-numFilas+1][0], ptrPant, numFilas) ;
                                   ;	
00000874  FF76F2                	push	word ptr [bp-14]
00000877  FF360200              	push	word ptr DGROUP:_ptrPant+2
0000087B  FF360000              	push	word ptr DGROUP:_ptrPant
0000087F  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000882  B400                  	mov	ah,0
00000884  2B46F2                	sub	ax,word ptr [bp-14]
00000887  40                    	inc	ax
00000888  69C0A000              	imul	ax,ax,160
0000088C  8B160000              	mov	dx,word ptr DGROUP:_ptrPant
00000890  03D0                  	add	dx,ax
00000892  FF360200              	push	word ptr DGROUP:_ptrPant+2
00000896  52                    	push	dx
00000897  E80000                	call	near ptr _copiarCPantalla
0000089A  83C40A                	add	sp,10
                                   ;	
                                   ;	                borrarCPantalla((pantalla_t far *)&ptrPant->t[numFilas][0], numFilasAnt-numFilas) ;
                                   ;	
0000089D  8B46F4                	mov	ax,word ptr [bp-12]
000008A0  2B46F2                	sub	ax,word ptr [bp-14]
000008A3  50                    	push	ax
000008A4  8B46F2                	mov	ax,word ptr [bp-14]
000008A7  69C0A000              	imul	ax,ax,160
000008AB  8B160000              	mov	dx,word ptr DGROUP:_ptrPant
000008AF  03D0                  	add	dx,ax
000008B1  FF360200              	push	word ptr DGROUP:_ptrPant+2
000008B5  52                    	push	dx
000008B6  E80000                	call	near ptr _borrarCPantalla
000008B9  83C406                	add	sp,6
                                   ;	
                                   ;	                cursorF = numFilas-1 ;
                                   ;	
000008BC  8A46F2                	mov	al,byte ptr [bp-14]
000008BF  04FF                  	add	al,255
000008C1  A20000                	mov	byte ptr DGROUP:_cursorF,al
000008C4                        @15@25:
                                   ;	
                                   ;	            }
                                   ;	            salvarConsolaDeSuperficie() ;
                                   ;	
000008C4  E802FB                	call	near ptr _salvarConsolaDeSuperficie
                                   ;	
                                   ;	            redimensionar(arg, 80) ;
                                   ;	
000008C7  6A50                  	push	80
000008C9  8A460A                	mov	al,byte ptr [bp+10]
000008CC  50                    	push	ax
000008CD  E80000                	call	near ptr _redimensionar
000008D0  83C404                	add	sp,4
                                   ;	
                                   ;	            establecerConsolaDeSuperficie() ;
                                   ;	
000008D3  E87EFA                	call	near ptr _establecerConsolaDeSuperficie
                                   ;	
                                   ;	            res = maxFilasAct ;
                                   ;	
000008D6  33C0                  	xor	ax,ax
000008D8  8EC0                  	mov	es,ax
000008DA  26A08404              	mov	al,byte ptr es:[1156]
000008DE  B400                  	mov	ah,0
000008E0  40                    	inc	ax
000008E1  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	            if (maxFilasAct == numFilas)
                                   ;	
000008E4  33C0                  	xor	ax,ax
000008E6  8EC0                  	mov	es,ax
000008E8  26A08404              	mov	al,byte ptr es:[1156]
000008EC  B400                  	mov	ah,0
000008EE  40                    	inc	ax
000008EF  3B46F2                	cmp	ax,word ptr [bp-14]
000008F2  7403                  	je	@@2
000008F4  E9B900                	jmp	@15@32
000008F7                        @@2:
                                   ;	
                                   ;	            {
                                   ;	                for ( con = 0 ; con < maxConsolas ; con ++ )
                                   ;	
000008F7  C646FB00              	mov	byte ptr [bp-5],0
000008FB  E9A600                	jmp	@15@31
000008FE                        @15@27:
                                   ;	
                                   ;	                {
                                   ;	                    if (con != consolaDeSuperficie)
                                   ;	
000008FE  8A46FB                	mov	al,byte ptr [bp-5]
00000901  B400                  	mov	ah,0
00000903  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
00000907  7503                  	jne	@@3
00000909  E99500                	jmp	@15@30
0000090C                        @@3:
                                   ;	
                                   ;	                    {
                                   ;	                        cursorFAux = descConsola[con].F ;
                                   ;	
0000090C  8A46FB                	mov	al,byte ptr [bp-5]
0000090F  B400                  	mov	ah,0
00000911  69C0BA20              	imul	ax,ax,8378
00000915  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000919  03D8                  	add	bx,ax
0000091B  268A87401F            	mov	al,byte ptr es:[bx+8000]
00000920  8846FA                	mov	byte ptr [bp-6],al
                                   ;	
                                   ;	                        if (cursorFAux >= numFilas)
                                   ;	
00000923  8A46FA                	mov	al,byte ptr [bp-6]
00000926  B400                  	mov	ah,0
00000928  3B46F2                	cmp	ax,word ptr [bp-14]
0000092B  7C74                  	jl	short @15@30
                                   ;	
                                   ;	                        {
                                   ;	                            pantallaAux = (pantalla_t far *)&descConsola[con].pantalla ;
                                   ;	
0000092D  8A46FB                	mov	al,byte ptr [bp-5]
00000930  B400                  	mov	ah,0
00000932  69C0BA20              	imul	ax,ax,8378
00000936  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
0000093A  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
0000093E  03D8                  	add	bx,ax
00000940  8956F8                	mov	word ptr [bp-8],dx
00000943  895EF6                	mov	word ptr [bp-10],bx
                                   ;	
                                   ;	//                          copiarCPantalla((pantalla_t far *)&pantallaAux->t[maxF-numFilas+1][0], pantallaAux, numFilas) ;
                                   ;	                            copiarCPantalla((pantalla_t far *)&pantallaAux->t[cursorFAux-numFilas+1][0], pantallaAux, numFilas) 
                                   ;	
00000946  FF76F2                	push	word ptr [bp-14]
00000949  FF76F8                	push	word ptr [bp-8]
0000094C  FF76F6                	push	word ptr [bp-10]
0000094F  8A46FA                	mov	al,byte ptr [bp-6]
00000952  B400                  	mov	ah,0
00000954  2B46F2                	sub	ax,word ptr [bp-14]
00000957  40                    	inc	ax
00000958  69C0A000              	imul	ax,ax,160
0000095C  8B56F6                	mov	dx,word ptr [bp-10]
0000095F  03D0                  	add	dx,ax
00000961  FF76F8                	push	word ptr [bp-8]
00000964  52                    	push	dx
00000965  E80000                	call	near ptr _copiarCPantalla
00000968  83C40A                	add	sp,10
                                   ;	
                                   ;	                            borrarCPantalla((pantalla_t far *)&pantallaAux->t[numFilas][0], numFilasAnt-numFilas) ;
                                   ;	
0000096B  8B46F4                	mov	ax,word ptr [bp-12]
0000096E  2B46F2                	sub	ax,word ptr [bp-14]
00000971  50                    	push	ax
00000972  8B46F2                	mov	ax,word ptr [bp-14]
00000975  69C0A000              	imul	ax,ax,160
00000979  8B56F6                	mov	dx,word ptr [bp-10]
0000097C  03D0                  	add	dx,ax
0000097E  FF76F8                	push	word ptr [bp-8]
00000981  52                    	push	dx
00000982  E80000                	call	near ptr _borrarCPantalla
00000985  83C406                	add	sp,6
                                   ;	
                                   ;	                            descConsola[con].F = numFilas-1 ;
                                   ;	
00000988  8A46FB                	mov	al,byte ptr [bp-5]
0000098B  B400                  	mov	ah,0
0000098D  69C0BA20              	imul	ax,ax,8378
00000991  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000995  03D8                  	add	bx,ax
00000997  8A46F2                	mov	al,byte ptr [bp-14]
0000099A  04FF                  	add	al,255
0000099C  268887401F            	mov	byte ptr es:[bx+8000],al
000009A1                        @15@30:
000009A1  FE46FB                	inc	byte ptr [bp-5]
000009A4                        @15@31:
000009A4  8A46FB                	mov	al,byte ptr [bp-5]
000009A7  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
000009AB  7303                  	jae	@@4
000009AD  E94EFF                	jmp	@15@27
000009B0                        @@4:
000009B0                        @15@32:
                                   ;	
                                   ;	                        }
                                   ;	                    }
                                   ;	                }
                                   ;	            }
                                   ;	        }
                                   ;	    }
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
000009B0  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(res) ;
                                   ;	
000009B1  8B46FE                	mov	ax,word ptr [bp-2]
                                   ;	
                                   ;	}
                                   ;	
000009B4  C9                    	leave	
000009B5                        	ret	
000009B6                        _ioctlConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000009B6                        _eliminarConsola	proc	far
                                   ;	
                                   ;	int far eliminarConsola ( pindx_t pindx )
                                   ;	
000009B6  C8060000              	enter	6,0
                                   ;	
                                   ;	{
                                   ;	    teclado_t far * teclado ;
                                   ;	    int i ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
000009BA  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
000009BB  2EA10300               	mov	 ax,word ptr cs:[3] 
000009BF  8CCA                   	mov	 dx,cs 
000009C1  03C2                   	add	 ax,dx 
000009C3  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    for ( i = 0 ; i < maxConsolas ; i++ )
                                   ;	
000009C5  C746FA0000            	mov	word ptr [bp-6],0
000009CA  EB48                  	jmp	short @16@10
000009CC                        @16@7:
                                   ;	
                                   ;	    {
                                   ;	        teclado = (teclado_t far *)&descConsola[consolaDeSuperficie].teclado ;
                                   ;	
000009CC  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
000009CF  69C0BA20              	imul	ax,ax,8378
000009D3  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
000009D7  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
000009DB  03D8                  	add	bx,ax
000009DD  81C3421F              	add	bx,8002
000009E1  8956FE                	mov	word ptr [bp-2],dx
000009E4  895EFC                	mov	word ptr [bp-4],bx
                                   ;	
                                   ;	        if estaPC2c(pindx, &teclado->bloqueados)
                                   ;	
000009E7  C45EFC                	les	bx,dword ptr [bp-4]
000009EA  26C45F4E              	les	bx,dword ptr es:[bx+78]
000009EE  8B4606                	mov	ax,word ptr [bp+6]
000009F1  C1E002                	shl	ax,2
000009F4  03D8                  	add	bx,ax
000009F6  26833FFF              	cmp	word ptr es:[bx],-1
000009FA  7415                  	je	short @16@9
                                   ;	
                                   ;	        {
                                   ;	            eliminarPC2c(pindx, &teclado->bloqueados) ;
                                   ;	
000009FC  8B46FC                	mov	ax,word ptr [bp-4]
000009FF  83C048                	add	ax,72
00000A02  FF76FE                	push	word ptr [bp-2]
00000A05  50                    	push	ax
00000A06  FF7606                	push	word ptr [bp+6]
00000A09  E80000                	call	near ptr _eliminarPC2c
00000A0C  83C406                	add	sp,6
                                   ;	
                                   ;	            break ;
                                   ;	
00000A0F  EB0D                  	jmp	short @16@11
00000A11                        @16@9:
00000A11  FF46FA                	inc	word ptr [bp-6]
00000A14                        @16@10:
00000A14  A05A01                	mov	al,byte ptr DGROUP:_maxConsolas
00000A17  B400                  	mov	ah,0
00000A19  3B46FA                	cmp	ax,word ptr [bp-6]
00000A1C  7FAE                  	jg	short @16@7
00000A1E                        @16@11:
                                   ;	
                                   ;	        }
                                   ;	    }
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
00000A1E  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(0) ;
                                   ;	
00000A1F  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
00000A21  C9                    	leave	
00000A22                        	ret	
00000A23                        _eliminarConsola	endp
00000A23                        _TEXT	ends
000001BE                        _DATA	segment word public 'DATA'
000001BE                        _keyStroke	label	byte
000001BE  00                    	db	0
000001BF                        _scanCode	label	byte
000001BF  00                    	db	0
000001C0                        _scanCodeAnt	label	byte
000001C0  00                    	db	0
000001C1                        _AltPulsada	label	byte
000001C1  00                    	db	0
000001C2                        _CtrlPulsada	label	byte
000001C2  00                    	db	0
000001C3                        _DATA	ends
00000A23                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
00000A23                        _isr_consola	proc	far
                                   ;	
                                   ;	void far isr_consola ( void )
                                   ;	
00000A23  C8240000              	enter	36,0
00000A27  56                    	push	si
                                   ;	
                                   ;	{
                                   ;	    word_t w ;
                                   ;	    char car ;
                                   ;	    word_t nbytes ;
                                   ;	    pointer_t dir ;
                                   ;	    int df ;
                                   ;	    pindx_t indProcesoActual ;
                                   ;	    pindx_t pindx ;
                                   ;	    modoAp_t modoAp ;
                                   ;	    bool_t extendido ;
                                   ;	    teclado_t far * teclado ;
                                   ;	    byte_t con ;
                                   ;	    byte_t nuevaConsola ;
                                   ;	    word_t numFilas ;
                                   ;	    word_t numFilasAnt ;
                                   ;	    byte_t cursorFAux ;
                                   ;	    pantalla_t far * pantallaAux ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
00000A28  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
00000A29  2EA10300               	mov	 ax,word ptr cs:[3] 
00000A2D  8CCA                   	mov	 dx,cs 
00000A2F  03C2                   	add	 ax,dx 
00000A31  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	
                                   ;	    scanCodeAnt = scanCode ;
                                   ;	
00000A33  A0BF01                	mov	al,byte ptr DGROUP:_scanCode
00000A36  A2C001                	mov	byte ptr DGROUP:_scanCodeAnt,al
                                   ;	
                                   ;	    asm in al,60h       /* ¿solo debe leerse una vez el registro de datos? */
                                   ;	
00000A39  E460                   	in	 al,60h       
                                   ;	
                                   ;	    asm mov scanCode,al
                                   ;	
00000A3B  A2BF01                 	mov	 DGROUP:_scanCode,al
                                   ;	
                                   ;	
                                   ;	    ptrVIOrg[nVIntConsola]() ;  /* llamamos a la antigua rti (pushf + int) */
                                   ;	
00000A3E  C41E4000              	les	bx,dword ptr DGROUP:_ptrVIOrg
00000A42  9C                    	pushf	
00000A43  26FF5F24              	call	dword ptr es:[bx+36]
                                   ;	
                                   ;	
                                   ;	    nuevaConsola = 0xFF ;
                                   ;	
00000A47  C646E6FF              	mov	byte ptr [bp-26],255
                                   ;	
                                   ;	    numFilasAnt = maxFilasAct ;
                                   ;	
00000A4B  33C0                  	xor	ax,ax
00000A4D  8EC0                  	mov	es,ax
00000A4F  26A08404              	mov	al,byte ptr es:[1156]
00000A53  B400                  	mov	ah,0
00000A55  40                    	inc	ax
00000A56  8946E2                	mov	word ptr [bp-30],ax
                                   ;	
                                   ;	
                                   ;	#if (FALSE)                               /* trazas por si hay que depurar */
                                   ;	    printCarBIOS('<') ;
                                   ;	    printHexBIOS(scanCodeAnt, 2) ;
                                   ;	    printHexBIOS(scanCode, 2) ;
                                   ;	    printCarBIOS('>') ;
                                   ;	#endif
                                   ;	
                                   ;	    if (scanCodeAnt == CS_Alt) AltPulsada = TRUE ;
                                   ;	
00000A59  803EC00138            	cmp	byte ptr DGROUP:_scanCodeAnt,56
00000A5E  7507                  	jne	short @17@11
00000A60  C606C10101            	mov	byte ptr DGROUP:_AltPulsada,1
00000A65  EB0C                  	jmp	short @17@13
00000A67                        @17@11:
                                   ;	
                                   ;	    else if (scanCodeAnt == (CS_Alt | 0x80)) AltPulsada = FALSE ;
                                   ;	
00000A67  803EC001B8            	cmp	byte ptr DGROUP:_scanCodeAnt,184
00000A6C  7505                  	jne	short @17@13
00000A6E  C606C10100            	mov	byte ptr DGROUP:_AltPulsada,0
00000A73                        @17@13:
                                   ;	
                                   ;	
                                   ;	    if (scanCodeAnt == CS_Ctrl) CtrlPulsada = TRUE ;
                                   ;	
00000A73  803EC0011D            	cmp	byte ptr DGROUP:_scanCodeAnt,29
00000A78  7507                  	jne	short @17@15
00000A7A  C606C20101            	mov	byte ptr DGROUP:_CtrlPulsada,1
00000A7F  EB0C                  	jmp	short @17@17
00000A81                        @17@15:
                                   ;	
                                   ;	    else if (scanCodeAnt == (CS_Ctrl | 0x80)) CtrlPulsada = FALSE ;
                                   ;	
00000A81  803EC0019D            	cmp	byte ptr DGROUP:_scanCodeAnt,157
00000A86  7505                  	jne	short @17@17
00000A88  C606C20100            	mov	byte ptr DGROUP:_CtrlPulsada,0
00000A8D                        @17@17:
                                   ;	
                                   ;	
                                   ;	    if ((CtrlPulsada) && (scanCode == 0x26))                     /* Ctrl+L */
                                   ;	
00000A8D  803EC20100            	cmp	byte ptr DGROUP:_CtrlPulsada,0
00000A92  7415                  	je	short @17@20
00000A94  803EBF0126            	cmp	byte ptr DGROUP:_scanCode,38
00000A99  750E                  	jne	short @17@20
                                   ;	
                                   ;	        cambiarTeclaListaBDA((teclaListaBDA() & 0xFF00) | '\f') ;
                                   ;	
00000A9B  E80000                	call	near ptr _teclaListaBDA
00000A9E  2500FF                	and	ax,-256
00000AA1  83C80C                	or	ax,12
00000AA4  50                    	push	ax
00000AA5  E80000                	call	near ptr _cambiarTeclaListaBDA
00000AA8  59                    	pop	cx
00000AA9                        @17@20:
                                   ;	
                                   ;	
                                   ;	    if (AltPulsada)
                                   ;	
00000AA9  803EC10100            	cmp	byte ptr DGROUP:_AltPulsada,0
00000AAE  7503                  	jne	@@5
00000AB0  E91602                	jmp	@17@62
00000AB3                        @@5:
                                   ;	
                                   ;	    {
                                   ;	
                                   ;	        switch (scanCode)
                                   ;	
00000AB3  A0BF01                	mov	al,byte ptr DGROUP:_scanCode
00000AB6  B400                  	mov	ah,0
00000AB8  83E829                	sub	ax,41
00000ABB  8BD8                  	mov	bx,ax
00000ABD  83FB1B                	cmp	bx,27
00000AC0  7726                  	ja	short @17@28
00000AC2  03DB                  	add	bx,bx
00000AC4  2EFFA75C0F            	jmp	word ptr cs:@17@C212[bx]
00000AC9                        @17@24:
                                   ;	
                                   ;	        {
                                   ;	
                                   ;	        case CS_ES_BSlash :
                                   ;	            nuevaConsola = 0 ;
                                   ;	
00000AC9  C646E600              	mov	byte ptr [bp-26],0
                                   ;	
                                   ;	            break ;
                                   ;	
00000ACD  EB19                  	jmp	short @17@28
00000ACF                        @17@25:
                                   ;	
                                   ;	
                                   ;	        case CS_F1     : ;
                                   ;	        case CS_F2     : ;
                                   ;	        case CS_F3     : ;
                                   ;	        case CS_F4     : ;
                                   ;	        case CS_F5     : ;
                                   ;	        case CS_F6     : ;
                                   ;	        case CS_F7     : ;
                                   ;	        case CS_F8     : ;
                                   ;	        case CS_F9     : ;
                                   ;	        case CS_F10    :
                                   ;	            con = scanCode - CS_F1 + 1 ;
                                   ;	
00000ACF  A0BF01                	mov	al,byte ptr DGROUP:_scanCode
00000AD2  04C6                  	add	al,198
00000AD4  8846E7                	mov	byte ptr [bp-25],al
                                   ;	
                                   ;	            if (con < maxConsolas)
                                   ;	
00000AD7  8A46E7                	mov	al,byte ptr [bp-25]
00000ADA  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
00000ADE  7306                  	jae	short @17@27
                                   ;	
                                   ;	                nuevaConsola = con ;
                                   ;	
00000AE0  8A46E7                	mov	al,byte ptr [bp-25]
00000AE3  8846E6                	mov	byte ptr [bp-26],al
00000AE6                        @17@27:
                                   ;	
                                   ;	            break ;
                                   ;	
00000AE6  EB00                  	jmp	short @17@28
00000AE8                        @17@28:
                                   ;	
                                   ;	        default        :
                                   ;	            ;
                                   ;	        }
                                   ;	
                                   ;	        if (nuevaConsola != 0xFF)
                                   ;	
00000AE8  807EE6FF              	cmp	byte ptr [bp-26],255
00000AEC  741C                  	je	short @17@32
                                   ;	
                                   ;	        {
                                   ;	            if (nuevaConsola != consolaDeSuperficie)
                                   ;	
00000AEE  8A46E6                	mov	al,byte ptr [bp-26]
00000AF1  B400                  	mov	ah,0
00000AF3  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
00000AF7  740E                  	je	short @17@31
                                   ;	
                                   ;	            {
                                   ;	                salvarConsolaDeSuperficie() ;
                                   ;	
00000AF9  E8CDF8                	call	near ptr _salvarConsolaDeSuperficie
                                   ;	
                                   ;	                consolaDeSuperficie = nuevaConsola ;
                                   ;	
00000AFC  8A46E6                	mov	al,byte ptr [bp-26]
00000AFF  B400                  	mov	ah,0
00000B01  A35C01                	mov	word ptr DGROUP:_consolaDeSuperficie,ax
                                   ;	
                                   ;	                establecerConsolaDeSuperficie() ;
                                   ;	
00000B04  E84DF8                	call	near ptr _establecerConsolaDeSuperficie
00000B07                        @17@31:
                                   ;	
                                   ;	            }
                                   ;	        }
                                   ;	
00000B07  E9B501                	jmp	@17@59
00000B0A                        @17@32:
                                   ;	
                                   ;	        else if (redimensionable)
                                   ;	
00000B0A  833E000000            	cmp	word ptr DGROUP:_redimensionable,0
00000B0F  7503                  	jne	@@6
00000B11  E9AB01                	jmp	@17@59
00000B14                        @@6:
                                   ;	
                                   ;	        {
                                   ;	            switch (scanCode)
                                   ;	
00000B14  A0BF01                	mov	al,byte ptr DGROUP:_scanCode
00000B17  B400                  	mov	ah,0
00000B19  83F81B                	cmp	ax,27
00000B1C  7408                  	je	short @17@37
00000B1E  83F835                	cmp	ax,53
00000B21  7403                  	je	short @17@37
00000B23  E99901                	jmp	@17@59
00000B26                        @17@37:
                                   ;	
                                   ;	            {
                                   ;	            case 0x1B : ;                                          /* Alt+ */
                                   ;	            case 0x35 : ;                                          /* Alt- */
                                   ;	                if (scanCode == 0x1B)                              /* Alt+ */
                                   ;	
00000B26  803EBF011B            	cmp	byte ptr DGROUP:_scanCode,27
00000B2B  7521                  	jne	short @17@44
                                   ;	
                                   ;	                {
                                   ;	                    if (numFilasAnt >= 50) numFilas = 25 ;
                                   ;	
00000B2D  837EE232              	cmp	word ptr [bp-30],50
00000B31  7207                  	jb	short @17@40
00000B33  C746E41900            	mov	word ptr [bp-28],25
00000B38  EB12                  	jmp	short @17@43
00000B3A                        @17@40:
                                   ;	
                                   ;	                    else if (numFilasAnt >= 28) numFilas = 50 ;
                                   ;	
00000B3A  837EE21C              	cmp	word ptr [bp-30],28
00000B3E  7207                  	jb	short @17@42
00000B40  C746E43200            	mov	word ptr [bp-28],50
00000B45  EB05                  	jmp	short @17@43
00000B47                        @17@42:
                                   ;	
                                   ;	                    else numFilas = 28 ;
                                   ;	
00000B47  C746E41C00            	mov	word ptr [bp-28],28
00000B4C                        @17@43:
                                   ;	
                                   ;	                }
                                   ;	
00000B4C  EB1F                  	jmp	short @17@49
00000B4E                        @17@44:
                                   ;	
                                   ;	                else                                               /* Alt- */
                                   ;	                {
                                   ;	                    if (numFilasAnt >= 50) numFilas = 28 ;
                                   ;	
00000B4E  837EE232              	cmp	word ptr [bp-30],50
00000B52  7207                  	jb	short @17@46
00000B54  C746E41C00            	mov	word ptr [bp-28],28
00000B59  EB12                  	jmp	short @17@49
00000B5B                        @17@46:
                                   ;	
                                   ;	                    else if (numFilasAnt >= 28) numFilas = 25 ;
                                   ;	
00000B5B  837EE21C              	cmp	word ptr [bp-30],28
00000B5F  7207                  	jb	short @17@48
00000B61  C746E41900            	mov	word ptr [bp-28],25
00000B66  EB05                  	jmp	short @17@49
00000B68                        @17@48:
                                   ;	
                                   ;	                    else numFilas = 50 ;
                                   ;	
00000B68  C746E43200            	mov	word ptr [bp-28],50
00000B6D                        @17@49:
                                   ;	
                                   ;	                }
                                   ;	////            if (numFilas != numFilasAnt)
                                   ;	////            {
                                   ;	                    if (cursorF >= numFilas)
                                   ;	
00000B6D  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000B70  B400                  	mov	ah,0
00000B72  3B46E4                	cmp	ax,word ptr [bp-28]
00000B75  7250                  	jb	short @17@51
                                   ;	
                                   ;	                    {
                                   ;	                        copiarCPantalla((pantalla_t far *)&ptrPant->t[cursorF-numFilas+1][0], ptrPant, numFilas) ;
                                   ;	
00000B77  FF76E4                	push	word ptr [bp-28]
00000B7A  FF360200              	push	word ptr DGROUP:_ptrPant+2
00000B7E  FF360000              	push	word ptr DGROUP:_ptrPant
00000B82  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000B85  B400                  	mov	ah,0
00000B87  2B46E4                	sub	ax,word ptr [bp-28]
00000B8A  40                    	inc	ax
00000B8B  69C0A000              	imul	ax,ax,160
00000B8F  8B160000              	mov	dx,word ptr DGROUP:_ptrPant
00000B93  03D0                  	add	dx,ax
00000B95  FF360200              	push	word ptr DGROUP:_ptrPant+2
00000B99  52                    	push	dx
00000B9A  E80000                	call	near ptr _copiarCPantalla
00000B9D  83C40A                	add	sp,10
                                   ;	
                                   ;	                        borrarCPantalla((pantalla_t far *)&ptrPant->t[numFilas][0], numFilasAnt-numFilas) ;
                                   ;	
00000BA0  8B46E2                	mov	ax,word ptr [bp-30]
00000BA3  2B46E4                	sub	ax,word ptr [bp-28]
00000BA6  50                    	push	ax
00000BA7  8B46E4                	mov	ax,word ptr [bp-28]
00000BAA  69C0A000              	imul	ax,ax,160
00000BAE  8B160000              	mov	dx,word ptr DGROUP:_ptrPant
00000BB2  03D0                  	add	dx,ax
00000BB4  FF360200              	push	word ptr DGROUP:_ptrPant+2
00000BB8  52                    	push	dx
00000BB9  E80000                	call	near ptr _borrarCPantalla
00000BBC  83C406                	add	sp,6
                                   ;	
                                   ;	//                      copiarPantalla((pantalla_t far *)&ptrPant->t[cursorF-numFilas+1][0], ptrPant, numFilas) ;
                                   ;	                        cursorF = numFilas-1 ;
                                   ;	
00000BBF  8A46E4                	mov	al,byte ptr [bp-28]
00000BC2  FEC8                  	dec	al
00000BC4  A20000                	mov	byte ptr DGROUP:_cursorF,al
00000BC7                        @17@51:
                                   ;	
                                   ;	                    }
                                   ;	                    salvarConsolaDeSuperficie() ;
                                   ;	
00000BC7  E8FFF7                	call	near ptr _salvarConsolaDeSuperficie
                                   ;	
                                   ;	                    redimensionar(numFilas, 80) ;
                                   ;	
00000BCA  6A50                  	push	80
00000BCC  8A46E4                	mov	al,byte ptr [bp-28]
00000BCF  50                    	push	ax
00000BD0  E80000                	call	near ptr _redimensionar
00000BD3  83C404                	add	sp,4
                                   ;	
                                   ;	#define MSDOS_Player 1
                                   ;	#ifdef MSDOS_Player
                                   ;	                    goToXYHw(24, 79) ;
                                   ;	
00000BD6  6A4F                  	push	79
00000BD8  6A18                  	push	24
00000BDA  E80000                	call	near ptr _goToXYHw
00000BDD  83C404                	add	sp,4
                                   ;	
                                   ;	                    goToXYHw(cursorF, cursorC) ;   /* necesario para MSDOS Player (Takeda) ??? */
                                   ;	
00000BE0  A00000                	mov	al,byte ptr DGROUP:_cursorC
00000BE3  50                    	push	ax
00000BE4  A00000                	mov	al,byte ptr DGROUP:_cursorF
00000BE7  50                    	push	ax
00000BE8  E80000                	call	near ptr _goToXYHw
00000BEB  83C404                	add	sp,4
                                   ;	
                                   ;	#endif
                                   ;	                    if (numFilas == ptrBiosArea->VIDEO_lastrow + 1)
                                   ;	
00000BEE  33C0                  	xor	ax,ax
00000BF0  8EC0                  	mov	es,ax
00000BF2  26A08404              	mov	al,byte ptr es:[1156]
00000BF6  B400                  	mov	ah,0
00000BF8  40                    	inc	ax
00000BF9  3B46E4                	cmp	ax,word ptr [bp-28]
00000BFC  7403                  	je	@@7
00000BFE  E9BC00                	jmp	@17@58
00000C01                        @@7:
                                   ;	
                                   ;	                    {
                                   ;	                        establecerConsolaDeSuperficie() ;
                                   ;	
00000C01  E850F7                	call	near ptr _establecerConsolaDeSuperficie
                                   ;	
                                   ;	                        for ( con = 0 ; con < maxConsolas ; con ++ )
                                   ;	
00000C04  C646E700              	mov	byte ptr [bp-25],0
00000C08  E9A600                	jmp	@17@57
00000C0B                        @17@53:
                                   ;	
                                   ;	                        {
                                   ;	                            if (con != consolaDeSuperficie)
                                   ;	
00000C0B  8A46E7                	mov	al,byte ptr [bp-25]
00000C0E  B400                  	mov	ah,0
00000C10  3B065C01              	cmp	ax,word ptr DGROUP:_consolaDeSuperficie
00000C14  7503                  	jne	@@8
00000C16  E99500                	jmp	@17@56
00000C19                        @@8:
                                   ;	
                                   ;	                            {
                                   ;	                                cursorFAux = descConsola[con].F ;
                                   ;	
00000C19  8A46E7                	mov	al,byte ptr [bp-25]
00000C1C  B400                  	mov	ah,0
00000C1E  69C0BA20              	imul	ax,ax,8378
00000C22  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000C26  03D8                  	add	bx,ax
00000C28  268A87401F            	mov	al,byte ptr es:[bx+8000]
00000C2D  8846E1                	mov	byte ptr [bp-31],al
                                   ;	
                                   ;	                                if (cursorFAux >= numFilas)
                                   ;	
00000C30  8A46E1                	mov	al,byte ptr [bp-31]
00000C33  B400                  	mov	ah,0
00000C35  3B46E4                	cmp	ax,word ptr [bp-28]
00000C38  7274                  	jb	short @17@56
                                   ;	
                                   ;	                                {
                                   ;	                                    pantallaAux = (pantalla_t far *)&descConsola[con].pantalla ;
                                   ;	
00000C3A  8A46E7                	mov	al,byte ptr [bp-25]
00000C3D  B400                  	mov	ah,0
00000C3F  69C0BA20              	imul	ax,ax,8378
00000C43  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
00000C47  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
00000C4B  03D8                  	add	bx,ax
00000C4D  8956DE                	mov	word ptr [bp-34],dx
00000C50  895EDC                	mov	word ptr [bp-36],bx
                                   ;	
                                   ;	                                    copiarCPantalla((pantalla_t far *)&pantallaAux->t[cursorFAux-numFilas+1][0], pantallaAux, nu
                                   ;	
00000C53  FF76E4                	push	word ptr [bp-28]
00000C56  FF76DE                	push	word ptr [bp-34]
00000C59  FF76DC                	push	word ptr [bp-36]
00000C5C  8A46E1                	mov	al,byte ptr [bp-31]
00000C5F  B400                  	mov	ah,0
00000C61  2B46E4                	sub	ax,word ptr [bp-28]
00000C64  40                    	inc	ax
00000C65  69C0A000              	imul	ax,ax,160
00000C69  8B56DC                	mov	dx,word ptr [bp-36]
00000C6C  03D0                  	add	dx,ax
00000C6E  FF76DE                	push	word ptr [bp-34]
00000C71  52                    	push	dx
00000C72  E80000                	call	near ptr _copiarCPantalla
00000C75  83C40A                	add	sp,10
                                   ;	
                                   ;	                                    borrarCPantalla((pantalla_t far *)&pantallaAux->t[numFilas][0], numFilasAnt-numFilas) ;
                                   ;	
00000C78  8B46E2                	mov	ax,word ptr [bp-30]
00000C7B  2B46E4                	sub	ax,word ptr [bp-28]
00000C7E  50                    	push	ax
00000C7F  8B46E4                	mov	ax,word ptr [bp-28]
00000C82  69C0A000              	imul	ax,ax,160
00000C86  8B56DC                	mov	dx,word ptr [bp-36]
00000C89  03D0                  	add	dx,ax
00000C8B  FF76DE                	push	word ptr [bp-34]
00000C8E  52                    	push	dx
00000C8F  E80000                	call	near ptr _borrarCPantalla
00000C92  83C406                	add	sp,6
                                   ;	
                                   ;	                                    descConsola[con].F = numFilas-1 ;
                                   ;	
00000C95  8A46E7                	mov	al,byte ptr [bp-25]
00000C98  B400                  	mov	ah,0
00000C9A  69C0BA20              	imul	ax,ax,8378
00000C9E  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00000CA2  03D8                  	add	bx,ax
00000CA4  8A46E4                	mov	al,byte ptr [bp-28]
00000CA7  FEC8                  	dec	al
00000CA9  268887401F            	mov	byte ptr es:[bx+8000],al
00000CAE                        @17@56:
00000CAE  FE46E7                	inc	byte ptr [bp-25]
00000CB1                        @17@57:
00000CB1  8A46E7                	mov	al,byte ptr [bp-25]
00000CB4  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
00000CB8  7303                  	jae	@@9
00000CBA  E94EFF                	jmp	@17@53
00000CBD                        @@9:
00000CBD                        @17@58:
                                   ;	
                                   ;	                                }
                                   ;	                            }
                                   ;	                        }
                                   ;	                    }
                                   ;	////            }
                                   ;	                break ;
                                   ;	
00000CBD  EB00                  	jmp	short @17@59
00000CBF                        @17@59:
                                   ;	
                                   ;	            default :
                                   ;	                ;
                                   ;	            }
                                   ;	        }
                                   ;	        w = leerTeclaListaBDA() ;                        /* /PP 2016-10-31 */
                                   ;	
00000CBF  E80000                	call	near ptr _leerTeclaListaBDA
00000CC2  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	        restore_DS0() ;                           /* restaura el DS de SO1 */
                                   ;	
00000CC5  1F                     	pop	 ds 
                                   ;	
                                   ;	        return ;                                         /* /PP 2016-10-31 */
                                   ;	
00000CC6  E99002                	jmp	@17@86
00000CC9                        @17@62:
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    if (scanCode & 0x80)
                                   ;	
00000CC9  F606BF0180            	test	byte ptr DGROUP:_scanCode,128
00000CCE  7404                  	je	short @17@65
                                   ;	
                                   ;	    {
                                   ;	        restore_DS0() ;                           /* restaura el DS de SO1 */
                                   ;	
00000CD0  1F                     	pop	 ds 
                                   ;	
                                   ;	        return ;
                                   ;	
00000CD1  E98502                	jmp	@17@86
00000CD4                        @17@65:
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	#if (!usa_BIOS)
                                   ;	    w = leerTeclaListaBDA() ;           /* para sacar la palabra del bufer */
                                   ;	
00000CD4  E80000                	call	near ptr _leerTeclaListaBDA
00000CD7  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	//puntoDeParada() ;
                                   ;	#else
                                   ;	    w = teclaListaBIOS() ;
                                   ;	    if (w) leerTeclaBIOS() ;            /* para sacar la palabra del bufer */
                                   ;	    /* funciona mal en qemu/bochs ¿permite las interrupciones? */
                                   ;	//  puntoDeParada() ;
                                   ;	#endif
                                   ;	
                                   ;	//  printHexBIOS(w, 4) ; printCarBIOS(' ') ;
                                   ;	
                                   ;	    if (w)
                                   ;	
00000CDA  837EFE00              	cmp	word ptr [bp-2],0
00000CDE  7503                  	jne	@@10
00000CE0  E97502                	jmp	@17@85
00000CE3                        @@10:
                                   ;	
                                   ;	    {
                                   ;	        car = (char)w ;
                                   ;	
00000CE3  8A46FE                	mov	al,byte ptr [bp-2]
00000CE6  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	//      car = tablaSP[car] ;
                                   ;	        car = tablaDeConversion[car] ;
                                   ;	
00000CE9  8A46FD                	mov	al,byte ptr [bp-3]
00000CEC  98                    	cbw	
00000CED  8BD8                  	mov	bx,ax
00000CEF  8A875400              	mov	al,byte ptr DGROUP:_tablaSP[bx]
00000CF3  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	
                                   ;	        if (car == (char)0xE0)
                                   ;	
00000CF6  807EFDE0              	cmp	byte ptr [bp-3],224
00000CFA  7504                  	jne	short @17@68
                                   ;	
                                   ;	            car = '\0' ;
                                   ;	
00000CFC  C646FD00              	mov	byte ptr [bp-3],0
00000D00                        @17@68:
                                   ;	
                                   ;	        extendido = (car == '\0') ;
                                   ;	
00000D00  807EFD00              	cmp	byte ptr [bp-3],0
00000D04  7505                  	jne	short @17@70
00000D06  B80100                	mov	ax,1
00000D09  EB02                  	jmp	short @17@71
00000D0B                        @17@70:
00000D0B  33C0                  	xor	ax,ax
00000D0D                        @17@71:
00000D0D  8946EC                	mov	word ptr [bp-20],ax
                                   ;	
                                   ;	
                                   ;	        teclado = (teclado_t far *)&descConsola[consolaDeSuperficie].teclado ;
                                   ;	
00000D10  A15C01                	mov	ax,word ptr DGROUP:_consolaDeSuperficie
00000D13  69C0BA20              	imul	ax,ax,8378
00000D17  8B165801              	mov	dx,word ptr DGROUP:_descConsola+2
00000D1B  8B1E5601              	mov	bx,word ptr DGROUP:_descConsola
00000D1F  03D8                  	add	bx,ax
00000D21  81C3421F              	add	bx,8002
00000D25  8956EA                	mov	word ptr [bp-22],dx
00000D28  895EE8                	mov	word ptr [bp-24],bx
                                   ;	
                                   ;	
                                   ;	        if (teclado->bloqueados.numElem > 0)
                                   ;	
00000D2B  C45EE8                	les	bx,dword ptr [bp-24]
00000D2E  26837F4800            	cmp	word ptr es:[bx+72],0
00000D33  7F03                  	jg	@@11
00000D35  E9EB01                	jmp	@17@83
00000D38                        @@11:
                                   ;	
                                   ;	        {
                                   ;	            pindx = teclado->bloqueados.primero ;
                                   ;	
00000D38  C45EE8                	les	bx,dword ptr [bp-24]
00000D3B  268B474A              	mov	ax,word ptr es:[bx+74]
00000D3F  8946F0                	mov	word ptr [bp-16],ax
                                   ;	
                                   ;	            df = ptrDescProceso[pindx].trama->BX ;
                                   ;	
00000D42  8B46F0                	mov	ax,word ptr [bp-16]
00000D45  69C0DC00              	imul	ax,ax,220
00000D49  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000D4D  03D8                  	add	bx,ax
00000D4F  26C45F06              	les	bx,dword ptr es:[bx+6]
00000D53  268B470C              	mov	ax,word ptr es:[bx+12]
00000D57  8946F4                	mov	word ptr [bp-12],ax
                                   ;	
                                   ;	            modoAp = ptrDescProceso[pindx].tfa[df].modoAp ;
                                   ;	
00000D5A  8B46F0                	mov	ax,word ptr [bp-16]
00000D5D  69C0DC00              	imul	ax,ax,220
00000D61  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000D65  03D8                  	add	bx,ax
00000D67  8B46F4                	mov	ax,word ptr [bp-12]
00000D6A  C1E003                	shl	ax,3
00000D6D  03D8                  	add	bx,ax
00000D6F  268B878800            	mov	ax,word ptr es:[bx+136]
00000D74  8946EE                	mov	word ptr [bp-18],ax
                                   ;	
                                   ;	            /*    plot('k', car, contadorTimer0()) ; */
                                   ;	            nbytes = nbytesProceso[pindx] ;
                                   ;	
00000D77  8B5EF0                	mov	bx,word ptr [bp-16]
00000D7A  03DB                  	add	bx,bx
00000D7C  8B875E01              	mov	ax,word ptr DGROUP:_nbytesProceso[bx]
00000D80  8946FA                	mov	word ptr [bp-6],ax
                                   ;	
                                   ;	            dir = dirProceso[pindx] ;
                                   ;	
00000D83  8B5EF0                	mov	bx,word ptr [bp-16]
00000D86  C1E302                	shl	bx,2
00000D89  8B978001              	mov	dx,word ptr DGROUP:_dirProceso[bx+2]
00000D8D  8B877E01              	mov	ax,word ptr DGROUP:_dirProceso[bx]
00000D91  8956F8                	mov	word ptr [bp-8],dx
00000D94  8946F6                	mov	word ptr [bp-10],ax
                                   ;	
                                   ;	            nbytes-- ;
                                   ;	
00000D97  FF4EFA                	dec	word ptr [bp-6]
                                   ;	
                                   ;	            if ((car == '\r') && (modoAp & O_TEXT)) car = '\n' ;
                                   ;	
00000D9A  807EFD0D              	cmp	byte ptr [bp-3],13
00000D9E  750B                  	jne	short @17@75
00000DA0  F746EE0040            	test	word ptr [bp-18],16384
00000DA5  7404                  	je	short @17@75
00000DA7  C646FD0A              	mov	byte ptr [bp-3],10
00000DAB                        @17@75:
                                   ;	
                                   ;	            dir[0] = car ;                                          /* car */
                                   ;	
00000DAB  C45EF6                	les	bx,dword ptr [bp-10]
00000DAE  8A46FD                	mov	al,byte ptr [bp-3]
00000DB1  268807                	mov	byte ptr es:[bx],al
                                   ;	
                                   ;	            dir++ ;
                                   ;	
00000DB4  FF46F6                	inc	word ptr [bp-10]
                                   ;	
                                   ;	            if (extendido)
                                   ;	
00000DB7  837EEC00              	cmp	word ptr [bp-20],0
00000DBB  7437                  	je	short @17@79
                                   ;	
                                   ;	            {
                                   ;	                keyStroke = (byte_t)(w >> 8) ;
                                   ;	
00000DBD  8B46FE                	mov	ax,word ptr [bp-2]
00000DC0  C1E808                	shr	ax,8
00000DC3  A2BE01                	mov	byte ptr DGROUP:_keyStroke,al
                                   ;	
                                   ;	                car = (char)keyStroke ;
                                   ;	
00000DC6  A0BE01                	mov	al,byte ptr DGROUP:_keyStroke
00000DC9  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	                if (nbytes > 0)
                                   ;	
00000DCC  837EFA00              	cmp	word ptr [bp-6],0
00000DD0  7612                  	jbe	short @17@78
                                   ;	
                                   ;	                {
                                   ;	                    nbytes-- ;
                                   ;	
00000DD2  FF4EFA                	dec	word ptr [bp-6]
                                   ;	
                                   ;	                    dir[1] = car ;                             /* scanCode */
                                   ;	
00000DD5  C45EF6                	les	bx,dword ptr [bp-10]
00000DD8  8A46FD                	mov	al,byte ptr [bp-3]
00000DDB  26884701              	mov	byte ptr es:[bx+1],al
                                   ;	
                                   ;	                    dir++ ;
                                   ;	
00000DDF  FF46F6                	inc	word ptr [bp-10]
                                   ;	
                                   ;	                }
                                   ;	
00000DE2  EB10                  	jmp	short @17@79
00000DE4                        @17@78:
                                   ;	
                                   ;	                else
                                   ;	                    meter(car, teclado) ;
                                   ;	
00000DE4  FF76EA                	push	word ptr [bp-22]
00000DE7  FF76E8                	push	word ptr [bp-24]
00000DEA  8A46FD                	mov	al,byte ptr [bp-3]
00000DED  50                    	push	ax
00000DEE  E80FF2                	call	near ptr _meter
00000DF1  83C406                	add	sp,6
00000DF4                        @17@79:
                                   ;	
                                   ;	            }
                                   ;	            nbytesProceso[pindx] = nbytes ;
                                   ;	
00000DF4  8B5EF0                	mov	bx,word ptr [bp-16]
00000DF7  03DB                  	add	bx,bx
00000DF9  8B46FA                	mov	ax,word ptr [bp-6]
00000DFC  89875E01              	mov	word ptr DGROUP:_nbytesProceso[bx],ax
                                   ;	
                                   ;	            dirProceso[pindx] = dir ;
                                   ;	
00000E00  8B5EF0                	mov	bx,word ptr [bp-16]
00000E03  C1E302                	shl	bx,2
00000E06  8B56F8                	mov	dx,word ptr [bp-8]
00000E09  8B46F6                	mov	ax,word ptr [bp-10]
00000E0C  89978001              	mov	word ptr DGROUP:_dirProceso[bx+2],dx
00000E10  89877E01              	mov	word ptr DGROUP:_dirProceso[bx],ax
                                   ;	
                                   ;	            if (nbytes == 0)
                                   ;	
00000E14  837EFA00              	cmp	word ptr [bp-6],0
00000E18  7403                  	je	@@12
00000E1A  E90401                	jmp	@17@82
00000E1D                        @@12:
                                   ;	
                                   ;	            {
                                   ;	                desencolarPC2c(&teclado->bloqueados) ;
                                   ;	
00000E1D  8B46E8                	mov	ax,word ptr [bp-24]
00000E20  83C048                	add	ax,72
00000E23  FF76EA                	push	word ptr [bp-22]
00000E26  50                    	push	ax
00000E27  E80000                	call	near ptr _desencolarPC2c
00000E2A  83C404                	add	sp,4
                                   ;	
                                   ;	                ptrDescProceso[pindx].trama->AX =
                                   ;	
                                   ;	
                                   ;	                    ptrDescProceso[pindx].trama->CX ;           /* nbytes0 */
                                   ;	
00000E2D  8B46F0                	mov	ax,word ptr [bp-16]
00000E30  69C0DC00              	imul	ax,ax,220
00000E34  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000E38  03D8                  	add	bx,ax
00000E3A  26C45F06              	les	bx,dword ptr es:[bx+6]
00000E3E  268B4710              	mov	ax,word ptr es:[bx+16]
00000E42  8B56F0                	mov	dx,word ptr [bp-16]
00000E45  69D2DC00              	imul	dx,dx,220
00000E49  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000E4D  03DA                  	add	bx,dx
00000E4F  26C45F06              	les	bx,dword ptr es:[bx+6]
00000E53  26894712              	mov	word ptr es:[bx+18],ax
                                   ;	
                                   ;	                ptrDescProceso[pindx].tfa[df].pos +=
                                   ;	
                                   ;	
                                   ;	                    ptrDescProceso[pindx].trama->CX ;
                                   ;	
00000E57  8B46F0                	mov	ax,word ptr [bp-16]
00000E5A  69C0DC00              	imul	ax,ax,220
00000E5E  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000E62  03D8                  	add	bx,ax
00000E64  26C45F06              	les	bx,dword ptr es:[bx+6]
00000E68  268B4710              	mov	ax,word ptr es:[bx+16]
00000E6C  8B56F0                	mov	dx,word ptr [bp-16]
00000E6F  69D2DC00              	imul	dx,dx,220
00000E73  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000E77  03DA                  	add	bx,dx
00000E79  8B56F4                	mov	dx,word ptr [bp-12]
00000E7C  C1E203                	shl	dx,3
00000E7F  03DA                  	add	bx,dx
00000E81  2601878C00            	add	word ptr es:[bx+140],ax
00000E86  2683978E0000          	adc	word ptr es:[bx+142],0
                                   ;	
                                   ;	                ptrDescProceso[pindx].estado = preparado ;
                                   ;	
00000E8C  8B46F0                	mov	ax,word ptr [bp-16]
00000E8F  69C0DC00              	imul	ax,ax,220
00000E93  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000E97  03D8                  	add	bx,ax
00000E99  26C747020100          	mov	word ptr es:[bx+2],1
                                   ;	
                                   ;	                encolarPC2c(pindx, (ptrC2c_t)&ptrC2cPFR[PUrgentes]) ;
                                   ;	
00000E9F  A11A00                	mov	ax,word ptr DGROUP:_ptrC2cPFR
00000EA2  83C01E                	add	ax,30
00000EA5  FF361C00              	push	word ptr DGROUP:_ptrC2cPFR+2
00000EA9  50                    	push	ax
00000EAA  FF76F0                	push	word ptr [bp-16]
00000EAD  E80000                	call	near ptr _encolarPC2c
00000EB0  83C406                	add	sp,6
                                   ;	
                                   ;	                *ptrActivarAlEpilogo = TRUE ;
                                   ;	
00000EB3  C41E0800              	les	bx,dword ptr DGROUP:_ptrActivarAlEpilogo
00000EB7  26C7070100            	mov	word ptr es:[bx],1
                                   ;	
                                   ;	                indProcesoActual = *ptrIndProcesoActual ;
                                   ;	
00000EBC  C41E0000              	les	bx,dword ptr DGROUP:_ptrIndProcesoActual
00000EC0  268B07                	mov	ax,word ptr es:[bx]
00000EC3  8946F2                	mov	word ptr [bp-14],ax
                                   ;	
                                   ;	                if (indProcesoActual > -1)                  /* nivel 1 o 2 */
                                   ;	
00000EC6  837EF2FF              	cmp	word ptr [bp-14],-1
00000ECA  7E55                  	jle	short @17@82
                                   ;	
                                   ;	                {
                                   ;	                    ptrDescProceso[indProcesoActual].trama =
                                   ;	
                                   ;	
                                   ;	                        MK_FP(*ptrSS_Proceso, *ptrSP_Proceso) ;
                                   ;	
00000ECC  C41E2E00              	les	bx,dword ptr DGROUP:_ptrSS_Proceso
00000ED0  268B07                	mov	ax,word ptr es:[bx]
00000ED3  33D2                  	xor	dx,dx
00000ED5  C41E3200              	les	bx,dword ptr DGROUP:_ptrSP_Proceso
00000ED9  260B17                	or	dx,word ptr es:[bx]
00000EDC  8B5EF2                	mov	bx,word ptr [bp-14]
00000EDF  69DBDC00              	imul	bx,bx,220
00000EE3  C4360C00              	les	si,dword ptr DGROUP:_ptrDescProceso
00000EE7  03F3                  	add	si,bx
00000EE9  26894408              	mov	word ptr es:[si+8],ax
00000EED  26895406              	mov	word ptr es:[si+6],dx
                                   ;	
                                   ;	                    ptrDescProceso[indProcesoActual].estado = preparado ;
                                   ;	
00000EF1  8B46F2                	mov	ax,word ptr [bp-14]
00000EF4  69C0DC00              	imul	ax,ax,220
00000EF8  C41E0C00              	les	bx,dword ptr DGROUP:_ptrDescProceso
00000EFC  03D8                  	add	bx,ax
00000EFE  26C747020100          	mov	word ptr es:[bx+2],1
                                   ;	
                                   ;	                    encolarPC2c(indProcesoActual, (ptrC2c_t)&ptrC2cPFR[PPreparados]) ;
                                   ;	
00000F04  A11A00                	mov	ax,word ptr DGROUP:_ptrC2cPFR
00000F07  83C014                	add	ax,20
00000F0A  FF361C00              	push	word ptr DGROUP:_ptrC2cPFR+2
00000F0E  50                    	push	ax
00000F0F  FF76F2                	push	word ptr [bp-14]
00000F12  E80000                	call	near ptr _encolarPC2c
00000F15  83C406                	add	sp,6
                                   ;	
                                   ;	                    *ptrIndProcesoActual = -1 ;
                                   ;	
00000F18  C41E0000              	les	bx,dword ptr DGROUP:_ptrIndProcesoActual
00000F1C  26C707FFFF            	mov	word ptr es:[bx],-1
00000F21                        @17@82:
                                   ;	
                                   ;	                }
                                   ;	            }
                                   ;	        }
                                   ;	
00000F21  EB35                  	jmp	short @17@85
00000F23                        @17@83:
                                   ;	
                                   ;	        else
                                   ;	        {
                                   ;	            meter(car, teclado) ;                                   /* car */
                                   ;	
00000F23  FF76EA                	push	word ptr [bp-22]
00000F26  FF76E8                	push	word ptr [bp-24]
00000F29  8A46FD                	mov	al,byte ptr [bp-3]
00000F2C  50                    	push	ax
00000F2D  E8D0F0                	call	near ptr _meter
00000F30  83C406                	add	sp,6
                                   ;	
                                   ;	            if (extendido)
                                   ;	
00000F33  837EEC00              	cmp	word ptr [bp-20],0
00000F37  741F                  	je	short @17@85
                                   ;	
                                   ;	            {
                                   ;	                keyStroke = (byte_t)(w >> 8) ;
                                   ;	
00000F39  8B46FE                	mov	ax,word ptr [bp-2]
00000F3C  C1E808                	shr	ax,8
00000F3F  A2BE01                	mov	byte ptr DGROUP:_keyStroke,al
                                   ;	
                                   ;	                car = (char)keyStroke ;                       /* keyStroke */
                                   ;	
00000F42  A0BE01                	mov	al,byte ptr DGROUP:_keyStroke
00000F45  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	                meter(car, teclado) ;
                                   ;	
00000F48  FF76EA                	push	word ptr [bp-22]
00000F4B  FF76E8                	push	word ptr [bp-24]
00000F4E  8A46FD                	mov	al,byte ptr [bp-3]
00000F51  50                    	push	ax
00000F52  E8ABF0                	call	near ptr _meter
00000F55  83C406                	add	sp,6
00000F58                        @17@85:
                                   ;	
                                   ;	            }
                                   ;	        }
                                   ;	    }
                                   ;	    /*
                                   ;	    if (*info.ptrDebugWord > 0)
                                   ;	    {
                                   ;	        printStrBIOS("\n debugWord = ") ;
                                   ;	        printHexBIOS(*info.ptrDebugWord, 4) ;
                                   ;	        printStrBIOS("\n isr_consola pto 2: ") ;
                                   ;	        printStrBIOS("\n indProcesoActual = ") ;
                                   ;	        printIntBIOS(indProcesoActual, 1) ;
                                   ;	        printStrBIOS(" pindx = ") ;
                                   ;	        printIntBIOS(pindx, 1) ;
                                   ;	        *info.ptrDebugWord = *info.ptrDebugWord - 1 ;
                                   ;	        if (*info.ptrDebugWord == 0) while(TRUE) ;
                                   ;	    }
                                   ;	    */
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
00000F58  1F                     	pop	 ds 
00000F59                        @17@86:
                                   ;	
                                   ;	}
                                   ;	
00000F59  5E                    	pop	si
00000F5A  C9                    	leave	
00000F5B                        	ret	
00000F5C                        _isr_consola	endp
00000F5C                        @17@C212	label	word
00000F5C  C90A                  	dw	@17@24
00000F5E  E80A                  	dw	@17@28
00000F60  E80A                  	dw	@17@28
00000F62  E80A                  	dw	@17@28
00000F64  E80A                  	dw	@17@28
00000F66  E80A                  	dw	@17@28
00000F68  E80A                  	dw	@17@28
00000F6A  E80A                  	dw	@17@28
00000F6C  E80A                  	dw	@17@28
00000F6E  E80A                  	dw	@17@28
00000F70  E80A                  	dw	@17@28
00000F72  E80A                  	dw	@17@28
00000F74  E80A                  	dw	@17@28
00000F76  E80A                  	dw	@17@28
00000F78  E80A                  	dw	@17@28
00000F7A  E80A                  	dw	@17@28
00000F7C  E80A                  	dw	@17@28
00000F7E  E80A                  	dw	@17@28
00000F80  CF0A                  	dw	@17@25
00000F82  CF0A                  	dw	@17@25
00000F84  CF0A                  	dw	@17@25
00000F86  CF0A                  	dw	@17@25
00000F88  CF0A                  	dw	@17@25
00000F8A  CF0A                  	dw	@17@25
00000F8C  CF0A                  	dw	@17@25
00000F8E  CF0A                  	dw	@17@25
00000F90  CF0A                  	dw	@17@25
00000F92  CF0A                  	dw	@17@25
00000F94                        _TEXT	ends
000001C3                        _DATA	segment word public 'DATA'
000001C3                        _congen	label	byte
000001C3  00                    	db	0
000001C4                        _DATA	ends
00000F94                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
00000F94                        _pCon	proc	near
                                   ;	
                                   ;	int pCon ( char car )
                                   ;	
00000F94  55                    	push	bp
00000F95  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    printCarConsola(congen, car) ;
                                   ;	
00000F97  8A4604                	mov	al,byte ptr [bp+4]
00000F9A  50                    	push	ax
00000F9B  A0C301                	mov	al,byte ptr DGROUP:_congen
00000F9E  50                    	push	ax
00000F9F  E8EDF0                	call	near ptr _printCarConsola
00000FA2  83C404                	add	sp,4
                                   ;	
                                   ;	    return(1) ;
                                   ;	
00000FA5  B80100                	mov	ax,1
                                   ;	
                                   ;	}
                                   ;	
00000FA8  5D                    	pop	bp
00000FA9                        	ret	
00000FAA                        _pCon	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000FAA                        _printLnConsola	proc	near
                                   ;	
                                   ;	int printLnConsola ( byte_t con )
                                   ;	
00000FAA  55                    	push	bp
00000FAB  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00000FAD  8A4604                	mov	al,byte ptr [bp+4]
00000FB0  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenLn(pCon)) ;
                                   ;	
00000FB3  68940F                	push	offset _pCon
00000FB6  E80000                	call	near ptr _printGenLn
00000FB9  59                    	pop	cx
                                   ;	
                                   ;	}
                                   ;	
00000FBA  5D                    	pop	bp
00000FBB                        	ret	
00000FBC                        _printLnConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000FBC                        _printStrConsola	proc	near
                                   ;	
                                   ;	int printStrConsola ( byte_t con, const char far * str )
                                   ;	
00000FBC  55                    	push	bp
00000FBD  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00000FBF  8A4604                	mov	al,byte ptr [bp+4]
00000FC2  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenStr(str, pCon)) ;
                                   ;	
00000FC5  68940F                	push	offset _pCon
00000FC8  FF7608                	push	word ptr [bp+8]
00000FCB  FF7606                	push	word ptr [bp+6]
00000FCE  E80000                	call	near ptr _printGenStr
00000FD1  83C406                	add	sp,6
                                   ;	
                                   ;	}
                                   ;	
00000FD4  5D                    	pop	bp
00000FD5                        	ret	
00000FD6                        _printStrConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000FD6                        _printStrHastaConsola	proc	near
                                   ;	
                                   ;	int printStrHastaConsola ( byte_t con, const char far * str, word_t n, bool_t lleno )
                                   ;	
00000FD6  55                    	push	bp
00000FD7  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00000FD9  8A4604                	mov	al,byte ptr [bp+4]
00000FDC  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenStrHasta(str, n, lleno, pCon)) ;
                                   ;	
00000FDF  68940F                	push	offset _pCon
00000FE2  FF760C                	push	word ptr [bp+12]
00000FE5  FF760A                	push	word ptr [bp+10]
00000FE8  FF7608                	push	word ptr [bp+8]
00000FEB  FF7606                	push	word ptr [bp+6]
00000FEE  E80000                	call	near ptr _printGenStrHasta
00000FF1  83C40A                	add	sp,10
                                   ;	
                                   ;	}
                                   ;	
00000FF4  5D                    	pop	bp
00000FF5                        	ret	
00000FF6                        _printStrHastaConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00000FF6                        _printDecConsola	proc	near
                                   ;	
                                   ;	int printDecConsola ( byte_t con, word_t num, word_t l )
                                   ;	
00000FF6  55                    	push	bp
00000FF7  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00000FF9  8A4604                	mov	al,byte ptr [bp+4]
00000FFC  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenDec(num, l, pCon)) ;
                                   ;	
00000FFF  68940F                	push	offset _pCon
00001002  FF7608                	push	word ptr [bp+8]
00001005  FF7606                	push	word ptr [bp+6]
00001008  E80000                	call	near ptr _printGenDec
0000100B  83C406                	add	sp,6
                                   ;	
                                   ;	}
                                   ;	
0000100E  5D                    	pop	bp
0000100F                        	ret	
00001010                        _printDecConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00001010                        _printIntConsola	proc	near
                                   ;	
                                   ;	int printIntConsola ( byte_t con, int num, word_t l )
                                   ;	
00001010  55                    	push	bp
00001011  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00001013  8A4604                	mov	al,byte ptr [bp+4]
00001016  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenInt(num, l, pCon)) ;
                                   ;	
00001019  68940F                	push	offset _pCon
0000101C  FF7608                	push	word ptr [bp+8]
0000101F  FF7606                	push	word ptr [bp+6]
00001022  E80000                	call	near ptr _printGenInt
00001025  83C406                	add	sp,6
                                   ;	
                                   ;	}
                                   ;	
00001028  5D                    	pop	bp
00001029                        	ret	
0000102A                        _printIntConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000102A                        _printLIntConsola	proc	near
                                   ;	
                                   ;	int printLIntConsola ( byte_t con, long int num, word_t l )
                                   ;	
0000102A  55                    	push	bp
0000102B  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
0000102D  8A4604                	mov	al,byte ptr [bp+4]
00001030  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenLInt(num, l, pCon)) ;
                                   ;	
00001033  68940F                	push	offset _pCon
00001036  FF760A                	push	word ptr [bp+10]
00001039  FF7608                	push	word ptr [bp+8]
0000103C  FF7606                	push	word ptr [bp+6]
0000103F  E80000                	call	near ptr _printGenLInt
00001042  83C408                	add	sp,8
                                   ;	
                                   ;	}
                                   ;	
00001045  5D                    	pop	bp
00001046                        	ret	
00001047                        _printLIntConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00001047                        _printLDecConsola	proc	near
                                   ;	
                                   ;	int printLDecConsola ( byte_t con, dword_t num, word_t l )
                                   ;	
00001047  55                    	push	bp
00001048  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
0000104A  8A4604                	mov	al,byte ptr [bp+4]
0000104D  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenLDec(num, l, pCon)) ;
                                   ;	
00001050  68940F                	push	offset _pCon
00001053  FF760A                	push	word ptr [bp+10]
00001056  FF7608                	push	word ptr [bp+8]
00001059  FF7606                	push	word ptr [bp+6]
0000105C  E80000                	call	near ptr _printGenLDec
0000105F  83C408                	add	sp,8
                                   ;	
                                   ;	}
                                   ;	
00001062  5D                    	pop	bp
00001063                        	ret	
00001064                        _printLDecConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00001064                        _printHexConsola	proc	near
                                   ;	
                                   ;	int printHexConsola ( byte_t con, word_t num, word_t l )
                                   ;	
00001064  55                    	push	bp
00001065  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00001067  8A4604                	mov	al,byte ptr [bp+4]
0000106A  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenHex(num, l, pCon)) ;
                                   ;	
0000106D  68940F                	push	offset _pCon
00001070  FF7608                	push	word ptr [bp+8]
00001073  FF7606                	push	word ptr [bp+6]
00001076  E80000                	call	near ptr _printGenHex
00001079  83C406                	add	sp,6
                                   ;	
                                   ;	}
                                   ;	
0000107C  5D                    	pop	bp
0000107D                        	ret	
0000107E                        _printHexConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000107E                        _printLHexConsola	proc	near
                                   ;	
                                   ;	int printLHexConsola ( byte_t con, dword_t num, word_t l )
                                   ;	
0000107E  55                    	push	bp
0000107F  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
00001081  8A4604                	mov	al,byte ptr [bp+4]
00001084  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenLHex(num, l, pCon)) ;
                                   ;	
00001087  68940F                	push	offset _pCon
0000108A  FF760A                	push	word ptr [bp+10]
0000108D  FF7608                	push	word ptr [bp+8]
00001090  FF7606                	push	word ptr [bp+6]
00001093  E80000                	call	near ptr _printGenLHex
00001096  83C408                	add	sp,8
                                   ;	
                                   ;	}
                                   ;	
00001099  5D                    	pop	bp
0000109A                        	ret	
0000109B                        _printLHexConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000109B                        _printPtrConsola	proc	near
                                   ;	
                                   ;	int printPtrConsola ( byte_t con, pointer_t ptr )
                                   ;	
0000109B  55                    	push	bp
0000109C  8BEC                  	mov	bp,sp
                                   ;	
                                   ;	{
                                   ;	    congen = con ;
                                   ;	
0000109E  8A4604                	mov	al,byte ptr [bp+4]
000010A1  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    return(printGenPtr(ptr, pCon)) ;
                                   ;	
000010A4  68940F                	push	offset _pCon
000010A7  FF7608                	push	word ptr [bp+8]
000010AA  FF7606                	push	word ptr [bp+6]
000010AD  E80000                	call	near ptr _printGenPtr
000010B0  83C406                	add	sp,6
                                   ;	
                                   ;	}
                                   ;	
000010B3  5D                    	pop	bp
000010B4                        	ret	
000010B5                        _printPtrConsola	endp
000010B5                        _TEXT	ends
000001C4                        _DATA	segment word public 'DATA'
000001C4                        _strCbBlancos	label	byte
000001C4  00                    	db	0
000001C5                        _strCbCON	label	byte
000001C5  43                    	db	67
000001C6  4F                    	db	79
000001C7  4E                    	db	78
000001C8  00                    	db	0
000001C9                        _DATA	ends
000010B5                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
000010B5                        _cbForTimer	proc	far
                                   ;	
                                   ;	int far cbForTimer ( void far * arg )                         /* call back */
                                   ;	
000010B5  C8040000              	enter	4,0
                                   ;	
                                   ;	{
                                   ;	    byte_t F0 ;
                                   ;	    byte_t C0 ;
                                   ;	    byte_t congen0 ;
                                   ;	    byte_t visibilidadAnt ;
                                   ;	//  trama_t far * tramaProceso ;
                                   ;	
                                   ;	    save_DS0() ;                            /* guarda el DS anterior (SO1) */
                                   ;	
000010B9  1E                     	push	 ds 
                                   ;	
                                   ;	    setraw_DS() ;           /* establece el DS correspondiente al programa */
                                   ;	
000010BA  2EA10300               	mov	 ax,word ptr cs:[3] 
000010BE  8CCA                   	mov	 dx,cs 
000010C0  03C2                   	add	 ax,dx 
000010C2  8ED8                   	mov	 ds,ax 
                                   ;	
                                   ;	    /* punteros a pila (parametros/variables locales) */
                                   ;	    /*
                                   ;	      tramaProceso = MK_FP(*ptrSS_Proceso, *ptrSP_Proceso) ;
                                   ;	    */
                                   ;	    F0 = cursorF ;
                                   ;	
000010C4  A00000                	mov	al,byte ptr DGROUP:_cursorF
000010C7  8846FF                	mov	byte ptr [bp-1],al
                                   ;	
                                   ;	    C0 = cursorC ;
                                   ;	
000010CA  A00000                	mov	al,byte ptr DGROUP:_cursorC
000010CD  8846FE                	mov	byte ptr [bp-2],al
                                   ;	
                                   ;	    congen0 = congen ;
                                   ;	
000010D0  A0C301                	mov	al,byte ptr DGROUP:_congen
000010D3  8846FD                	mov	byte ptr [bp-3],al
                                   ;	
                                   ;	    visibilidadAnt = setCursorVisibilidad(0) ;
                                   ;	
000010D6  6A00                  	push	0
000010D8  E80000                	call	near ptr _setCursorVisibilidad
000010DB  59                    	pop	cx
000010DC  8846FC                	mov	byte ptr [bp-4],al
                                   ;	
                                   ;	    if (consolaDeSuperficie != 0)
                                   ;	
000010DF  833E5C0100            	cmp	word ptr DGROUP:_consolaDeSuperficie,0
000010E4  7448                  	je	short @29@8
                                   ;	
                                   ;	    {
                                   ;	        goToXYConsola(consolaDeSuperficie, 0, 75) ;
                                   ;	
000010E6  6A4B                  	push	75
000010E8  6A00                  	push	0
000010EA  A05C01                	mov	al,byte ptr DGROUP:_consolaDeSuperficie
000010ED  50                    	push	ax
000010EE  E8E9F1                	call	near ptr _goToXYConsola
000010F1  83C406                	add	sp,6
                                   ;	
                                   ;	//      printStrConsola(consolaDeSuperficie, "     ") ;
                                   ;	        printStrHastaConsola(consolaDeSuperficie, strCbBlancos, 5, TRUE) ;
                                   ;	
000010F4  6A01                  	push	1
000010F6  6A05                  	push	5
000010F8  1E                    	push	ds
000010F9  68C401                	push	offset DGROUP:_strCbBlancos
000010FC  A05C01                	mov	al,byte ptr DGROUP:_consolaDeSuperficie
000010FF  50                    	push	ax
00001100  E8D3FE                	call	near ptr _printStrHastaConsola
00001103  83C40A                	add	sp,10
                                   ;	
                                   ;	        goToXYConsola(consolaDeSuperficie, 1, 75) ;
                                   ;	
00001106  6A4B                  	push	75
00001108  6A01                  	push	1
0000110A  A05C01                	mov	al,byte ptr DGROUP:_consolaDeSuperficie
0000110D  50                    	push	ax
0000110E  E8C9F1                	call	near ptr _goToXYConsola
00001111  83C406                	add	sp,6
                                   ;	
                                   ;	//      printStrConsola(consolaDeSuperficie, "CON") ;
                                   ;	        printStrConsola(consolaDeSuperficie, strCbCON) ;
                                   ;	
00001114  1E                    	push	ds
00001115  68C501                	push	offset DGROUP:_strCbCON
00001118  A05C01                	mov	al,byte ptr DGROUP:_consolaDeSuperficie
0000111B  50                    	push	ax
0000111C  E89DFE                	call	near ptr _printStrConsola
0000111F  83C406                	add	sp,6
                                   ;	
                                   ;	        printIntConsola(consolaDeSuperficie, consolaDeSuperficie, 1) ;
                                   ;	
00001122  6A01                  	push	1
00001124  FF365C01              	push	word ptr DGROUP:_consolaDeSuperficie
00001128  A05C01                	mov	al,byte ptr DGROUP:_consolaDeSuperficie
0000112B  50                    	push	ax
0000112C  EB47                  	jmp	short @29@9
0000112E                        @29@8:
                                   ;	
                                   ;	    }
                                   ;	    else
                                   ;	    {
                                   ;	        goToXYConsola(0, 0, 64) ;
                                   ;	
0000112E  6A40                  	push	64
00001130  6A00                  	push	0
00001132  6A00                  	push	0
00001134  E8A3F1                	call	near ptr _goToXYConsola
00001137  83C406                	add	sp,6
                                   ;	
                                   ;	//      printStrConsola(0, "                ") ;
                                   ;	//      printStrConsola(0, strCbBlancos) ;
                                   ;	        printStrHastaConsola(0, strCbBlancos, 16, TRUE) ;
                                   ;	
0000113A  6A01                  	push	1
0000113C  6A10                  	push	16
0000113E  1E                    	push	ds
0000113F  68C401                	push	offset DGROUP:_strCbBlancos
00001142  6A00                  	push	0
00001144  E88FFE                	call	near ptr _printStrHastaConsola
00001147  83C40A                	add	sp,10
                                   ;	
                                   ;	        goToXYConsola(0, 1, 64) ;
                                   ;	
0000114A  6A40                  	push	64
0000114C  6A01                  	push	1
0000114E  6A00                  	push	0
00001150  E887F1                	call	near ptr _goToXYConsola
00001153  83C406                	add	sp,6
                                   ;	
                                   ;	        printLDecConsola(0, ((argCbTimer_t far *)arg)->contTics, 11) ;
                                   ;	
00001156  6A0B                  	push	11
00001158  C45E06                	les	bx,dword ptr [bp+6]
0000115B  26FF7702              	push	word ptr es:[bx+2]
0000115F  26FF37                	push	word ptr es:[bx]
00001162  6A00                  	push	0
00001164  E8E0FE                	call	near ptr _printLDecConsola
00001167  83C408                	add	sp,8
                                   ;	
                                   ;	        printIntConsola(0, ((argCbTimer_t far *)arg)->contTicsRodaja, 4) ;
                                   ;	
0000116A  6A04                  	push	4
0000116C  C45E06                	les	bx,dword ptr [bp+6]
0000116F  26FF7708              	push	word ptr es:[bx+8]
00001173  6A00                  	push	0
00001175                        @29@9:
00001175  E898FE                	call	near ptr _printIntConsola
00001178  83C406                	add	sp,6
                                   ;	
                                   ;	    }
                                   ;	    congen = congen0 ;
                                   ;	
0000117B  8A46FD                	mov	al,byte ptr [bp-3]
0000117E  A2C301                	mov	byte ptr DGROUP:_congen,al
                                   ;	
                                   ;	    cursorF = F0 ;
                                   ;	
00001181  8A46FF                	mov	al,byte ptr [bp-1]
00001184  A20000                	mov	byte ptr DGROUP:_cursorF,al
                                   ;	
                                   ;	    cursorC = C0 ;
                                   ;	
00001187  8A46FE                	mov	al,byte ptr [bp-2]
0000118A  A20000                	mov	byte ptr DGROUP:_cursorC,al
                                   ;	
                                   ;	    goToXYHw(cursorF, cursorC) ;
                                   ;	
0000118D  A00000                	mov	al,byte ptr DGROUP:_cursorC
00001190  50                    	push	ax
00001191  A00000                	mov	al,byte ptr DGROUP:_cursorF
00001194  50                    	push	ax
00001195  E80000                	call	near ptr _goToXYHw
00001198  83C404                	add	sp,4
                                   ;	
                                   ;	    setCursorVisibilidad(visibilidadAnt) ;
                                   ;	
0000119B  8A46FC                	mov	al,byte ptr [bp-4]
0000119E  B400                  	mov	ah,0
000011A0  50                    	push	ax
000011A1  E80000                	call	near ptr _setCursorVisibilidad
000011A4  59                    	pop	cx
                                   ;	
                                   ;	
                                   ;	    restore_DS0() ;                               /* restaura el DS de SO1 */
                                   ;	
000011A5  1F                     	pop	 ds 
                                   ;	
                                   ;	    return(1) ;
                                   ;	
000011A6  B80100                	mov	ax,1
                                   ;	
                                   ;	}
                                   ;	
000011A9  C9                    	leave	
000011AA                        	ret	
000011AB                        _cbForTimer	endp
                                	assume	cs:_TEXT,ds:DGROUP
000011AB                        _finishConsola	proc	near
                                   ;	
                                   ;	int finishConsola ( void )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	//  exit(0) ;              /* obligaria a meter la biblioteca ll_s_so1.lib */
                                   ;	    return(0) ;
                                   ;	
000011AB  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
000011AD                        	ret	
000011AE                        _finishConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
000011AE                        _finCodeDriver	proc	near
                                   ;	
                                   ;	void finCodeDriver ( void )   /* marca el fin del codigo propio del driver */
                                   ;	
                                   ;	
                                   ;	{
                                   ;	}
                                   ;	
000011AE                        	ret	
000011AF                        _finCodeDriver	endp
000011AF                        _TEXT	ends
000001C9                        _DATA	segment word public 'DATA'
000001C9                        _descCcbConsola	label	word
000001C9  00                    	db	0
000001CA  00                    	db	0
000001CB  00                    	db	0
000001CC  00                    	db	0
000001CD  00                    	db	0
000001CE  00                    	db	0
000001CF  00                    	db	0
000001D0  00                    	db	0
000001D1  00                    	db	0
000001D2  00                    	db	0
000001D3  00                    	db	0
000001D4  00                    	db	0
000001D5                        _DATA	ends
000011AF                        _TEXT	segment byte public 'CODE'
                                	assume	cs:_TEXT,ds:DGROUP
000011AF                        _mostrarFormato	proc	near
                                   ;	
                                   ;	void mostrarFormato ( void )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    printf(" formato: CONSOLA [ [ -i | -q | -c | -l ] [ num ] | -N | -n | -u | -k | -h ] ") ;
                                   ;	
000011AF  1E                    	push	ds
000011B0  68D901                	push	offset DGROUP:s@+4
000011B3  E80000                	call	near ptr _printf
000011B6  83C404                	add	sp,4
                                   ;	
                                   ;	}
                                   ;	
000011B9                        	ret	
000011BA                        _mostrarFormato	endp
                                	assume	cs:_TEXT,ds:DGROUP
000011BA                        _formato	proc	near
                                   ;	
                                   ;	int formato ( void )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    printf("\n\n") ;
                                   ;	
000011BA  1E                    	push	ds
000011BB  682702                	push	offset DGROUP:s@+82
000011BE  E80000                	call	near ptr _printf
000011C1  83C404                	add	sp,4
                                   ;	
                                   ;	    mostrarFormato() ;
                                   ;	
000011C4  E8E8FF                	call	near ptr _mostrarFormato
                                   ;	
                                   ;	    printf("\n") ;
                                   ;	
000011C7  1E                    	push	ds
000011C8  682A02                	push	offset DGROUP:s@+85
000011CB  E80000                	call	near ptr _printf
000011CE  83C404                	add	sp,4
                                   ;	
                                   ;	    return(-1) ;
                                   ;	
000011D1  B8FFFF                	mov	ax,-1
                                   ;	
                                   ;	}
                                   ;	
000011D4                        	ret	
000011D5                        _formato	endp
                                	assume	cs:_TEXT,ds:DGROUP
000011D5                        _help	proc	near
                                   ;	
                                   ;	int help ( void )
                                   ;	
                                   ;	
                                   ;	{
                                   ;	    printf("\n\n") ;
                                   ;	
000011D5  1E                    	push	ds
000011D6  682C02                	push	offset DGROUP:s@+87
000011D9  E80000                	call	near ptr _printf
000011DC  83C404                	add	sp,4
                                   ;	
                                   ;	    mostrarFormato() ;
                                   ;	
000011DF  E8CDFF                	call	near ptr _mostrarFormato
                                   ;	
                                   ;	    printf(
                                   ;	
                                   ;	
                                   ;	        ""                                                               "\n"
                                   ;	        ""                                                               "\n"
                                   ;	        " instala/desinstala el driver de la consola"                    "\n"
                                   ;	        ""                                                               "\n"
                                   ;	        " opciones: (por defecto -i y num = 6)"                          "\n"
                                   ;	        ""                                                               "\n"
                                   ;	        "      -i  : instala el driver (usar &)"                         "\n"
                                   ;	        "      -q  : instala sin mensajes de salida (&)"                 "\n"
                                   ;	        "      -c  : cambia la consola actual a la num"                  "\n"
                                   ;	        "      -l  : establece en numero de lineas a num"                "\n"
                                   ;	        "      -n  : status = numero de consola actual"                  "\n"
                                   ;	        "      -nq : como -n pero sin mensaje por pantalla"              "\n"
                                   ;	        "      num : numero de consolas (o nueva c.)"                    "\n"
                                   ;	        "      -u  : desintala el driver"                                "\n"
                                   ;	        "      -k  : desintala el driver (matando)"                      "\n"
                                   ;	        "      -h  : muestra este help"                                  "\n"
                                   ;	    ) ;
                                   ;	
000011E2  1E                    	push	ds
000011E3  682F02                	push	offset DGROUP:s@+90
000011E6  E80000                	call	near ptr _printf
000011E9  83C404                	add	sp,4
                                   ;	
                                   ;	    return(0) ;
                                   ;	
000011EC  33C0                  	xor	ax,ax
                                   ;	
                                   ;	}
                                   ;	
000011EE                        	ret	
000011EF                        _help	endp
                                	assume	cs:_TEXT,ds:DGROUP
000011EF                        _hacerTablaNula	proc	near
                                   ;	
                                   ;	void hacerTablaNula ( char * tablaDeConversion ) 
                                   ;	
000011EF  C8020000              	enter	2,0
                                   ;	
                                   ;	{
                                   ;		int i ;
                                   ;		for ( i = 0 ; i < 256 ; i++ ) 
                                   ;	
000011F3  C746FE0000            	mov	word ptr [bp-2],0
000011F8  EB0E                  	jmp	short @35@4
000011FA                        @35@2:
                                   ;	
                                   ;			tablaDeConversion[i] = (char)i ;
                                   ;	
000011FA  8B5E04                	mov	bx,word ptr [bp+4]
000011FD  035EFE                	add	bx,word ptr [bp-2]
00001200  8A46FE                	mov	al,byte ptr [bp-2]
00001203  8807                  	mov	byte ptr [bx],al
00001205  FF46FE                	inc	word ptr [bp-2]
00001208                        @35@4:
00001208  817EFE0001            	cmp	word ptr [bp-2],256
0000120D  7CEB                  	jl	short @35@2
                                   ;	
                                   ;	}
                                   ;	
0000120F  C9                    	leave	
00001210                        	ret	
00001211                        _hacerTablaNula	endp
                                	assume	cs:_TEXT,ds:DGROUP
00001211                        _establecerTablaDeConversion	proc	near
                                   ;	
                                   ;	void establecerTablaDeConversion ( void )
                                   ;	
00001211  C8040000              	enter	4,0
                                   ;	
                                   ;	{
                                   ;	    int anioBIOS ;
                                   ;	
                                   ;	    anioBIOS = 10*(ptrFechaBios[6] - '0') + (ptrFechaBios[7] - '0') ;
                                   ;	
00001215  B8FFFF                	mov	ax,-1
00001218  8EC0                  	mov	es,ax
0000121A  26A00C00              	mov	al,byte ptr es:[12]
0000121E  B400                  	mov	ah,0
00001220  BAFFFF                	mov	dx,-1
00001223  8EC2                  	mov	es,dx
00001225  268A160B00            	mov	dl,byte ptr es:[11]
0000122A  B600                  	mov	dh,0
0000122C  83C2D0                	add	dx,-48
0000122F  6BD20A                	imul	dx,dx,10
00001232  03C2                  	add	ax,dx
00001234  83C0D0                	add	ax,-48
00001237  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	
                                   ;	    switch (anioBIOS)
                                   ;	
0000123A  8B46FE                	mov	ax,word ptr [bp-2]
0000123D  8946FC                	mov	word ptr [bp-4],ax
00001240  B90800                	mov	cx,8
00001243  BB6412                	mov	bx,offset @36@C18
00001246                        @36@4:
00001246  2E8B07                	mov	ax,word ptr cs:[bx]
00001249  3B46FC                	cmp	ax,word ptr [bp-4]
0000124C  7407                  	je	short @36@7
0000124E  83C302                	add	bx,2
00001251  E2F3                  	loop	short @36@4
00001253  EB06                  	jmp	short @36@9
00001255                        @36@7:
00001255  2EFF6710              	jmp	word ptr cs:[bx+16]
00001259                        @36@8:
                                   ;	
                                   ;	    {
                                   ;	    case 99 : /* hayQemu   */   /* "06/23/99" */
                                   ;	    case 11 : /* hayBochs  */   /* "02/10/11" */            /* Bochs 2.6.7 */
                                   ;	    case 14 : /* hayBochs  */   /* "12/26/14" */            /* Bochs 2.6.8 */
                                   ;	    case 17 : /* hayBochs  */   /* "02/16/17" */            /* Bochs 2.6.9 */
                                   ;	    case 95 : /* hayNTVDM  */   /* "07/03/95" */
                                   ;	    case 12 : /* hayFake86 */   /* "05/02/12" */
                                   ;	//  case 99 : /* hayVDos   */   /* "01/01/99" */ 
                                   ;	        break ;                 
                                   ;	
00001259  EB07                  	jmp	short @36@10
0000125B                        @36@9:
                                   ;	
                                   ;	    case  6 : /* hayMsdos  */                                    /* Takeda */
                                   ;	    case 92 : /* hayDBox   */   /* "01/01/92" */
                                   ;	    default  :
                                   ;	        hacerTablaNula(tablaDeConversion) ;                          /* US */
                                   ;	
0000125B  685400                	push	offset DGROUP:_tablaSP
0000125E  E88EFF                	call	near ptr _hacerTablaNula
00001261  59                    	pop	cx
00001262                        @36@10:
                                   ;	
                                   ;	    }
                                   ;	}
                                   ;	
00001262  C9                    	leave	
00001263                        	ret	
00001264                        _establecerTablaDeConversion	endp
00001264                        @36@C18	label	word
00001264  06                    	db	6
00001265  00                    	db	0
00001266  0B                    	db	11
00001267  00                    	db	0
00001268  0C                    	db	12
00001269  00                    	db	0
0000126A  0E                    	db	14
0000126B  00                    	db	0
0000126C  11                    	db	17
0000126D  00                    	db	0
0000126E  5C                    	db	92
0000126F  00                    	db	0
00001270  5F                    	db	95
00001271  00                    	db	0
00001272  63                    	db	99
00001273  00                    	db	0
00001274  5B12                  	dw	@36@9
00001276  5912                  	dw	@36@8
00001278  5912                  	dw	@36@8
0000127A  5912                  	dw	@36@8
0000127C  5912                  	dw	@36@8
0000127E  5B12                  	dw	@36@9
00001280  5912                  	dw	@36@8
00001282  5912                  	dw	@36@8
                                	assume	cs:_TEXT,ds:DGROUP
00001284                        _integrarConsola	proc	near
                                   ;	
                                   ;	int integrarConsola ( byte_t numConsolas, bool_t conMensajes )
                                   ;	
00001284  C86A0000              	enter	106,0
                                   ;	
                                   ;	{
                                   ;	    dfs_t dfs ;
                                   ;	    descRecurso_t dR ;
                                   ;	    int dfTimer ;
                                   ;	    int res ;
                                   ;	    byte_t con ;
                                   ;	    pindx_t pindx ;
                                   ;	    char nomFich [ 12 ] ;
                                   ;	
                                   ;	//  obtenInfoINFO((info_t far *)&info) ;                     /* depuracion */
                                   ;	
                                   ;	    inicCrtHw() ;
                                   ;	
00001288  E80000                	call	near ptr _inicCrtHw
                                   ;	
                                   ;	
                                   ;	//  if (*((word_t far *)0xF000FFFB) == 0x3630)    /* anio fecha BIOS msdos */ /* Takeda */
                                   ;	    if (*((word_t far *)0xF000FFFB) == 0x3239)    /* anio fecha BIOS msdos */ /* Takeda */
                                   ;	
0000128B  B800F0                	mov	ax,-4096
0000128E  8EC0                  	mov	es,ax
00001290  26813EFBFF3932        	cmp	word ptr es:[65531],12857
00001297  7512                  	jne	short @37@3
                                   ;	
                                   ;	//      inicBiosCrt(24, 80, TRUE) ;           /* se fuerza redimensionable */
                                   ;	    {
                                   ;	        inicBiosCrt(ptrBiosArea->VIDEO_lastrow + 1, 80, TRUE) ; /* se fuerza redimensionable */
                                   ;	
00001299  6A01                  	push	1
0000129B  6A50                  	push	80
0000129D  33C0                  	xor	ax,ax
0000129F  8EC0                  	mov	es,ax
000012A1  26A08404              	mov	al,byte ptr es:[1156]
000012A5  B400                  	mov	ah,0
000012A7  40                    	inc	ax
000012A8  50                    	push	ax
000012A9  EB06                  	jmp	short @37@4
000012AB                        @37@3:
                                   ;	
                                   ;	    }
                                   ;	    else
                                   ;	        inicBiosCrt(50, 80, FALSE) ;       /* no se fuerza redimensionable */
                                   ;	
000012AB  6A00                  	push	0
000012AD  6A50                  	push	80
000012AF  6A32                  	push	50
000012B1                        @37@4:
000012B1  E80000                	call	near ptr _inicBiosCrt
000012B4  83C406                	add	sp,6
                                   ;	
                                   ;	
                                   ;	    establecerTablaDeConversion() ;                       /* teclado US/SP */
                                   ;	
000012B7  E857FF                	call	near ptr _establecerTablaDeConversion
                                   ;	
                                   ;	
                                   ;	    maxConsolas = numConsolas + 1 ;
                                   ;	
000012BA  8A4604                	mov	al,byte ptr [bp+4]
000012BD  FEC0                  	inc	al
000012BF  A25A01                	mov	byte ptr DGROUP:_maxConsolas,al
                                   ;	
                                   ;	
                                   ;	#if (FALSE)
                                   ;	    descConsola = MK_FP(
                                   ;	                      ll_buscarBloque(((maxConsolas*sizeof(descConsola_t))+15)/16),  /* GM */
                                   ;	                      0x0000
                                   ;	                  ) ;
                                   ;	#else
                                   ;		/* se supone que el proceso inicial ha reservado antes el bloque */
                                   ;		descConsola = MK_FP(_CS-(((maxConsolas*sizeof(descConsola_t))+15)/16), 0x0000) ;
                                   ;	
000012C2  A05A01                	mov	al,byte ptr DGROUP:_maxConsolas
000012C5  B400                  	mov	ah,0
000012C7  69C0BA20              	imul	ax,ax,8378
000012CB  83C00F                	add	ax,15
000012CE  C1E804                	shr	ax,4
000012D1  8CCA                  	mov	dx,cs
000012D3  2BD0                  	sub	dx,ax
000012D5  89165801              	mov	word ptr DGROUP:_descConsola+2,dx
000012D9  C70656010000          	mov	word ptr DGROUP:_descConsola,0
                                   ;	
                                   ;	#endif
                                   ;					  
                                   ;	/*
                                   ;	    printStrBIOS("\n descConsola = ") ;
                                   ;	    printPtrBIOS((pointer_t)descConsola) ;
                                   ;	    printStrBIOS("\n numFilas = ") ;
                                   ;	    printIntBIOS(maxFilasAct, 1) ;
                                   ;	    printStrBIOS(" numColumnas = ") ;
                                   ;	    printIntBIOS(numColumnas, 1) ;
                                   ;	*/
                                   ;	    for ( con = 0 ; con < maxConsolas ; con++ )
                                   ;	
000012DF  C646F900              	mov	byte ptr [bp-7],0
000012E3  E9FB00                	jmp	@37@8
000012E6                        @37@6:
                                   ;	
                                   ;	    {
                                   ;	        descConsola[con].teclado.in = 0 ;
                                   ;	
000012E6  8A46F9                	mov	al,byte ptr [bp-7]
000012E9  B400                  	mov	ah,0
000012EB  69C0BA20              	imul	ax,ax,8378
000012EF  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
000012F3  03D8                  	add	bx,ax
000012F5  26C78794200000        	mov	word ptr es:[bx+8340],0
                                   ;	
                                   ;	        descConsola[con].teclado.out = 0 ;
                                   ;	
000012FC  8A46F9                	mov	al,byte ptr [bp-7]
000012FF  B400                  	mov	ah,0
00001301  69C0BA20              	imul	ax,ax,8378
00001305  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00001309  03D8                  	add	bx,ax
0000130B  26C78796200000        	mov	word ptr es:[bx+8342],0
                                   ;	
                                   ;	        descConsola[con].teclado.ncar = 0 ;
                                   ;	
00001312  8A46F9                	mov	al,byte ptr [bp-7]
00001315  B400                  	mov	ah,0
00001317  69C0BA20              	imul	ax,ax,8378
0000131B  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000131F  03D8                  	add	bx,ax
00001321  26C78798200000        	mov	word ptr es:[bx+8344],0
                                   ;	
                                   ;	        inicPC2c(&descConsola[con].teclado.bloqueados,
                                   ;	                 &descConsola[con].teclado.e2Bloqueados, maxProcesos + 0, TRUE) ;
                                   ;	
00001328  6A01                  	push	1
0000132A  6A10                  	push	16
0000132C  8A46F9                	mov	al,byte ptr [bp-7]
0000132F  B400                  	mov	ah,0
00001331  69C0BA20              	imul	ax,ax,8378
00001335  8B165601              	mov	dx,word ptr DGROUP:_descConsola
00001339  03D0                  	add	dx,ax
0000133B  81C2421F              	add	dx,8002
0000133F  FF365801              	push	word ptr DGROUP:_descConsola+2
00001343  52                    	push	dx
00001344  8A46F9                	mov	al,byte ptr [bp-7]
00001347  B400                  	mov	ah,0
00001349  69C0BA20              	imul	ax,ax,8378
0000134D  8B165601              	mov	dx,word ptr DGROUP:_descConsola
00001351  03D0                  	add	dx,ax
00001353  81C28A1F              	add	dx,8074
00001357  FF365801              	push	word ptr DGROUP:_descConsola+2
0000135B  52                    	push	dx
0000135C  E80000                	call	near ptr _inicializarPC2c
0000135F  83C40C                	add	sp,12
                                   ;	
                                   ;	        descConsola[con].teclado.inRaw = 0 ;
                                   ;	
00001362  8A46F9                	mov	al,byte ptr [bp-7]
00001365  B400                  	mov	ah,0
00001367  69C0BA20              	imul	ax,ax,8378
0000136B  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000136F  03D8                  	add	bx,ax
00001371  26C787B4200000        	mov	word ptr es:[bx+8372],0
                                   ;	
                                   ;	        descConsola[con].teclado.outRaw = 0 ;
                                   ;	
00001378  8A46F9                	mov	al,byte ptr [bp-7]
0000137B  B400                  	mov	ah,0
0000137D  69C0BA20              	imul	ax,ax,8378
00001381  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00001385  03D8                  	add	bx,ax
00001387  26C787B6200000        	mov	word ptr es:[bx+8374],0
                                   ;	
                                   ;	        descConsola[con].teclado.nRaw = 0 ;
                                   ;	
0000138E  8A46F9                	mov	al,byte ptr [bp-7]
00001391  B400                  	mov	ah,0
00001393  69C0BA20              	imul	ax,ax,8378
00001397  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
0000139B  03D8                  	add	bx,ax
0000139D  26C787B8200000        	mov	word ptr es:[bx+8376],0
                                   ;	
                                   ;	        inicPC2c(&descConsola[con].teclado.bloqueadosRaw,
                                   ;	                 &descConsola[con].teclado.e2Bloqueados, maxProcesos + 1, TRUE) ;
                                   ;	
000013A4  6A01                  	push	1
000013A6  6A11                  	push	17
000013A8  8A46F9                	mov	al,byte ptr [bp-7]
000013AB  B400                  	mov	ah,0
000013AD  69C0BA20              	imul	ax,ax,8378
000013B1  8B165601              	mov	dx,word ptr DGROUP:_descConsola
000013B5  03D0                  	add	dx,ax
000013B7  81C2421F              	add	dx,8002
000013BB  FF365801              	push	word ptr DGROUP:_descConsola+2
000013BF  52                    	push	dx
000013C0  8A46F9                	mov	al,byte ptr [bp-7]
000013C3  B400                  	mov	ah,0
000013C5  69C0BA20              	imul	ax,ax,8378
000013C9  8B165601              	mov	dx,word ptr DGROUP:_descConsola
000013CD  03D0                  	add	dx,ax
000013CF  81C29A20              	add	dx,8346
000013D3  FF365801              	push	word ptr DGROUP:_descConsola+2
000013D7  52                    	push	dx
000013D8  E80000                	call	near ptr _inicializarPC2c
000013DB  83C40C                	add	sp,12
000013DE  FE46F9                	inc	byte ptr [bp-7]
000013E1                        @37@8:
000013E1  8A46F9                	mov	al,byte ptr [bp-7]
000013E4  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
000013E8  7303                  	jae	@@13
000013EA  E9F9FE                	jmp	@37@6
000013ED                        @@13:
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    consolaDeSuperficie = 0 ;
                                   ;	
000013ED  C7065C010000          	mov	word ptr DGROUP:_consolaDeSuperficie,0
                                   ;	
                                   ;	
                                   ;	    for ( con = 0 ; con < maxConsolas ; con++ )
                                   ;	
000013F3  C646F900              	mov	byte ptr [bp-7],0
000013F7  EB49                  	jmp	short @37@12
000013F9                        @37@10:
                                   ;	
                                   ;	    {
                                   ;	        borrarPantalla((pantalla_t far *)&descConsola[con].pantalla, maxFilas) ;
                                   ;	
000013F9  6A32                  	push	50
000013FB  8A46F9                	mov	al,byte ptr [bp-7]
000013FE  B400                  	mov	ah,0
00001400  69C0BA20              	imul	ax,ax,8378
00001404  8B165601              	mov	dx,word ptr DGROUP:_descConsola
00001408  03D0                  	add	dx,ax
0000140A  FF365801              	push	word ptr DGROUP:_descConsola+2
0000140E  52                    	push	dx
0000140F  E80000                	call	near ptr _borrarPantalla
00001412  83C406                	add	sp,6
                                   ;	
                                   ;	        descConsola[con].F = 0 ;
                                   ;	
00001415  8A46F9                	mov	al,byte ptr [bp-7]
00001418  B400                  	mov	ah,0
0000141A  69C0BA20              	imul	ax,ax,8378
0000141E  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00001422  03D8                  	add	bx,ax
00001424  26C687401F00          	mov	byte ptr es:[bx+8000],0
                                   ;	
                                   ;	        descConsola[con].C = 0 ;
                                   ;	
0000142A  8A46F9                	mov	al,byte ptr [bp-7]
0000142D  B400                  	mov	ah,0
0000142F  69C0BA20              	imul	ax,ax,8378
00001433  C41E5601              	les	bx,dword ptr DGROUP:_descConsola
00001437  03D8                  	add	bx,ax
00001439  26C687411F00          	mov	byte ptr es:[bx+8001],0
0000143F  FE46F9                	inc	byte ptr [bp-7]
00001442                        @37@12:
00001442  8A46F9                	mov	al,byte ptr [bp-7]
00001445  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
00001449  72AE                  	jb	short @37@10
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    for ( pindx = 0 ; pindx < maxProcesos ; pindx++ )
                                   ;	
0000144B  C746F60000            	mov	word ptr [bp-10],0
00001450  EB20                  	jmp	short @37@16
00001452                        @37@14:
                                   ;	
                                   ;	    {
                                   ;	        nbytesProceso[pindx] = 0 ;                /* nbytes esperando leer */
                                   ;	
00001452  8B5EF6                	mov	bx,word ptr [bp-10]
00001455  03DB                  	add	bx,bx
00001457  C7875E010000          	mov	word ptr DGROUP:_nbytesProceso[bx],0
                                   ;	
                                   ;	        dirProceso[pindx] = NULL ;
                                   ;	
0000145D  8B5EF6                	mov	bx,word ptr [bp-10]
00001460  C1E302                	shl	bx,2
00001463  C78780010000          	mov	word ptr DGROUP:_dirProceso[bx+2],0
00001469  C7877E010000          	mov	word ptr DGROUP:_dirProceso[bx],0
0000146F  FF46F6                	inc	word ptr [bp-10]
00001472                        @37@16:
00001472  837EF610              	cmp	word ptr [bp-10],16
00001476  7CDA                  	jl	short @37@14
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    dR.tipo = rDCaracteres ;
                                   ;	
00001478  C746AE0100            	mov	word ptr [bp-82],1
                                   ;	
                                   ;	    strcpy(dR.nombre, "CONSOLA") ;
                                   ;	
0000147D  1E                    	push	ds
0000147E  682E04                	push	offset DGROUP:s@+601
00001481  16                    	push	ss
00001482  8D46A2                	lea	ax,word ptr [bp-94]
00001485  50                    	push	ax
00001486  E80000                	call	near ptr _strcpy
00001489  83C408                	add	sp,8
                                   ;	
                                   ;	    dR.ccb = (ccb_t)&descCcbConsola ;
                                   ;	
0000148C  8C5EB2                	mov	word ptr [bp-78],ds
0000148F  C746B0C901            	mov	word ptr [bp-80],offset DGROUP:_descCcbConsola
                                   ;	
                                   ;	    dR.ccb->arg = NULL ;
                                   ;	
00001494  C45EB0                	les	bx,dword ptr [bp-80]
00001497  26C7470A0000          	mov	word ptr es:[bx+10],0
0000149D  26C747080000          	mov	word ptr es:[bx+8],0
                                   ;	
                                   ;	    dR.pindx = getpindx() ;
                                   ;	
000014A3  E80000                	call	near ptr _getpindx
000014A6  8946B4                	mov	word ptr [bp-76],ax
                                   ;	
                                   ;	    dR.numVI = 1 ;
                                   ;	
000014A9  C646C001              	mov	byte ptr [bp-64],1
                                   ;	
                                   ;	    dR.nVInt[0] = nVIntConsola ;
                                   ;	
000014AD  C646C109              	mov	byte ptr [bp-63],9
                                   ;	
                                   ;	    dR.irq[0] = IRQ_TECLADO ;
                                   ;	
000014B1  C646C301              	mov	byte ptr [bp-61],1
                                   ;	
                                   ;	    dR.isr[0] = MK_FP(_CS, FP_OFF(isr_consola)) ;
                                   ;	
000014B5  8CC8                  	mov	ax,cs
000014B7  33D2                  	xor	dx,dx
000014B9  81CA230A              	or	dx,offset _isr_consola
000014BD  8946C7                	mov	word ptr [bp-57],ax
000014C0  8956C5                	mov	word ptr [bp-59],dx
                                   ;	
                                   ;	
                                   ;	    dR.open      = (open_t)     MK_FP(_CS, FP_OFF(openConsola)) ;
                                   ;	
000014C3  8CC8                  	mov	ax,cs
000014C5  33D2                  	xor	dx,dx
000014C7  81CA3004              	or	dx,offset _openConsola
000014CB  8946CF                	mov	word ptr [bp-49],ax
000014CE  8956CD                	mov	word ptr [bp-51],dx
                                   ;	
                                   ;	    dR.release   = (release_t)  MK_FP(_CS, FP_OFF(releaseConsola)) ;
                                   ;	
000014D1  8CC8                  	mov	ax,cs
000014D3  33D2                  	xor	dx,dx
000014D5  81CA3304              	or	dx,offset _releaseConsola
000014D9  8946D3                	mov	word ptr [bp-45],ax
000014DC  8956D1                	mov	word ptr [bp-47],dx
                                   ;	
                                   ;	    dR.read      = (read_t)     MK_FP(_CS, FP_OFF(readConsola)) ;
                                   ;	
000014DF  8CC8                  	mov	ax,cs
000014E1  33D2                  	xor	dx,dx
000014E3  81CA3604              	or	dx,offset _readConsola
000014E7  8946D7                	mov	word ptr [bp-41],ax
000014EA  8956D5                	mov	word ptr [bp-43],dx
                                   ;	
                                   ;	    dR.aio_read  = (aio_read_t) MK_FP(_CS, FP_OFF(aio_readConsola)) ;
                                   ;	
000014ED  8CC8                  	mov	ax,cs
000014EF  33D2                  	xor	dx,dx
000014F1  81CA9505              	or	dx,offset _aio_readConsola
000014F5  8946DB                	mov	word ptr [bp-37],ax
000014F8  8956D9                	mov	word ptr [bp-39],dx
                                   ;	
                                   ;	    dR.write     = (write_t)    MK_FP(_CS, FP_OFF(writeConsola)) ;
                                   ;	
000014FB  8CC8                  	mov	ax,cs
000014FD  33D2                  	xor	dx,dx
000014FF  81CA7206              	or	dx,offset _writeConsola
00001503  8946DF                	mov	word ptr [bp-33],ax
00001506  8956DD                	mov	word ptr [bp-35],dx
                                   ;	
                                   ;	    dR.aio_write = (aio_write_t)MK_FP(_CS, FP_OFF(aio_writeConsola)) ;
                                   ;	
00001509  8CC8                  	mov	ax,cs
0000150B  33D2                  	xor	dx,dx
0000150D  81CAE406              	or	dx,offset _aio_writeConsola
00001511  8946E3                	mov	word ptr [bp-29],ax
00001514  8956E1                	mov	word ptr [bp-31],dx
                                   ;	
                                   ;	    dR.lseek     = (lseek_t)    MK_FP(_CS, FP_OFF(lseekConsola)) ;
                                   ;	
00001517  8CC8                  	mov	ax,cs
00001519  33D2                  	xor	dx,dx
0000151B  81CAFC06              	or	dx,offset _lseekConsola
0000151F  8946E7                	mov	word ptr [bp-25],ax
00001522  8956E5                	mov	word ptr [bp-27],dx
                                   ;	
                                   ;	    dR.fcntl     = (fcntl_t)    MK_FP(_CS, FP_OFF(fcntlConsola)) ;
                                   ;	
00001525  8CC8                  	mov	ax,cs
00001527  33D2                  	xor	dx,dx
00001529  81CAAC07              	or	dx,offset _fcntlConsola
0000152D  8946EB                	mov	word ptr [bp-21],ax
00001530  8956E9                	mov	word ptr [bp-23],dx
                                   ;	
                                   ;	    dR.ioctl     = (ioctl_t)    MK_FP(_CS, FP_OFF(ioctlConsola)) ;
                                   ;	
00001533  8CC8                  	mov	ax,cs
00001535  33D2                  	xor	dx,dx
00001537  81CAAF07              	or	dx,offset _ioctlConsola
0000153B  8946EF                	mov	word ptr [bp-17],ax
0000153E  8956ED                	mov	word ptr [bp-19],dx
                                   ;	
                                   ;	
                                   ;	    dR.eliminar  = (eliminar_t) MK_FP(_CS, FP_OFF(eliminarConsola)) ;
                                   ;	
00001541  8CC8                  	mov	ax,cs
00001543  33D2                  	xor	dx,dx
00001545  81CAB609              	or	dx,offset _eliminarConsola
00001549  8946F3                	mov	word ptr [bp-13],ax
0000154C  8956F1                	mov	word ptr [bp-15],dx
                                   ;	
                                   ;	
                                   ;	    rec_consola = crearRecurso(&dR) ;
                                   ;	
0000154F  16                    	push	ss
00001550  8D46A2                	lea	ax,word ptr [bp-94]
00001553  50                    	push	ax
00001554  E80000                	call	near ptr _crearRecurso
00001557  83C404                	add	sp,4
0000155A  A35401                	mov	word ptr DGROUP:_rec_consola,ax
                                   ;	
                                   ;	
                                   ;	    if (rec_consola >= 0)
                                   ;	
0000155D  833E540100            	cmp	word ptr DGROUP:_rec_consola,0
00001562  7D03                  	jge	@@14
00001564  E90501                	jmp	@37@41
00001567                        @@14:
                                   ;	
                                   ;	    {
                                   ;	        strcpy(nomFich, "CON ") ;
                                   ;	
00001567  1E                    	push	ds
00001568  683604                	push	offset DGROUP:s@+609
0000156B  16                    	push	ss
0000156C  8D4696                	lea	ax,word ptr [bp-106]
0000156F  50                    	push	ax
00001570  E80000                	call	near ptr _strcpy
00001573  83C408                	add	sp,8
                                   ;	
                                   ;	        for ( con = 0 ; con < maxConsolas ; con++ )
                                   ;	
00001576  C646F900              	mov	byte ptr [bp-7],0
0000157A  EB7D                  	jmp	@37@32
0000157C                        @37@19:
                                   ;	
                                   ;	        {
                                   ;	            nomFich[3] = '0' + con ;
                                   ;	
0000157C  8A46F9                	mov	al,byte ptr [bp-7]
0000157F  0430                  	add	al,48
00001581  884699                	mov	byte ptr [bp-103],al
                                   ;	
                                   ;	            dfs = crearFichero(nomFich, rec_consola, con, fedCaracteres) ;
                                   ;	
00001584  6A03                  	push	3
00001586  8A46F9                	mov	al,byte ptr [bp-7]
00001589  B400                  	mov	ah,0
0000158B  50                    	push	ax
0000158C  FF365401              	push	word ptr DGROUP:_rec_consola
00001590  16                    	push	ss
00001591  8D4696                	lea	ax,word ptr [bp-106]
00001594  50                    	push	ax
00001595  E80000                	call	near ptr _crearFichero
00001598  83C40A                	add	sp,10
0000159B  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	            if (dfs < 0)
                                   ;	
0000159E  837EFE00              	cmp	word ptr [bp-2],0
000015A2  7D52                  	jge	short @37@31
                                   ;	
                                   ;	            {
                                   ;	                switch(dfs)
                                   ;	
000015A4  8B5EFE                	mov	bx,word ptr [bp-2]
000015A7  83EBFC                	sub	bx,-4
000015AA  83FB03                	cmp	bx,3
000015AD  772B                  	ja	short @37@28
000015AF  03DB                  	add	bx,bx
000015B1  2EFFA7CA16            	jmp	word ptr cs:@37@C148[bx]
000015B6                        @37@23:
                                   ;	
                                   ;	                {
                                   ;	                case -1 : printf(" tipo de fichero erroneo") ; break ;
                                   ;	
000015B6  1E                    	push	ds
000015B7  683B04                	push	offset DGROUP:s@+614
000015BA  EB16                  	jmp	short @37@27
000015BC                        @37@24:
                                   ;	
                                   ;	                case -2 : printf(" numero de recurso erroneo") ; break ;
                                   ;	
000015BC  1E                    	push	ds
000015BD  685404                	push	offset DGROUP:s@+639
000015C0  EB10                  	jmp	short @37@27
000015C2                        @37@25:
                                   ;	
                                   ;	                case -3 : printf(" CON%i nombre de fichero ya existente", con) ; break ;
                                   ;	
000015C2  8A46F9                	mov	al,byte ptr [bp-7]
000015C5  B400                  	mov	ah,0
000015C7  50                    	push	ax
000015C8  1E                    	push	ds
000015C9  686F04                	push	offset DGROUP:s@+666
000015CC  EB16                  	jmp	short @37@29
000015CE                        @37@26:
                                   ;	
                                   ;	                case -4 : printf(" no hay descriptores de fichero libres") ; break ;
                                   ;	
000015CE  1E                    	push	ds
000015CF  689504                	push	offset DGROUP:s@+704
000015D2                        @37@27:
000015D2  E80000                	call	near ptr _printf
000015D5  83C404                	add	sp,4
000015D8  EB10                  	jmp	short @37@30
000015DA                        @37@28:
                                   ;	
                                   ;	                default : printf(" no ha podido crearse el fichero CON%i", con) ;
                                   ;	
000015DA  8A46F9                	mov	al,byte ptr [bp-7]
000015DD  B400                  	mov	ah,0
000015DF  50                    	push	ax
000015E0  1E                    	push	ds
000015E1  68BC04                	push	offset DGROUP:s@+743
000015E4                        @37@29:
000015E4  E80000                	call	near ptr _printf
000015E7  83C406                	add	sp,6
000015EA                        @37@30:
                                   ;	
                                   ;	                }
                                   ;	                destruirRecurso("CONSOLA", TRUE) ;              /* matando */
                                   ;	
000015EA  6A01                  	push	1
000015EC  1E                    	push	ds
000015ED  68E304                	push	offset DGROUP:s@+782
000015F0  E80000                	call	near ptr _destruirRecurso
000015F3  83C406                	add	sp,6
000015F6                        @37@31:
000015F6  FE46F9                	inc	byte ptr [bp-7]
000015F9                        @37@32:
000015F9  8A46F9                	mov	al,byte ptr [bp-7]
000015FC  3A065A01              	cmp	al,byte ptr DGROUP:_maxConsolas
00001600  7303                  	jae	@@15
00001602  E977FF                	jmp	@37@19
00001605                        @@15:
                                   ;	
                                   ;	            }
                                   ;	        }
                                   ;	
                                   ;	        if ((dfTimer = open("TIMER", O_RDONLY)) >= 0)
                                   ;	
00001605  6A01                  	push	1
00001607  1E                    	push	ds
00001608  68EB04                	push	offset DGROUP:s@+790
0000160B  E80000                	call	near ptr _open
0000160E  83C406                	add	sp,6
00001611  8946FC                	mov	word ptr [bp-4],ax
00001614  0BC0                  	or	ax,ax
00001616  7C36                  	jl	short @37@37
                                   ;	
                                   ;	        {
                                   ;	            close(dfTimer) ;
                                   ;	
00001618  FF76FC                	push	word ptr [bp-4]
0000161B  E80000                	call	near ptr _close
0000161E  59                    	pop	cx
                                   ;	
                                   ;	            res = encolarCcbRecurso(
                                   ;	
                                   ;	
                                   ;	                      (callBack_t)MK_FP(_CS, (word_t)cbForTimer),
                                   ;	                      (char far *)MK_FP(_DS, (word_t)&"TIMER")
                                   ;	                  ) ;
                                   ;	
0000161F  8CD8                  	mov	ax,ds
00001621  33D2                  	xor	dx,dx
00001623  81CAF104              	or	dx,offset DGROUP:s@+796
00001627  50                    	push	ax
00001628  52                    	push	dx
00001629  8CC8                  	mov	ax,cs
0000162B  33D2                  	xor	dx,dx
0000162D  81CAB510              	or	dx,offset _cbForTimer
00001631  50                    	push	ax
00001632  52                    	push	dx
00001633  E80000                	call	near ptr _encolarCcbRecurso
00001636  83C408                	add	sp,8
00001639  8946FA                	mov	word ptr [bp-6],ax
                                   ;	
                                   ;	            if (res != 0)
                                   ;	
0000163C  837EFA00              	cmp	word ptr [bp-6],0
00001640  740A                  	je	short @37@36
                                   ;	
                                   ;	                printf("\n\n no ha podido encolarse el callback en el TIMER \n") ;
                                   ;	
00001642  1E                    	push	ds
00001643  68F704                	push	offset DGROUP:s@+802
00001646  E80000                	call	near ptr _printf
00001649  83C404                	add	sp,4
0000164C                        @37@36:
                                   ;	
                                   ;	        }
                                   ;	
0000164C  EB0A                  	jmp	short @37@38
0000164E                        @37@37:
                                   ;	
                                   ;	        else
                                   ;	            printf("\n\n no ha podido encolarse el callback en el TIMER \n") ;
                                   ;	
0000164E  1E                    	push	ds
0000164F  682B05                	push	offset DGROUP:s@+854
00001652  E80000                	call	near ptr _printf
00001655  83C404                	add	sp,4
00001658                        @37@38:
                                   ;	
                                   ;	
                                   ;	        if (conMensajes)
                                   ;	
00001658  837E0600              	cmp	word ptr [bp+6],0
0000165C  740A                  	je	short @37@40
                                   ;	
                                   ;	            printf("\n\n recurso CONSOLA instalado (ficheros: CON0 ...) \n") ;
                                   ;	
0000165E  1E                    	push	ds
0000165F  685F05                	push	offset DGROUP:s@+906
00001662  E80000                	call	near ptr _printf
00001665  83C404                	add	sp,4
00001668                        @37@40:
                                   ;	
                                   ;	        return(0) ;
                                   ;	
00001668  33C0                  	xor	ax,ax
0000166A  C9                    	leave	
0000166B                        	ret	
0000166C                        @37@41:
                                   ;	
                                   ;	    }
                                   ;	
                                   ;	    printf("\n\n") ;
                                   ;	
0000166C  1E                    	push	ds
0000166D  689305                	push	offset DGROUP:s@+958
00001670  E80000                	call	near ptr _printf
00001673  83C404                	add	sp,4
                                   ;	
                                   ;	    switch(rec_consola)
                                   ;	
00001676  8B1E5401              	mov	bx,word ptr DGROUP:_rec_consola
0000167A  83EBFB                	sub	bx,-5
0000167D  83FB04                	cmp	bx,4
00001680  7725                  	ja	short @37@50
00001682  03DB                  	add	bx,bx
00001684  2EFFA7C016            	jmp	word ptr cs:@37@C153[bx]
00001689                        @37@45:
                                   ;	
                                   ;	    {
                                   ;	    case -1 : printf(" tipo de recurso erroneo ") ; break ;
                                   ;	
00001689  1E                    	push	ds
0000168A  689605                	push	offset DGROUP:s@+961
0000168D  EB1C                  	jmp	short @37@51
0000168F                        @37@46:
                                   ;	
                                   ;	    case -2 : printf(" demasiados vectores de interrupcion ") ; break ;
                                   ;	
0000168F  1E                    	push	ds
00001690  68B005                	push	offset DGROUP:s@+987
00001693  EB16                  	jmp	short @37@51
00001695                        @37@47:
                                   ;	
                                   ;	    case -3 : printf(" CONSOLA nombre de recurso ya existente ") ; break ;
                                   ;	
00001695  1E                    	push	ds
00001696  68D605                	push	offset DGROUP:s@+1025
00001699  EB10                  	jmp	short @37@51
0000169B                        @37@48:
                                   ;	
                                   ;	    case -4 : printf(" no hay descriptores de recurso libres ") ; break ;
                                   ;	
0000169B  1E                    	push	ds
0000169C  68FF05                	push	offset DGROUP:s@+1066
0000169F  EB0A                  	jmp	short @37@51
000016A1                        @37@49:
                                   ;	
                                   ;	    case -5 : printf(" numero de vector de interrupcion ya usado ") ; break ;
                                   ;	
000016A1  1E                    	push	ds
000016A2  682706                	push	offset DGROUP:s@+1106
000016A5  EB04                  	jmp	short @37@51
000016A7                        @37@50:
                                   ;	
                                   ;	    default : printf(" no ha podido crearse el recurso CONSOLA ") ;
                                   ;	
000016A7  1E                    	push	ds
000016A8  685306                	push	offset DGROUP:s@+1150
000016AB                        @37@51:
000016AB  E80000                	call	near ptr _printf
000016AE  83C404                	add	sp,4
                                   ;	
                                   ;	    }
                                   ;	    printf("\n") ;
                                   ;	
000016B1  1E                    	push	ds
000016B2  687D06                	push	offset DGROUP:s@+1192
000016B5  E80000                	call	near ptr _printf
000016B8  83C404                	add	sp,4
                                   ;	
                                   ;	    return(-1) ;
                                   ;	
000016BB  B8FFFF                	mov	ax,-1
                                   ;	
                                   ;	}
                                   ;	
000016BE  C9                    	leave	
000016BF                        	ret	
000016C0                        _integrarConsola	endp
000016C0                        @37@C153	label	word
000016C0  A116                  	dw	@37@49
000016C2  9B16                  	dw	@37@48
000016C4  9516                  	dw	@37@47
000016C6  8F16                  	dw	@37@46
000016C8  8916                  	dw	@37@45
000016CA                        @37@C148	label	word
000016CA  CE15                  	dw	@37@26
000016CC  C215                  	dw	@37@25
000016CE  BC15                  	dw	@37@24
000016D0  B615                  	dw	@37@23
                                	assume	cs:_TEXT,ds:DGROUP
000016D2                        _desintegrarConsola	proc	near
                                   ;	
                                   ;	int desintegrarConsola ( void )
                                   ;	
000016D2  C8020000              	enter	2,0
                                   ;	
                                   ;	{
                                   ;	    int res ;
                                   ;	    res = eliminarCcbRecurso(
                                   ;	
                                   ;	
                                   ;	              (callBack_t)MK_FP(_CS, (word_t)cbForTimer),
                                   ;	              (char far *)MK_FP(_DS, (word_t)&"TIMER")
                                   ;	          ) ;
                                   ;	
000016D6  8CD8                  	mov	ax,ds
000016D8  33D2                  	xor	dx,dx
000016DA  81CA7F06              	or	dx,offset DGROUP:s@+1194
000016DE  50                    	push	ax
000016DF  52                    	push	dx
000016E0  8CC8                  	mov	ax,cs
000016E2  33D2                  	xor	dx,dx
000016E4  81CAB510              	or	dx,offset _cbForTimer
000016E8  50                    	push	ax
000016E9  52                    	push	dx
000016EA  E80000                	call	near ptr _eliminarCcbRecurso
000016ED  83C408                	add	sp,8
000016F0  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    if (res != 0)
                                   ;	
000016F3  837EFE00              	cmp	word ptr [bp-2],0
000016F7  740C                  	je	short @38@3
                                   ;	
                                   ;	        printf(" no pudo eliminarse el callback del TIMER ") ;
                                   ;	
000016F9  1E                    	push	ds
000016FA  688506                	push	offset DGROUP:s@+1200
000016FD  E80000                	call	near ptr _printf
00001700  83C404                	add	sp,4
00001703  EB23                  	jmp	short @38@5
00001705                        @38@3:
                                   ;	
                                   ;	    else if (ll_devolverBloque(                                      /* GM */
                                   ;	
                                   ;	
                                   ;	                FP_SEG(descConsola),
                                   ;	                ((maxConsolas*sizeof(descConsola_t))+15)/16)
                                   ;	            )
                                   ;	
00001705  A05A01                	mov	al,byte ptr DGROUP:_maxConsolas
00001708  B400                  	mov	ah,0
0000170A  69C0BA20              	imul	ax,ax,8378
0000170E  83C00F                	add	ax,15
00001711  C1E804                	shr	ax,4
00001714  50                    	push	ax
00001715  FF365801              	push	word ptr DGROUP:_descConsola+2
00001719  E80000                	call	near ptr _ll_devolverBloque
0000171C  83C404                	add	sp,4
0000171F  0BC0                  	or	ax,ax
00001721  7405                  	je	short @38@5
                                   ;	
                                   ;	        return(-1) ;
                                   ;	
00001723  B8FFFF                	mov	ax,-1
00001726  C9                    	leave	
00001727                        	ret	
00001728                        @38@5:
                                   ;	
                                   ;	/*  finBiosCrt() ; */
                                   ;	    return(res) ;
                                   ;	
00001728  8B46FE                	mov	ax,word ptr [bp-2]
                                   ;	
                                   ;	}
                                   ;	
0000172B  C9                    	leave	
0000172C                        	ret	
0000172D                        _desintegrarConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
0000172D                        _instalarConsola	proc	near
                                   ;	
                                   ;	int instalarConsola ( byte_t numConsolas, bool_t conMensajes )
                                   ;	
0000172D  C8020000              	enter	2,0
                                   ;	
                                   ;	{
                                   ;	    int res ;
                                   ;	    res = comprobarAmpersand() ;
                                   ;	
00001731  E80000                	call	near ptr _comprobarAmpersand
00001734  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    if (res != 0) return(res) ;
                                   ;	
00001737  837EFE00              	cmp	word ptr [bp-2],0
0000173B  7402                  	je	short @39@3
0000173D  EB3D                  	jmp	short @39@6
0000173F                        @39@3:
                                   ;	
                                   ;	    obtenInfoSO1(dirDescSO1) ;               /* obtenemos los datos de SO1 */
                                   ;	
0000173F  1E                    	push	ds
00001740  680000                	push	offset DGROUP:_ptrIndProcesoActual
00001743  E80000                	call	near ptr _obtenInfoSO1
00001746  83C404                	add	sp,4
                                   ;	
                                   ;	    res = integrarConsola(numConsolas, conMensajes) ;
                                   ;	
00001749  FF7606                	push	word ptr [bp+6]
0000174C  8A4604                	mov	al,byte ptr [bp+4]
0000174F  50                    	push	ax
00001750  E831FB                	call	near ptr _integrarConsola
00001753  83C404                	add	sp,4
00001756  8946FE                	mov	word ptr [bp-2],ax
                                   ;	
                                   ;	    if (res != 0) return(res) ;
                                   ;	
00001759  837EFE00              	cmp	word ptr [bp-2],0
0000175D  7402                  	je	short @39@5
0000175F  EB1B                  	jmp	short @39@6
00001761                        @39@5:
                                   ;	
                                   ;	#if (!REDUCIR_DRIVER)
                                   ;	    esperarDesinstalacion(0) ;                       /* bloquea el proceso */
                                   ;	#else
                                   ;	    esperarDesinstalacion(                           /* bloquea el proceso */
                                   ;	
                                   ;	
                                   ;	//      FP_OFF(dirDescSO1) + sizeof(descSO1_t)
                                   ;	//          ...
                                   ;	//          + sizeof(descCcbConsola) + 0*sizeof(callBack_t),    /* tamDATA */
                                   ;	        FP_OFF(&descCcbConsola)
                                   ;	            + sizeof(descCcbConsola) + 0*sizeof(callBack_t),    /* tamDATA */
                                   ;	        FP_OFF(finCodeDriver),                            /* finCodeDriver */
                                   ;	        FP_OFF(finishConsola),                             /* finishDriver */
                                   ;			0x0000                                                  /* tamPila */ 
                                   ;	    ) ;
                                   ;	
00001761  6A00                  	push	0
00001763  68AB11                	push	offset _finishConsola
00001766  68AE11                	push	offset _finCodeDriver
00001769  B8C901                	mov	ax,offset DGROUP:_descCcbConsola
0000176C  83C00C                	add	ax,12
0000176F  50                    	push	ax
00001770  E80000                	call	near ptr _esperarDesinstalacion
00001773  83C408                	add	sp,8
                                   ;	
                                   ;	/*  se retorna a finishConsola */		
                                   ;	#endif
                                   ;	/*  solo se llega aqui en el caso esperarDesinstalacion(0) */
                                   ;	    res = desintegrarConsola() ;
                                   ;	
00001776  E859FF                	call	near ptr _desintegrarConsola
00001779  8946FE                	mov	word ptr [bp-2],ax
0000177C                        @39@6:
                                   ;	
                                   ;	    return(res) ;
                                   ;	
0000177C  8B46FE                	mov	ax,word ptr [bp-2]
                                   ;	
                                   ;	}
                                   ;	
0000177F  C9                    	leave	
00001780                        	ret	
00001781                        _instalarConsola	endp
                                	assume	cs:_TEXT,ds:DGROUP
00001781                        _main	proc	near
                                   ;	
                                   ;	int main ( int argc, char * argv [ ] )
                                   ;	
00001781  C8060000              	enter	6,0
                                   ;	
                                   ;	{
                                   ;		
                                   ;		pantalla_t far * p = MK_FP(0xB800,0x0000) ;        
                                   ;	
00001785  C746FE00B8            	mov	word ptr [bp-2],-18432
0000178A  C746FC0000            	mov	word ptr [bp-4],0
                                   ;	
                                   ;		byte_t F = 0 ;
                                   ;	
0000178F  C646FB00              	mov	byte ptr [bp-5],0
                                   ;	
                                   ;		byte_t C = 0 ;
                                   ;	
00001793  C646FA00              	mov	byte ptr [bp-6],0
00001797  EB30                  	jmp	short @40@5
00001799                        @40@2:
                                   ;	
                                   ;		
                                   ;		while ((car = getchar()) != 'F') {
                                   ;			if (car == '\n') {
                                   ;	
00001799  803E00000A            	cmp	byte ptr DGROUP:_car,10
0000179E  7509                  	jne	short @40@4
                                   ;	
                                   ;			    F++ ;
                                   ;	
000017A0  FE46FB                	inc	byte ptr [bp-5]
                                   ;	
                                   ;				C = 0 ;
                                   ;	
000017A3  C646FA00              	mov	byte ptr [bp-6],0
                                   ;	
                                   ;			}
                                   ;	
000017A7  EB20                  	jmp	short @40@5
000017A9                        @40@4:
                                   ;	
                                   ;			else {
                                   ;		        p->t[F][C].car = car ;
                                   ;	
000017A9  8A46FB                	mov	al,byte ptr [bp-5]
000017AC  B400                  	mov	ah,0
000017AE  69C0A000              	imul	ax,ax,160
000017B2  C45EFC                	les	bx,dword ptr [bp-4]
000017B5  03D8                  	add	bx,ax
000017B7  8A46FA                	mov	al,byte ptr [bp-6]
000017BA  B400                  	mov	ah,0
000017BC  03C0                  	add	ax,ax
000017BE  03D8                  	add	bx,ax
000017C0  A00000                	mov	al,byte ptr DGROUP:_car
000017C3  268807                	mov	byte ptr es:[bx],al
                                   ;	
                                   ;		     	C++ ;
                                   ;	
000017C6  FE46FA                	inc	byte ptr [bp-6]
000017C9                        @40@5:
000017C9  E80000                	call	near ptr _getchar
000017CC  A20000                	mov	byte ptr DGROUP:_car,al
000017CF  3C46                  	cmp	al,70
000017D1  75C6                  	jne	short @40@2
                                   ;	
                                   ;			}
                                   ;		}
                                   ;			
                                   ;	//	printf("\n\n Hola Takeda \n") ;
                                   ;		return(0) ;
                                   ;	
000017D3  33C0                  	xor	ax,ax
                                   ;	
                                   ;		
                                   ;	#if (FALSE)	
                                   ;	    int res ;
                                   ;	    int dfCon ;
                                   ;	    if (argc > 3) return(formato()) ;
                                   ;	    else if (argc == 1) return(instalarConsola(numConsolasPorDefecto, TRUE)) ;
                                   ;	    else if (argc == 2)
                                   ;	    {
                                   ;	        if (argv[1][0] != '-') return(formato()) ;
                                   ;	        switch (toupper(argv[1][1]))
                                   ;	        {
                                   ;	        case 'H' :
                                   ;	            return(help()) ;
                                   ;	        case 'I' :
                                   ;	            return(instalarConsola(numConsolasPorDefecto, TRUE)) ;
                                   ;	        case 'Q' :
                                   ;	            return(instalarConsola(numConsolasPorDefecto, FALSE)) ;
                                   ;	        case 'N' :
                                   ;	            if ((dfCon = open("CON0", O_RDONLY)) < 0)
                                   ;	            {
                                   ;	                printf(" no puede abrirse CON0") ;
                                   ;	                return(-1) ;
                                   ;	            }
                                   ;	            else
                                   ;	            {
                                   ;	                res = ioctl(dfCon, 0x0002, 0x0000) ;
                                   ;	                if (res < 0) printf(" error al consultar la consola actual ") ;
                                   ;	                else
                                   ;	                {
                                   ;	                    if (toupper(argv[1][2]) != 'Q') /* (-nq no muestra mensaje) */
                                   ;	                        printf(" la consola actual es CON%i", res) ;
                                   ;	                }
                                   ;	                return(res) ;
                                   ;	            }
                                   ;	        case 'U' :
                                   ;	        case 'K' :
                                   ;	            res = destruirRecurso("CONSOLA", tolower(argv[1][1]) == 'k') ; 
                                   ;	            switch (res)
                                   ;	            {
                                   ;	            case  0 : printf(" recurso CONSOLA desinstalado") ; break ;
                                   ;	            case -1 : printf(" recurso CONSOLA no existe") ; break ;
                                   ;	            case -2 : printf(" recurso CONSOLA en uso") ; break ;
                                   ;	            case -3 : printf(" fichero CONSOLA no puede destruirse") ; break ;
                                   ;	            default : printf(" CONSOLA no ha podido desinstalarse") ;
                                   ;	            }
                                   ;	            return(res) ;
                                   ;	        default :
                                   ;	            ;
                                   ;	        }
                                   ;	    }
                                   ;	    if ((argc == 2) ||
                                   ;	        ((argc == 3) &&
                                   ;	         (!strcmpu(argv[1], "-i") || !strcmpu(argv[1], "-q"))
                                   ;	        )
                                   ;	       )
                                   ;	    {
                                   ;	        strcpy(comando[0], argv[argc-1]) ;
                                   ;	        inicScanner() ;
                                   ;	        obtenSimb() ;
                                   ;	        if (simb == s_numero)
                                   ;	        {
                                   ;	            if (num == 0)
                                   ;	            {
                                   ;	                printf("\n\n el numero de consolas debe ser > 0 \n") ;
                                   ;	                return(-1) ;
                                   ;	            }
                                   ;	            else return(instalarConsola(num, (toupper(argv[1][1]) == 'Q'))) ;
                                   ;	        }
                                   ;	    }
                                   ;	    else if (argc == 3)
                                   ;	        if (!strcmpu(argv[1], "-c"))
                                   ;	        {
                                   ;	            strcpy(comando[0], argv[argc-1]) ;
                                   ;	            inicScanner() ;
                                   ;	            obtenSimb() ;
                                   ;	            if (simb == s_numero)
                                   ;	            {
                                   ;	                if ((dfCon = open("CON0", O_RDONLY)) < 0)
                                   ;	                {
                                   ;	                    printf(" no puede abrirse CON0") ;
                                   ;	                    return(-1) ;
                                   ;	                }
                                   ;	                if (ioctl(dfCon, 0x0001, num) != 0)
                                   ;	                {
                                   ;	                    printf(" numero de consola erroneo (%i)", num) ;
                                   ;	                    return(-1) ;
                                   ;	                }
                                   ;	                return(0) ;
                                   ;	            }
                                   ;	        }
                                   ;	        else if (!strcmpu(argv[1], "-l"))
                                   ;	        {
                                   ;	            strcpy(comando[0], argv[argc-1]) ;
                                   ;	            inicScanner() ;
                                   ;	            obtenSimb() ;
                                   ;	            if (simb == s_numero)
                                   ;	            {
                                   ;	                if ((num != 25) && (num != 28) && (num != 50)) {
                                   ;	                    printf(" el numero de lineas debe ser 25, 28 o 50") ;
                                   ;	                    return(-1) ;
                                   ;	                }
                                   ;	                if ((dfCon = open("CON0", O_RDONLY)) < 0)
                                   ;	                {
                                   ;	                    printf(" no pudo abrirse CON0") ;
                                   ;	                    return(-1) ;
                                   ;	                }
                                   ;	                if (ioctl(dfCon, 0x0003, num) == -1)
                                   ;	                {
                                   ;	                    printf(" numero de consola erroneo (%i)", num) ;
                                   ;	                    return(-1) ;
                                   ;	                }
                                   ;	                return(0) ;
                                   ;	            }
                                   ;	        }
                                   ;	    return(formato()) ;
                                   ;	#endif
                                   ;		
                                   ;	}
                                   ;	
000017D5  C9                    	leave	
000017D6                        	ret	
000017D7                        _main	endp
000017D7                        _TEXT	ends
00000000                        _BSS	segment word public 'BSS'
00000000                        _info	label	word
00000000  000000000000000000    	db	12 dup (?)
0000000C                        _BSS	ends
000001D5                        _DATA	segment word public 'DATA'
000001D5                        s@	label	byte
000001D5  07                    	db	7
000001D6  00                    	db	0
000001D7  07                    	db	7
000001D8  00                    	db	0
000001D9  20666F726D61746F3A    	db	' formato: CONSOLA [ [ -i | -q | -c | -l ] [ num ] | -N | -n |'
00000216  202D75207C202D6B20    	db	' -u | -k | -h ] '
00000226  00                    	db	0
00000227  0A                    	db	10
00000228  0A                    	db	10
00000229  00                    	db	0
0000022A  0A                    	db	10
0000022B  00                    	db	0
0000022C  0A                    	db	10
0000022D  0A                    	db	10
0000022E  00                    	db	0
0000022F  0A                    	db	10
00000230  0A                    	db	10
00000231  20696E7374616C612F    	db	' instala/desinstala el driver de la consola'
0000025C  0A                    	db	10
0000025D  0A                    	db	10
0000025E  206F7063696F6E6573    	db	' opciones: (por defecto -i y num = 6)'
00000283  0A                    	db	10
00000284  0A                    	db	10
00000285  2020202020202D6920    	db	'      -i  : instala el driver (usar &)'
000002AB  0A                    	db	10
000002AC  2020202020202D7120    	db	'      -q  : instala sin mensajes de salida (&)'
000002DA  0A                    	db	10
000002DB  2020202020202D6320    	db	'      -c  : cambia la consola actual a la num'
00000308  0A                    	db	10
00000309  2020202020202D6C20    	db	'      -l  : establece en numero de lineas a num'
00000338  0A                    	db	10
00000339  2020202020202D6E20    	db	'      -n  : status = numero de consola actual'
00000366  0A                    	db	10
00000367  2020202020202D6E71    	db	'      -nq : como -n pero sin mensaje por pantalla'
00000398  0A                    	db	10
00000399  2020202020206E756D    	db	'      num : numero de consolas (o nueva c.)'
000003C4  0A                    	db	10
000003C5  2020202020202D7520    	db	'      -u  : desintala el driver'
000003E4  0A                    	db	10
000003E5  2020202020202D6B20    	db	'      -k  : desintala el driver (matando)'
0000040E  0A                    	db	10
0000040F  2020202020202D6820    	db	'      -h  : muestra este help'
0000042C  0A                    	db	10
0000042D  00                    	db	0
0000042E  434F4E534F4C41        	db	'CONSOLA'
00000435  00                    	db	0
00000436  434F4E20              	db	'CON '
0000043A  00                    	db	0
0000043B  207469706F20646520    	db	' tipo de fichero erroneo'
00000453  00                    	db	0
00000454  206E756D65726F2064    	db	' numero de recurso erroneo'
0000046E  00                    	db	0
0000046F  20434F4E2569206E6F    	db	' CON%i nombre de fichero ya existente'
00000494  00                    	db	0
00000495  206E6F206861792064    	db	' no hay descriptores de fichero libres'
000004BB  00                    	db	0
000004BC  206E6F20686120706F    	db	' no ha podido crearse el fichero CON%i'
000004E2  00                    	db	0
000004E3  434F4E534F4C41        	db	'CONSOLA'
000004EA  00                    	db	0
000004EB  54494D4552            	db	'TIMER'
000004F0  00                    	db	0
000004F1  54494D4552            	db	'TIMER'
000004F6  00                    	db	0
000004F7  0A                    	db	10
000004F8  0A                    	db	10
000004F9  206E6F20686120706F    	db	' no ha podido encolarse el callback en el TIMER '
00000529  0A                    	db	10
0000052A  00                    	db	0
0000052B  0A                    	db	10
0000052C  0A                    	db	10
0000052D  206E6F20686120706F    	db	' no ha podido encolarse el callback en el TIMER '
0000055D  0A                    	db	10
0000055E  00                    	db	0
0000055F  0A                    	db	10
00000560  0A                    	db	10
00000561  207265637572736F20    	db	' recurso CONSOLA instalado (ficheros: CON0 ...) '
00000591  0A                    	db	10
00000592  00                    	db	0
00000593  0A                    	db	10
00000594  0A                    	db	10
00000595  00                    	db	0
00000596  207469706F20646520    	db	' tipo de recurso erroneo '
000005AF  00                    	db	0
000005B0  2064656D6173696164    	db	' demasiados vectores de interrupcion '
000005D5  00                    	db	0
000005D6  20434F4E534F4C4120    	db	' CONSOLA nombre de recurso ya existente '
000005FE  00                    	db	0
000005FF  206E6F206861792064    	db	' no hay descriptores de recurso libres '
00000626  00                    	db	0
00000627  206E756D65726F2064    	db	' numero de vector de interrupcion ya usado '
00000652  00                    	db	0
00000653  206E6F20686120706F    	db	' no ha podido crearse el recurso CONSOLA '
0000067C  00                    	db	0
0000067D  0A                    	db	10
0000067E  00                    	db	0
0000067F  54494D4552            	db	'TIMER'
00000684  00                    	db	0
00000685  206E6F207075646F20    	db	' no pudo eliminarse el callback del TIMER '
000006AF  00                    	db	0
000006B0                        _DATA	ends
000017D7                        _TEXT	segment byte public 'CODE'
000017D7                        _TEXT	ends
                                	extrn	_eliminarPC2c:near
                                	extrn	_encolarPC2c:near
                                	extrn	_desencolarPC2c:near
                                	extrn	_inicializarPC2c:near
                                	extrn	_car:byte
                                	extrn	_comprobarAmpersand:near
                                	extrn	_open:near
                                	extrn	_close:near
                                	extrn	_getpindx:near
                                	extrn	_obtenInfoSO1:near
                                	extrn	_crearRecurso:near
                                	extrn	_crearFichero:near
                                	extrn	_esperarDesinstalacion:near
                                	extrn	_destruirRecurso:near
                                	extrn	_encolarCcbRecurso:near
                                	extrn	_eliminarCcbRecurso:near
                                	extrn	_ll_devolverBloque:near
                                	extrn	_printf:near
                                	extrn	_getchar:near
                                	extrn	_strcpy:near
                                	extrn	_leerTeclaListaBDA:near
                                	extrn	_teclaListaBDA:near
                                	extrn	_cambiarTeclaListaBDA:near
                                	extrn	_borrarPantalla:near
                                	extrn	_borrarCPantalla:near
                                	extrn	_copiarCPantalla:near
                                	extrn	_scrollCPantalla:near
                                	extrn	_ptrPant:dword
                                	extrn	_redimensionable:word
                                	extrn	_inicBiosCrt:near
                                	extrn	_setCursorVisibilidad:near
                                	extrn	_redimensionar:near
                                	extrn	_inicCrtHw:near
                                	extrn	_goToXYHw:near
                                	extrn	_cursorF:byte
                                	extrn	_cursorC:byte
                                	extrn	_printCarVideo:near
                                	extrn	_printGenLn:near
                                	extrn	_printGenStr:near
                                	extrn	_printGenStrHasta:near
                                	extrn	_printGenDec:near
                                	extrn	_printGenLDec:near
                                	extrn	_printGenInt:near
                                	extrn	_printGenLInt:near
                                	extrn	_printGenHex:near
                                	extrn	_printGenLHex:near
                                	extrn	_printGenPtr:near
                                	public	_tablaSP
                                	public	_info
                                	public	_rec_consola
                                	public	_descConsola
                                	public	_maxConsolas
                                	public	_consolaDeSuperficie
                                	public	_nbytesProceso
                                	public	_dirProceso
                                	public	_meter
                                	public	_sacar
                                	public	_printCarConsola
                                	public	_goToXYConsola
                                	public	_establecerConsolaDeSuperficie
                                	public	_salvarConsolaDeSuperficie
                                	public	_openConsola
                                	public	_releaseConsola
                                	public	_readConsola
                                	public	_aio_readConsola
                                	public	_writeConsola
                                	public	_aio_writeConsola
                                	public	_lseekConsola
                                	extrn	N_LMOD@:far
                                	extrn	N_LDIV@:far
                                	public	_fcntlConsola
                                	public	_ioctlConsola
                                	public	_eliminarConsola
                                	public	_keyStroke
                                	public	_scanCode
                                	public	_scanCodeAnt
                                	public	_AltPulsada
                                	public	_CtrlPulsada
                                	public	_isr_consola
                                	public	_congen
                                	public	_pCon
                                	public	_printLnConsola
                                	public	_printStrConsola
                                	public	_printStrHastaConsola
                                	public	_printDecConsola
                                	public	_printIntConsola
                                	public	_printLIntConsola
                                	public	_printLDecConsola
                                	public	_printHexConsola
                                	public	_printLHexConsola
                                	public	_printPtrConsola
                                	public	_strCbBlancos
                                	public	_strCbCON
                                	public	_cbForTimer
                                	public	_finishConsola
                                	public	_finCodeDriver
                                	public	_descCcbConsola
                                	public	_mostrarFormato
                                	public	_formato
                                	public	_help
                                	public	_hacerTablaNula
                                	public	_establecerTablaDeConversion
                                	public	_integrarConsola
                                	public	_desintegrarConsola
                                	public	_instalarConsola
                                	public	_main
                                	extrn	__setargv__:far
                                	end


Macros:

                N a m e                 Type

$comm  . . . . . . . . . . . . .        Proc
@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

$$SYMBOLS  . . . . . . . . . . .        32 Bit   000011E3 Byte    Private 'DEBSYM'
$$TYPES  . . . . . . . . . . . .        32 Bit   00000004 Byte    Private 'DEBTYP'
_TEXT  . . . . . . . . . . . . .        16 Bit   17D7     Byte    Public  'CODE'
DGROUP . . . . . . . . . . . . .        GROUP
_DATA  . . . . . . . . . . . . .        16 Bit   06B0     Word    Public  'DATA'
_BSS . . . . . . . . . . . . . .        16 Bit   000C     Word    Public  'BSS'


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

_aio_readConsola . . . . . . . .        P Far    0595     _TEXT    00DD Public   
_aio_writeConsola  . . . . . . .        P Far    06E4     _TEXT    0018 Public   
_cbForTimer  . . . . . . . . . .        P Far    10B5     _TEXT    00F6 Public   
_desintegrarConsola  . . . . . .        P Near   16D2     _TEXT    005B Public   
_eliminarConsola . . . . . . . .        P Far    09B6     _TEXT    006D Public   
_establecerConsolaDeSuperficie .        P Near   0354     _TEXT    0075 Public   
_establecerTablaDeConversion . .        P Near   1211     _TEXT    0053 Public   
_fcntlConsola  . . . . . . . . .        P Far    07AC     _TEXT    0003 Public   
_finCodeDriver . . . . . . . . .        P Near   11AE     _TEXT    0001 Public   
_finishConsola . . . . . . . . .        P Near   11AB     _TEXT    0003 Public   
_formato . . . . . . . . . . . .        P Near   11BA     _TEXT    001B Public   
_goToXYConsola . . . . . . . . .        P Near   02DA     _TEXT    007A Public   
_hacerTablaNula  . . . . . . . .        P Near   11EF     _TEXT    0022 Public   
_help  . . . . . . . . . . . . .        P Near   11D5     _TEXT    001A Public   
_instalarConsola . . . . . . . .        P Near   172D     _TEXT    0054 Public   
_integrarConsola . . . . . . . .        P Near   1284     _TEXT    043C Public   
_ioctlConsola  . . . . . . . . .        P Far    07AF     _TEXT    0207 Public   
_isr_consola . . . . . . . . . .        P Far    0A23     _TEXT    0539 Public   
_lseekConsola  . . . . . . . . .        P Far    06FC     _TEXT    00B0 Public   
_main  . . . . . . . . . . . . .        P Near   1781     _TEXT    0056 Public   
_meter . . . . . . . . . . . . .        P Near   0000     _TEXT    004C Public   
_mostrarFormato  . . . . . . . .        P Near   11AF     _TEXT    000B Public   
_openConsola . . . . . . . . . .        P Far    0430     _TEXT    0003 Public   
_pCon  . . . . . . . . . . . . .        P Near   0F94     _TEXT    0016 Public   
_printCarConsola . . . . . . . .        P Near   008F     _TEXT    023D Public   
_printDecConsola . . . . . . . .        P Near   0FF6     _TEXT    001A Public   
_printHexConsola . . . . . . . .        P Near   1064     _TEXT    001A Public   
_printIntConsola . . . . . . . .        P Near   1010     _TEXT    001A Public   
_printLDecConsola  . . . . . . .        P Near   1047     _TEXT    001D Public   
_printLHexConsola  . . . . . . .        P Near   107E     _TEXT    001D Public   
_printLIntConsola  . . . . . . .        P Near   102A     _TEXT    001D Public   
_printLnConsola  . . . . . . . .        P Near   0FAA     _TEXT    0012 Public   
_printPtrConsola . . . . . . . .        P Near   109B     _TEXT    001A Public   
_printStrConsola . . . . . . . .        P Near   0FBC     _TEXT    001A Public   
_printStrHastaConsola  . . . . .        P Near   0FD6     _TEXT    0020 Public   
_readConsola . . . . . . . . . .        P Far    0436     _TEXT    015F Public   
_releaseConsola  . . . . . . . .        P Far    0433     _TEXT    0003 Public   
_sacar . . . . . . . . . . . . .        P Near   004C     _TEXT    0043 Public   
_salvarConsolaDeSuperficie . . .        P Near   03C9     _TEXT    0067 Public   
_writeConsola  . . . . . . . . .        P Far    0672     _TEXT    0072 Public   


Symbols:

                N a m e                 Type       Value     Attr

??version  . . . . . . . . . . .        Text   0504
?debug . . . . . . . . . . . . .        Text   ;
@10@10 . . . . . . . . . . . . .        L Near           62Ch _TEXT 
@10@11 . . . . . . . . . . . . .        L Near           634h _TEXT 
@10@14 . . . . . . . . . . . . .        L Near           654h _TEXT 
@10@15 . . . . . . . . . . . . .        L Near           666h _TEXT 
@10@9  . . . . . . . . . . . . .        L Near           621h _TEXT 
@11@13 . . . . . . . . . . . . .        L Near           6DEh _TEXT 
@11@7  . . . . . . . . . . . . .        L Near           69Bh _TEXT 
@11@9  . . . . . . . . . . . . .        L Near           6B8h _TEXT 
@13@11 . . . . . . . . . . . . .        L Near           78Bh _TEXT 
@13@12 . . . . . . . . . . . . .        L Near           795h _TEXT 
@13@13 . . . . . . . . . . . . .        L Near           797h _TEXT 
@13@14 . . . . . . . . . . . . .        L Near           7A3h _TEXT 
@13@8  . . . . . . . . . . . . .        L Near           74Dh _TEXT 
@15@11 . . . . . . . . . . . . .        L Near           7F5h _TEXT 
@15@12 . . . . . . . . . . . . .        L Near           7F8h _TEXT 
@15@14 . . . . . . . . . . . . .        L Near           807h _TEXT 
@15@17 . . . . . . . . . . . . .        L Near           82Dh _TEXT 
@15@21 . . . . . . . . . . . . .        L Near           847h _TEXT 
@15@23 . . . . . . . . . . . . .        L Near           857h _TEXT 
@15@25 . . . . . . . . . . . . .        L Near           8C4h _TEXT 
@15@27 . . . . . . . . . . . . .        L Near           8FEh _TEXT 
@15@30 . . . . . . . . . . . . .        L Near           9A1h _TEXT 
@15@31 . . . . . . . . . . . . .        L Near           9A4h _TEXT 
@15@32 . . . . . . . . . . . . .        L Near           9B0h _TEXT 
@15@9  . . . . . . . . . . . . .        L Near           7E0h _TEXT 
@16@10 . . . . . . . . . . . . .        L Near           A14h _TEXT 
@16@11 . . . . . . . . . . . . .        L Near           A1Eh _TEXT 
@16@7  . . . . . . . . . . . . .        L Near           9CCh _TEXT 
@16@9  . . . . . . . . . . . . .        L Near           A11h _TEXT 
@17@11 . . . . . . . . . . . . .        L Near           A67h _TEXT 
@17@13 . . . . . . . . . . . . .        L Near           A73h _TEXT 
@17@15 . . . . . . . . . . . . .        L Near           A81h _TEXT 
@17@17 . . . . . . . . . . . . .        L Near           A8Dh _TEXT 
@17@20 . . . . . . . . . . . . .        L Near           AA9h _TEXT 
@17@24 . . . . . . . . . . . . .        L Near           AC9h _TEXT 
@17@25 . . . . . . . . . . . . .        L Near           ACFh _TEXT 
@17@27 . . . . . . . . . . . . .        L Near           AE6h _TEXT 
@17@28 . . . . . . . . . . . . .        L Near           AE8h _TEXT 
@17@31 . . . . . . . . . . . . .        L Near           B07h _TEXT 
@17@32 . . . . . . . . . . . . .        L Near           B0Ah _TEXT 
@17@37 . . . . . . . . . . . . .        L Near           B26h _TEXT 
@17@40 . . . . . . . . . . . . .        L Near           B3Ah _TEXT 
@17@42 . . . . . . . . . . . . .        L Near           B47h _TEXT 
@17@43 . . . . . . . . . . . . .        L Near           B4Ch _TEXT 
@17@44 . . . . . . . . . . . . .        L Near           B4Eh _TEXT 
@17@46 . . . . . . . . . . . . .        L Near           B5Bh _TEXT 
@17@48 . . . . . . . . . . . . .        L Near           B68h _TEXT 
@17@49 . . . . . . . . . . . . .        L Near           B6Dh _TEXT 
@17@51 . . . . . . . . . . . . .        L Near           BC7h _TEXT 
@17@53 . . . . . . . . . . . . .        L Near           C0Bh _TEXT 
@17@56 . . . . . . . . . . . . .        L Near           CAEh _TEXT 
@17@57 . . . . . . . . . . . . .        L Near           CB1h _TEXT 
@17@58 . . . . . . . . . . . . .        L Near           CBDh _TEXT 
@17@59 . . . . . . . . . . . . .        L Near           CBFh _TEXT 
@17@62 . . . . . . . . . . . . .        L Near           CC9h _TEXT 
@17@65 . . . . . . . . . . . . .        L Near           CD4h _TEXT 
@17@68 . . . . . . . . . . . . .        L Near           D00h _TEXT 
@17@70 . . . . . . . . . . . . .        L Near           D0Bh _TEXT 
@17@71 . . . . . . . . . . . . .        L Near           D0Dh _TEXT 
@17@75 . . . . . . . . . . . . .        L Near           DABh _TEXT 
@17@78 . . . . . . . . . . . . .        L Near           DE4h _TEXT 
@17@79 . . . . . . . . . . . . .        L Near           DF4h _TEXT 
@17@82 . . . . . . . . . . . . .        L Near           F21h _TEXT 
@17@83 . . . . . . . . . . . . .        L Near           F23h _TEXT 
@17@85 . . . . . . . . . . . . .        L Near           F58h _TEXT 
@17@86 . . . . . . . . . . . . .        L Near           F59h _TEXT 
@17@C212 . . . . . . . . . . . .        Word             F5Ch _TEXT 
@1@4 . . . . . . . . . . . . . .        L Near            37h _TEXT 
@1@5 . . . . . . . . . . . . . .        L Near            4Ah _TEXT 
@29@8  . . . . . . . . . . . . .        L Near          112Eh _TEXT 
@29@9  . . . . . . . . . . . . .        L Near          1175h _TEXT 
@2@3 . . . . . . . . . . . . . .        L Near            77h _TEXT 
@35@2  . . . . . . . . . . . . .        L Near          11FAh _TEXT 
@35@4  . . . . . . . . . . . . .        L Near          1208h _TEXT 
@36@10 . . . . . . . . . . . . .        L Near          1262h _TEXT 
@36@4  . . . . . . . . . . . . .        L Near          1246h _TEXT 
@36@7  . . . . . . . . . . . . .        L Near          1255h _TEXT 
@36@8  . . . . . . . . . . . . .        L Near          1259h _TEXT 
@36@9  . . . . . . . . . . . . .        L Near          125Bh _TEXT 
@36@C18  . . . . . . . . . . . .        Word            1264h _TEXT 
@37@10 . . . . . . . . . . . . .        L Near          13F9h _TEXT 
@37@12 . . . . . . . . . . . . .        L Near          1442h _TEXT 
@37@14 . . . . . . . . . . . . .        L Near          1452h _TEXT 
@37@16 . . . . . . . . . . . . .        L Near          1472h _TEXT 
@37@19 . . . . . . . . . . . . .        L Near          157Ch _TEXT 
@37@23 . . . . . . . . . . . . .        L Near          15B6h _TEXT 
@37@24 . . . . . . . . . . . . .        L Near          15BCh _TEXT 
@37@25 . . . . . . . . . . . . .        L Near          15C2h _TEXT 
@37@26 . . . . . . . . . . . . .        L Near          15CEh _TEXT 
@37@27 . . . . . . . . . . . . .        L Near          15D2h _TEXT 
@37@28 . . . . . . . . . . . . .        L Near          15DAh _TEXT 
@37@29 . . . . . . . . . . . . .        L Near          15E4h _TEXT 
@37@3  . . . . . . . . . . . . .        L Near          12ABh _TEXT 
@37@30 . . . . . . . . . . . . .        L Near          15EAh _TEXT 
@37@31 . . . . . . . . . . . . .        L Near          15F6h _TEXT 
@37@32 . . . . . . . . . . . . .        L Near          15F9h _TEXT 
@37@36 . . . . . . . . . . . . .        L Near          164Ch _TEXT 
@37@37 . . . . . . . . . . . . .        L Near          164Eh _TEXT 
@37@38 . . . . . . . . . . . . .        L Near          1658h _TEXT 
@37@4  . . . . . . . . . . . . .        L Near          12B1h _TEXT 
@37@40 . . . . . . . . . . . . .        L Near          1668h _TEXT 
@37@41 . . . . . . . . . . . . .        L Near          166Ch _TEXT 
@37@45 . . . . . . . . . . . . .        L Near          1689h _TEXT 
@37@46 . . . . . . . . . . . . .        L Near          168Fh _TEXT 
@37@47 . . . . . . . . . . . . .        L Near          1695h _TEXT 
@37@48 . . . . . . . . . . . . .        L Near          169Bh _TEXT 
@37@49 . . . . . . . . . . . . .        L Near          16A1h _TEXT 
@37@50 . . . . . . . . . . . . .        L Near          16A7h _TEXT 
@37@51 . . . . . . . . . . . . .        L Near          16ABh _TEXT 
@37@6  . . . . . . . . . . . . .        L Near          12E6h _TEXT 
@37@8  . . . . . . . . . . . . .        L Near          13E1h _TEXT 
@37@C148 . . . . . . . . . . . .        Word            16CAh _TEXT 
@37@C153 . . . . . . . . . . . .        Word            16C0h _TEXT 
@38@3  . . . . . . . . . . . . .        L Near          1705h _TEXT 
@38@5  . . . . . . . . . . . . .        L Near          1728h _TEXT 
@39@3  . . . . . . . . . . . . .        L Near          173Fh _TEXT 
@39@5  . . . . . . . . . . . . .        L Near          1761h _TEXT 
@39@6  . . . . . . . . . . . . .        L Near          177Ch _TEXT 
@3@10  . . . . . . . . . . . . .        L Near           156h _TEXT 
@3@12  . . . . . . . . . . . . .        L Near           1B0h _TEXT 
@3@13  . . . . . . . . . . . . .        L Near           1B3h _TEXT 
@3@15  . . . . . . . . . . . . .        L Near           1F0h _TEXT 
@3@16  . . . . . . . . . . . . .        L Near           1FAh _TEXT 
@3@17  . . . . . . . . . . . . .        L Near           1FDh _TEXT 
@3@18  . . . . . . . . . . . . .        L Near           201h _TEXT 
@3@19  . . . . . . . . . . . . .        L Near           20Eh _TEXT 
@3@22  . . . . . . . . . . . . .        L Near           2C8h _TEXT 
@3@3 . . . . . . . . . . . . . .        L Near            A9h _TEXT 
@3@7 . . . . . . . . . . . . . .        L Near           115h _TEXT 
@3@8 . . . . . . . . . . . . . .        L Near           13Ch _TEXT 
@3@9 . . . . . . . . . . . . . .        L Near           154h _TEXT 
@3@C62 . . . . . . . . . . . . .        Word             2CCh _TEXT 
@40@2  . . . . . . . . . . . . .        L Near          1799h _TEXT 
@40@4  . . . . . . . . . . . . .        L Near          17A9h _TEXT 
@40@5  . . . . . . . . . . . . .        L Near          17C9h _TEXT 
@4@3 . . . . . . . . . . . . . .        L Near           2F4h _TEXT 
@4@4 . . . . . . . . . . . . . .        L Near           304h _TEXT 
@4@5 . . . . . . . . . . . . . .        L Near           309h _TEXT 
@4@7 . . . . . . . . . . . . . .        L Near           322h _TEXT 
@4@8 . . . . . . . . . . . . . .        L Near           350h _TEXT 
@9@12  . . . . . . . . . . . . .        L Near           4E9h _TEXT 
@9@13  . . . . . . . . . . . . .        L Near           4FBh _TEXT 
@9@17  . . . . . . . . . . . . .        L Near           50Ah _TEXT 
@9@18  . . . . . . . . . . . . .        L Near           50Ch _TEXT 
@9@21  . . . . . . . . . . . . .        L Near           533h _TEXT 
@9@22  . . . . . . . . . . . . .        L Near           545h _TEXT 
@9@24  . . . . . . . . . . . . .        L Near           58Fh _TEXT 
@9@9 . . . . . . . . . . . . . .        L Near           4C2h _TEXT 
@@0  . . . . . . . . . . . . . .        L Near           10Eh _TEXT 
@@1  . . . . . . . . . . . . . .        L Near           810h _TEXT 
@@10 . . . . . . . . . . . . . .        L Near           CE3h _TEXT 
@@11 . . . . . . . . . . . . . .        L Near           D38h _TEXT 
@@12 . . . . . . . . . . . . . .        L Near           E1Dh _TEXT 
@@13 . . . . . . . . . . . . . .        L Near          13EDh _TEXT 
@@14 . . . . . . . . . . . . . .        L Near          1567h _TEXT 
@@15 . . . . . . . . . . . . . .        L Near          1605h _TEXT 
@@2  . . . . . . . . . . . . . .        L Near           8F7h _TEXT 
@@3  . . . . . . . . . . . . . .        L Near           90Ch _TEXT 
@@4  . . . . . . . . . . . . . .        L Near           9B0h _TEXT 
@@5  . . . . . . . . . . . . . .        L Near           AB3h _TEXT 
@@6  . . . . . . . . . . . . . .        L Near           B14h _TEXT 
@@7  . . . . . . . . . . . . . .        L Near           C01h _TEXT 
@@8  . . . . . . . . . . . . . .        L Near           C19h _TEXT 
@@9  . . . . . . . . . . . . . .        L Near           CBDh _TEXT 
N_LDIV@  . . . . . . . . . . . .        L Far16            0h External 
N_LMOD@  . . . . . . . . . . . .        L Far16            0h External 
_AltPulsada  . . . . . . . . . .        Byte             1C1h _DATA Public 
_CtrlPulsada . . . . . . . . . .        Byte             1C2h _DATA Public 
_SP0_SO1 . . . . . . . . . . . .        Word              36h _DATA 
__setargv__  . . . . . . . . . .        L Far16            0h External 
_activarProceso  . . . . . . . .        DWord             48h _DATA 
_bloquearProcesoActual . . . . .        DWord             50h _DATA 
_borrarCPantalla . . . . . . . .        L Near16           0h External 
_borrarPantalla  . . . . . . . .        L Near16           0h External 
_buscarNuevoProcesoActual  . . .        DWord             4Ch _DATA 
_cambiarTeclaListaBDA  . . . . .        L Near16           0h External 
_car . . . . . . . . . . . . . .        Byte               0h External 
_close . . . . . . . . . . . . .        L Near16           0h External 
_comprobarAmpersand  . . . . . .        L Near16           0h External 
_congen  . . . . . . . . . . . .        Byte             1C3h _DATA Public 
_consolaDeSuperficie . . . . . .        Word             15Ch _DATA Public 
_copiarCPantalla . . . . . . . .        L Near16           0h External 
_crearFichero  . . . . . . . . .        L Near16           0h External 
_crearRecurso  . . . . . . . . .        L Near16           0h External 
_cursorC . . . . . . . . . . . .        Byte               0h External 
_cursorF . . . . . . . . . . . .        Byte               0h External 
_descCcbConsola  . . . . . . . .        Word             1C9h _DATA Public 
_descConsola . . . . . . . . . .        DWord            156h _DATA Public 
_desencolarPC2c  . . . . . . . .        L Near16           0h External 
_destruirRecurso . . . . . . . .        L Near16           0h External 
_dirProceso  . . . . . . . . . .        DWord            17Eh _DATA Public 
_eliminarCcbRecurso  . . . . . .        L Near16           0h External 
_eliminarPC2c  . . . . . . . . .        L Near16           0h External 
_encolarCcbRecurso . . . . . . .        L Near16           0h External 
_encolarPC2c . . . . . . . . . .        L Near16           0h External 
_esperarDesinstalacion . . . . .        L Near16           0h External 
_getchar . . . . . . . . . . . .        L Near16           0h External 
_getpindx  . . . . . . . . . . .        L Near16           0h External 
_goToXYHw  . . . . . . . . . . .        L Near16           0h External 
_info  . . . . . . . . . . . . .        Word               0h _BSS Public 
_inicBiosCrt . . . . . . . . . .        L Near16           0h External 
_inicCrtHw . . . . . . . . . . .        L Near16           0h External 
_inicializarPC2c . . . . . . . .        L Near16           0h External 
_keyStroke . . . . . . . . . . .        Byte             1BEh _DATA Public 
_leerTeclaListaBDA . . . . . . .        L Near16           0h External 
_ll_devolverBloque . . . . . . .        L Near16           0h External 
_maxConsolas . . . . . . . . . .        Byte             15Ah _DATA Public 
_nbytesProceso . . . . . . . . .        Word             15Eh _DATA Public 
_obtenInfoSO1  . . . . . . . . .        L Near16           0h External 
_open  . . . . . . . . . . . . .        L Near16           0h External 
_printCarVideo . . . . . . . . .        L Near16           0h External 
_printGenDec . . . . . . . . . .        L Near16           0h External 
_printGenHex . . . . . . . . . .        L Near16           0h External 
_printGenInt . . . . . . . . . .        L Near16           0h External 
_printGenLDec  . . . . . . . . .        L Near16           0h External 
_printGenLHex  . . . . . . . . .        L Near16           0h External 
_printGenLInt  . . . . . . . . .        L Near16           0h External 
_printGenLn  . . . . . . . . . .        L Near16           0h External 
_printGenPtr . . . . . . . . . .        L Near16           0h External 
_printGenStr . . . . . . . . . .        L Near16           0h External 
_printGenStrHasta  . . . . . . .        L Near16           0h External 
_printf  . . . . . . . . . . . .        L Near16           0h External 
_ptrActivarAlEpilogo . . . . . .        DWord              8h _DATA 
_ptrC2cPFR . . . . . . . . . . .        DWord             1Ah _DATA 
_ptrCcbAlEpilogo . . . . . . . .        DWord             2Ah _DATA 
_ptrContRodajas  . . . . . . . .        DWord             38h _DATA 
_ptrContTicsRodaja . . . . . . .        DWord             3Ch _DATA 
_ptrDescFichero  . . . . . . . .        DWord             12h _DATA 
_ptrDescProceso  . . . . . . . .        DWord              Ch _DATA 
_ptrDescRecurso  . . . . . . . .        DWord             16h _DATA 
_ptrEnHalt . . . . . . . . . . .        DWord             22h _DATA 
_ptrHayTic . . . . . . . . . . .        DWord             26h _DATA 
_ptrIndProcesoActual . . . . . .        DWord              0h _DATA 
_ptrNivelActivacionSO1 . . . . .        DWord             1Eh _DATA 
_ptrPant . . . . . . . . . . . .        DWord              0h External 
_ptrSP_Proceso . . . . . . . . .        DWord             32h _DATA 
_ptrSS_Proceso . . . . . . . . .        DWord             2Eh _DATA 
_ptrTramaProceso . . . . . . . .        DWord              4h _DATA 
_ptrVIOrg  . . . . . . . . . . .        DWord             40h _DATA 
_rec_consola . . . . . . . . . .        Word             154h _DATA Public 
_redimensionable . . . . . . . .        Word               0h External 
_redimensionar . . . . . . . . .        L Near16           0h External 
_scanCode  . . . . . . . . . . .        Byte             1BFh _DATA Public 
_scanCodeAnt . . . . . . . . . .        Byte             1C0h _DATA Public 
_scrollCPantalla . . . . . . . .        L Near16           0h External 
_setCursorVisibilidad  . . . . .        L Near16           0h External 
_sigProceso  . . . . . . . . . .        DWord             44h _DATA 
_strCbBlancos  . . . . . . . . .        Byte             1C4h _DATA Public 
_strCbCON  . . . . . . . . . . .        Byte             1C5h _DATA Public 
_strcpy  . . . . . . . . . . . .        L Near16           0h External 
_tablaSP . . . . . . . . . . . .        Byte              54h _DATA Public 
_tamDescProceso  . . . . . . . .        Word              10h _DATA 
_teclaListaBDA . . . . . . . . .        L Near16           0h External 
b@ . . . . . . . . . . . . . . .        Byte               0h _BSS 
b@w  . . . . . . . . . . . . . .        Word               0h _BSS 
d@ . . . . . . . . . . . . . . .        Byte               0h _DATA 
d@w  . . . . . . . . . . . . . .        Word               0h _DATA 
s@ . . . . . . . . . . . . . . .        Byte             1D5h _DATA 

contkd.asm: 5810 lines, 3 passes, 31 ms, 0 warnings, 0 errors
